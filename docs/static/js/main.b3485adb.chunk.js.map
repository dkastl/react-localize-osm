{"version":3,"sources":["components/Map/MapView.js","components/Map/getIcon.js","components/Map/MarkerWithFocus.js","config/map.js","components/Map/Map.js","components/Map/index.js","components/NotLoggedInGreeting.js","components/ItemsFilters/CheckboxButton.js","components/ItemsFilters/CheckboxGroup.js","components/ItemsFilters/CheckboxDropdownItem.js","components/ItemsFilters/CheckboxDropdownGroup.js","components/common/LoadingButton.js","components/ItemsFilters/ItemsFilters.js","components/ItemsFilters/index.js","components/ItemsTable/ItemTableHeader.js","components/ItemsTable/ItemTableRow.js","components/ItemsTable/ItemsTable.js","components/ItemsTable/index.js","components/AppNavbar/UserLoggedIn.js","components/AppNavbar/UserLoggedOut.js","components/AppNavbar/index.js","components/AppNavbar/AppNavbar.js","components/ChangesetSettings/ChangesetBox.js","components/ChangesetSettings/index.js","components/ChangesetSettings/ChangesetSettings.js","api/Overpass.js","api/Nominatim.js","api/OSM.js","utils/CookieManager.js","utils/UpdatesStorage.js","config/auth.js","config/interface.js","App.js","reportWebVitals.js","index.js"],"names":["toArray","coord","lat","lng","MapView","onLoad","onMove","onClick","center","zoom","map","useMap","c","getCenter","flyTo","useMapEvents","moveend","bbox","Object","values","getBounds","getZoom","click","createIcon","type","color","shape","L","AwesomeMarkers","icon","prefix","markerColor","className","createIcons","touched","focused","defaultIcon","iconTypes","cat","tag","iconType","getIcon","item","find","tags","indexOf","MarkerWithFocus","position","markerRef","useRef","eventHandlers","useMemo","Marker","ref","mapConfig","tileUrl","attribution","minZoom","maxZoom","getItemPosition","lon","Map","items","lang","handlers","onClickItem","onClickMap","addLang","MapContainer","scrollWheelZoom","TileLayer","url","id","ScaleControl","NotLoggedInGreeting","href","CheckboxButton","vkey","title","onChange","checked","Button","variant","size","FormCheck","CheckboxGroup","itemsList","selected","min","Checkbox","key","i","length","slice","toggle","CheckboxDropdownItem","Dropdown","Item","onMouseDown","e","stopPropagation","active","CheckboxDropdownGroup","useState","dpShow","setDpShow","useEffect","fn","document","addEventListener","removeEventListener","DropdownButton","show","preventDefault","rootCloseEvent","LoadingButton","loading","disabled","props","Spinner","as","animation","ItemsFilters","filters","setFilter","languages","tagsList","languagesList","getItems","updateItems","setLanguages","onKeyUp","useCallback","charCode","onClickShortcut","t","target","innerText","console","log","Form","Group","controlId","Label","Control","value","onKeyPress","Row","updates","ItemTableHeader","titles","style","cursor","toLowerCase","category","onFocus","onBlur","onIconClick","firstInput","activeElement","current","focus","Badge","wikidata","rel","name","float","compareTags","i1","i2","field","localeCompare","caterory","it","compareCategoryTag","compareNames","ItemsTable","categories","sortField","setField","sortOrder","setOrder","Table","filter","sort","UserLoggedIn","user","logout","img","Image","src","thumbnail","rounded","Navbar","Text","display_name","UserLoggedOut","login","AppNavbar","bg","Brand","packageJson","loggedIn","ChangesetBox","changeset","onClose","onUpdate","comment","newComment","setComment","parts","cookie","split","pop","shift","getCookie","Card","Body","ChangesetSettings","visible","setVisible","defaultApiUrl","outTypes","Overpass","config","this","apiUrl","query","data","FormData","append","reqId","performance","now","Promise","resolve","reject","fetch","method","headers","body","URLSearchParams","then","response","ok","json","elements","remark","text","catch","err","condition","replace","baseEls","elementsQuery","hideFilled","base","l","join","limit","request","typesIds","NominatimAPI","excludeIds","searchQuery","searchMode","search","q","entries","k","val","params","Math","push","resp","error","appTag","XML_CHAR_MAP","json2xml","v","attrs","children","forEach","s","k1","v1","Array","isArray","k11","obj","ch","attrsStr","createOsm","osm","createOsmChange","changesetId","osmChange","version","generator","modify","nodes","members","nd","constrain","coords","OSMApi","auth","osmAuth","overpass","overpassApiUrl","nominatim","Nominatim","apiRoute","currentChangeset","route","options","opts","xhr","path","content","header","res","JSON","parse","authenticated","authenticate","fetchJson","mode","nominatimIncSearch","collected","exclude","el","place_id","elemsNom","getById","osm_type","osm_id","getTwins","checkChangesetOpen","open","updateChangeset","createChangeset","_getCurrentChangeset","createdId","cb","diffRes","fromEntries","from","getAttribute","CookieManager","duration","cookieDuration","trim","dict","dateStr","Date","toUTCString","hasEmpty","langs","UpdatesStorage","storageKey","window","localStorage","getItem","setItem","stringify","diff","store","itemsSync","n","authConfig","oauth_consumer_key","oauth_secret","cookieKeys","itemCenter","App","cookieManager","osmApi","get","updatesStorage","load","parseURLPath","parseURLQuery","state","itemsToUpdate","focusedItem","watchFocus","serverMsg","lastReqTags","hash","location","street","city","county","country","postalcode","decodeURIComponent","searchParams","decodeURI","parseInt","isNaN","hide_filled","getCurrentChangeset","setState","alert","_t","closeChangeset","write","reload","toFixed","searchParts","structured","searchObj","encodeURIComponent","searchQ","protocol","host","pathname","history","replaceState","pushState","getUser","str","storeLanguages","getLanguages","loadChangeset","getElements","sync","setServerMsg","updateLocation","doneCb","updateElements","patchAndStore","String","toString","itemId","max","btnsDisabled","keys","touchedItems","mapHandlers","updateBbox","bind","updatePosition","focusItem","blurItem","itemHandlers","updateItem","centerItem","changesetHandlers","Container","fluid","Header","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3485adb.chunk.js","sourcesContent":["import {useMapEvents, useMap} from 'react-leaflet';\n\nconst toArray = coord => [coord.lat, coord.lng];\n\nexport default function MapView({onLoad, onMove, onClick, center, zoom}) {\n    const map = useMap();\n    let c = map.getCenter();\n    if(c.lat !== center[0] || c.lng !== center[1])\n        map.flyTo(center, zoom);\n        \n    useMapEvents({\n        moveend: () => {\n            let c = map.getCenter();\n            onMove({\n                bbox: Object.values(map.getBounds()).map(toArray),\n                center: toArray(c),\n                zoom: map.getZoom()\n            });\n        },\n        click: () => {\n            onClick();\n        }\n    });\n    onLoad({\n        bbox: Object.values(map.getBounds())\n            .map(toArray),\n    });\n    return null;\n}\n","import L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.js\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst icons = [\n\n    {cat: \"tourism\", tag: [\"hotel\", \"hostel\"], iconType: \"hotel\"},\n    {cat: \"place\",   tag: [\"city\", \"town\", \"neighborhood\"], iconType: \"city\"},\n    {cat: \"place\",   tag: [\"village\", \"hamlet\"], iconType: \"home\"},\n\n    {cat: \"aeroway\", iconType: \"plane\"},\n    {cat: \"shop\", iconType: \"store\"},\n    {cat: \"historic\", iconType: \"monument\"},\n    {cat: \"leisure\", iconType: \"futbol\"},\n    {cat: \"tourism\", iconType: \"compass\"},\n    {cat: \"highway\", iconType: \"road\"},\n    {cat: \"building\", iconType: \"building\"},\n    {cat: \"natural\", iconType: \"tree\"},\n    {cat: \"waterway\", iconType: \"water\"}\n];\n\nconst createIcon = (type, color, shape) => L.AwesomeMarkers.icon({\n    icon: type,\n    prefix: \"fa\",\n    markerColor: color,\n    className: \"awesome-marker awesome-marker-\" + shape\n});\n\nconst createIcons = ({type, shape, color = \"blue\"}) => ({\n    icon: createIcon(type, color, shape),\n    touched: createIcon(type, \"orange\", shape),\n    focused: createIcon(type, \"red\", shape),\n})\n\nconst defaultIcon =  createIcons({type: \"circle\"});\n\nconst iconTypes = icons.map(icon => ({\n    ...icon,\n    ...createIcons({type: icon.iconType})\n}));\n  \nconst getIcon = (item, touched, focused) => {\n    return (\n        iconTypes.find(icon => \n            (!icon.tag && item[icon.cat]) || \n            (item.tags[icon.cat] && item.tags[icon.cat].indexOf(icon.tag) !== -1)\n        ) || \n        defaultIcon\n    )[focused ? \"focused\" : touched ? \"touched\" : \"icon\"];\n};\n\nexport default getIcon;\n","\nimport {useMemo, useRef} from \"react\";\nimport {Marker} from 'react-leaflet';\nimport getIcon from \"./getIcon\";\n\nexport default function MarkerWithFocus({\n    item, touched, focused, position, onClick\n}) {\n    const markerRef = useRef(null)\n    const eventHandlers = useMemo(\n        () => ({\n            click: onClick\n        }),\n      [onClick],\n    );\n    return (\n        <Marker\n            position={position} \n            icon={getIcon(item, touched, focused)}         \n            eventHandlers={eventHandlers}\n            ref={markerRef}\n        >\n        </Marker>\n    )\n}","/* eslint-disable */\n\nconst OSMtiles = {\n    tileUrl: \"https://tile.tracestrack.com/en/{z}/{x}/{y}.png?key=ad185d84befbbb5463e093c682930866\",\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n};\n\n// localized tiles \n// note that new translations are applied after while\nconst WikimediaTiles = {\n    tileUrl: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\",\n    attribution: `<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia maps</a> | Map data © <a href=\"http://openstreetmap.org/copyright\">OpenStreetMap contributors</a>`,\n    // this will tell Map component to add ?lang={lang} to tileUrl\n    // lang = first language you will choose in the interface\n    addLang: true\n};\n\nconst mapConfig = {\n    ...OSMtiles,   \n    minZoom: 3,\n    maxZoom: 19\n};\nexport default mapConfig;\n","\nimport {MapContainer, TileLayer, ScaleControl} from 'react-leaflet';\nimport MapView from \"./MapView\";\nimport MarkerWithFocus from \"./MarkerWithFocus\";\nimport mapConfig from \"../../config/map\";\n\nconst osmCoordsArr = coord => [coord.lat, coord.lon];\nconst getItemPosition = item => osmCoordsArr(item.center || item);\n\nexport default function Map({\n    center, \n    zoom, \n    items, \n    touched,\n    lang = \"en\",\n    focused, \n    handlers: {onMove, onLoad, onClickItem, onClickMap}\n}) {\n    let tileUrl = mapConfig.tileUrl;\n    if(mapConfig.addLang) {\n        tileUrl += \"?lang=\" + lang;\n    }\n    return (\n        <MapContainer \n            center={center} \n            zoom={zoom} \n            scrollWheelZoom={true} \n            minZoom={mapConfig.minZoom}\n            maxZoom={mapConfig.maxZoom}\n        >\n            <TileLayer\n                attribution={mapConfig.attribution}\n                url={tileUrl}\n                minZoom={mapConfig.minZoom}\n                maxZoom={mapConfig.maxZoom}\n            />\n            <MapView \n                center={center}\n                zoom={zoom} \n                onMove={onMove}\n                onLoad={onLoad}\n                onClick={onClickMap}\n            />\n            {items\n            .map(item => (\n                <MarkerWithFocus \n                    item={item}\n                    position={getItemPosition(item)}\n                    touched={touched.indexOf(item.id) !== -1}\n                    focused={focused === item.id}\n                    onClick={() => onClickItem(item.id)}\n                    key={item.id}   \n                />\n            ))}\n            <ScaleControl />\n        </MapContainer>\n    );\n}","import Map from \"./Map\"\nexport default Map;","export default function NotLoggedInGreeting() {\n    return (\n      <div>\n        <h2>Welcome</h2>\n        <p>OpenStreetMap Localization Tool (OsmLT) is started by Tracestrack.com. It greately faciliates localizing OpenStreetMap. It is open sourced on <a href=\"https://github.com/tracestrack/openstreetmap-localization-tool\">Github</a>.</p>\n\n        <p>Login with your OpenStreetMap account and start editing today!</p>\n      </div>\n    );\n}\n","import FormCheck from \"react-bootstrap/FormCheck\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckboxButton({vkey, title, onChange, checked}) {\n    return (\n    <Button \n        className=\"btn d-flex\"\n        variant={checked ? \"primary\" : \"outline-primary\"}\n        size=\"sm\"\n        onClick={() => onChange(vkey)}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onChange={() => onChange(vkey)}\n        />\n    </Button>\n    );\n}\n\n","import CheckboxButton from \"./CheckboxButton\";\nimport {Fragment} from \"react\";\n\nfunction toggle(selected, key, min) {\n    const i = selected.indexOf(key);\n    if(i === -1) {\n        return [...selected, key];\n    }\n    if(selected.length <= min) {\n        return selected;\n    }\n    return [\n        ...selected.slice(0, i),\n        ...selected.slice(i+1)\n    ];\n}\n\nfunction CheckboxGroup({\n    itemsList, \n    selected, \n    onChange, \n    min = 0,\n    Checkbox = CheckboxButton\n}) {\n    return (\n    <Fragment>\n    {itemsList.map(({key, title}) => \n        <Checkbox \n            key={key} \n            vkey={key}\n            title={title} \n            checked={selected.indexOf(key) !== -1} \n            onChange={() => onChange(toggle(selected, key, min))}\n        />\n    )}\n    </Fragment>\n    );\n}\n\nexport default CheckboxGroup;","import Dropdown from \"react-bootstrap/Dropdown\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\n\nexport default function CheckboxDropdownItem({vkey, title, onChange, checked}) {\n    return (\n    <Dropdown.Item\n        onMouseDown={e => onChange(vkey)}\n        onClick={e => e.stopPropagation()}\n        active={checked}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onMouseDown={e => onChange(vkey)}\n            onChange={() => {}}\n        />\n    </Dropdown.Item>\n    );\n}\n\n","import CheckboxGroup from \"../ItemsFilters/CheckboxGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport CheckboxDropdownItem from \"./CheckboxDropdownItem\";\n\nimport {useEffect, useState} from \"react\";\n\nexport default function CheckboxDropdownGroup({title, itemsList, selected, onChange, min}) {\n    // react-bootstrap dropdown has a bad habit to close after selecting an item\n    // that's working with menus okay, but not with checkbox group\n\n    const [dpShow, setDpShow] = useState(false);\n\n    useEffect(() => {\n        if(dpShow) {\n            const fn = document.addEventListener(\"click\", () => {\n                setDpShow(false);\n                document.removeEventListener(\"click\", fn);\n            });\n        }\n    }, [dpShow]);\n\n    const onClickDp = e => {\n        setDpShow(!dpShow);\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    return (\n        <DropdownButton\n            title={title}\n            show={dpShow}\n            onClick={onClickDp}\n            variant=\"outline-primary\"\n        >\n            <CheckboxGroup \n                Checkbox={CheckboxDropdownItem}\n                itemsList={itemsList}\n                selected={selected}\n                rootCloseEvent=\"mousedown\"\n                onChange={onChange}\n                min={min}\n            />\n        </DropdownButton>       \n    );\n}","import Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function LoadingButton({title, onClick, loading, disabled, ...props}) {\n    return (\n        <Button \n            disabled={disabled || loading}\n            onClick={onClick}\n            {...props}\n        >{title}\n        {loading ? \n            <Spinner \n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                className=\"spinner-border ml-2\"\n            /> \n            : null}\n        </Button>\n    );\n}\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport CheckboxDropdownGroup from \"./CheckboxDropdownGroup\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport AddressSearchForm from \"./AddressSearchForm\";\nimport \"./ItemsFilters.css\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport React, { useCallback } from 'react';\n\n\nfunction ItemsFilters({\n    filters,\n    setFilter,\n    tagsList,\n    languages,\n    languagesList,\n    getItems,\n    disabled,\n    loading,\n    updateItems,\n    setLanguages\n}) {\n\n  const onKeyUp = useCallback(\n    (e) => {\n      if (e.charCode === 13) {\n        getItems();\n      }\n    },\n    [getItems], // Tells React to memoize regardless of arguments.\n  );\n\n\n  const onClickShortcut = useCallback(\n    (e) => {\n      let t = e.target.innerText;\n      console.log(t);\n      setFilter(t, () => {getItems();});\n    },\n    [setFilter, getItems], // Tells React to memoize regardless of arguments.\n  );\n\n    return (\n    <Form className=\"item-filters\">\n\n      <CheckboxDropdownGroup \n        title=\"Choose Languages\"\n        itemsList={languagesList}\n        selected={languages}\n        onChange={setLanguages}\n        min={1}\n      />\n\n\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>Tag to search: </Form.Label>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>place=city</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>boundary</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>leisure</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>highway</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>waterway</Button>\n                  <Form.Control type=\"text\" value={filters.tags} onChange={tags => setFilter(tags.target.value)} onKeyPress={onKeyUp} />\n                </Form.Group>\n\n        <Row className=\"d-flex justify-content-end\">\n            <LoadingButton\n                title=\"Get names\"\n                variant=\"primary\"\n                onClick={getItems}\n                loading={loading.items}\n            />\n            <LoadingButton\n                title=\"Update names\"\n                variant=\"success\"\n                disabled={disabled.updates}\n                onClick={updateItems}\n                loading={loading.updates}\n            />\n        </Row>\n\n    </Form>\n    );\n}\n\nexport default ItemsFilters;\n","import ItemsFilters from \"./ItemsFilters\";\nexport default ItemsFilters;","\nexport default function ItemTableHeader({languages, onClick}) {\n    const titles =  [\"Category\", \"Name\",...languages.map(lang => `Name:${lang}`)];\n    return (\n        <tr>\n        {titles.map(title => \n            (<th \n                style={{cursor: \"pointer\"}}\n                key={title}\n                onClick={() => onClick(title.toLowerCase())}\n            >{title}\n            </th>))\n        }\n        </tr>\n    );\n}","import {useRef, useEffect} from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function Item({\n    item, \n    category,\n    languages, \n    focused,\n    handlers: {onFocus, onBlur, onChange, onIconClick}\n}) {\n    const firstInput = useRef(null);\n    useEffect(() => {\n        if (focused && \n            document.activeElement.id.indexOf(item.id+\"\") !== 0) {\n            firstInput.current.focus();\n        }\n    }, [focused, item]);\n    \n    return (\n        <tr>\n            <td className=\"category\">\n                <Badge variant=\"info\">\n                    {category}\n                </Badge><br />\n                <Badge variant=\"light\">\n                    {item.tags[category]}\n                </Badge>\n            </td>\n            <td>\n\n              {item.tags.wikidata && (<span><a target=\"_blank\" rel=\"noreferrer\" href={`https://www.wikidata.org/wiki/${item.tags.wikidata}`}>{item.tags.name}</a></span>)}\n              {!item.tags.wikidata && (<span>{item.tags.name}</span>)}\n\n                <i \n                    className=\"fa fa-crosshairs icon-btn mt-1\" \n                    style={{float: \"right\"}} \n                    onClick={() => onIconClick(item)}\n                />\n            </td>\n            {languages.map((lang, i) => (\n            <td key={lang}>\n                <input\n                    type=\"text\"\n                    id={item.id + lang}\n                    ref={i ? null : firstInput}\n                    value={item.tags[`name:${lang}`]||\"\"}    \n                    onChange={e => onChange(item, lang, e.target.value)}\n                    onFocus={() => focused ? null : onFocus(item.id)}\n                    onBlur={() => focused ? onBlur(item.id) : null}\n                />\n            </td>))}\n        </tr>\n    );\n}\n","\nimport {Fragment, useState} from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ItemTableHeader from \"./ItemTableHeader\";\nimport ItemTableRow from \"./ItemTableRow\"\nimport \"./ItemsTable.css\";\n\n\nconst compareNames = (i1, i2, field) =>\n        (i1.tags[field]||\"\").localeCompare(i2.tags[field]||\"\");\n\nconst compareCategoryTag = (i1, i2) =>\n        i1.category.localeCompare(i2.caterory) ||\n        it.item.tags[i1.category].localeCompare(i2.item.tags[i2.category]);\n\nconst compareTags = (i1, i2, field) => field === \"category\" ?\n        compareCategoryTag(i1, i2)\n        : compareNames(i1.item, i2.item, field)\n\n\nfunction ItemsTable({\n    languages,\n    handlers,\n    items,\n    focused,\n    categories\n}) {\n    const [sortField, setField] = useState(\"name\");\n    const [sortOrder, setOrder] = useState(1);\n\n    const setSort = field => {\n        if(field === sortField)\n            setOrder(-sortOrder);\n        else\n            setField(field);\n    };\n\n    return (\n        <Fragment>\n            <Table size=\"sm\">\n                <thead>\n                    <ItemTableHeader\n                        languages={languages}\n                        onClick={setSort}\n                    />\n                </thead>\n                <tbody>\n                    {items\n                    .filter(i => i.tags.name)\n                    .map(item => ({\n                        item,\n                        category: categories.find(t => !!item.tags[t])\n                    }))\n                    .sort((i1, i2) => sortOrder * compareTags(i1, i2, sortField))\n                    .map(({item, category}) => (\n                    <ItemTableRow\n                        category={category}\n                        languages={languages}\n                        key={item.id}\n                        item={item}\n                        focused={focused === item.id}\n                        handlers={handlers}\n                    />)\n                    )}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n\n}\n\nexport default ItemsTable;\n","import ItemsTable from \"./ItemsTable\";\nexport default ItemsTable;","import {Fragment} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\n\nexport default function UserLoggedIn({user, logout}) {\n    return (\n        <Fragment>\n            {user.img ? \n                <Image \n                    src={user.img.href}\n                    className=\"avatar\" \n                    thumbnail \n                    rounded\n                /> \n                : null\n            }\n            <Navbar.Text className=\"mx-2\"\n                >{user.display_name}\n            </Navbar.Text>\n            <Button onClick={logout}>Logout</Button>\n        </Fragment>\n    );\n}","import LoadingButton from \"../common/LoadingButton\";\n\nexport default function UserLoggedOut({login, loading}) {\n    return (\n        <LoadingButton \n            title=\"Login\"\n            loading={loading}\n            onClick={login}\n        />\n    );\n}\n","import AppNavbar from \"./AppNavbar\";\n\nexport default AppNavbar;","\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./AppNavbar.css\";\nimport packageJson from '../../package.alias.json';\nimport UserLoggedIn from \"./UserLoggedIn\";\nimport UserLoggedOut from \"./UserLoggedOut\";\n//import logo from \"../../assets/logo.svg\";\n\nexport default function AppNavbar({user, login, logout, loading}) {\n    return (\n        <Navbar \n            variant=\"light\"\n            bg=\"white\"\n        >\n            <Navbar.Brand className=\"mr-auto\">\n              OSM Localization Tool (OsmLT)   <span className=\"version\">v{packageJson[\"version\"]} by Tracestrack</span>\n            </Navbar.Brand>\n        {user.loggedIn ? \n            <UserLoggedIn \n                logout={logout} \n                user={user} \n            />\n            : <UserLoggedOut \n                login={login} \n                loading={loading} \n            />\n        }\n        </Navbar>\n    );\n}\n","import {useState, useEffect} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function ChangesetBox({\n    changeset, \n    handlers: {onUpdate, onClose}}\n) {\n    const [newComment, setComment] = useState(changeset?.tags.comment||\"\");\n\n    useEffect(() => {\n        setComment(changeset?.tags.comment||getCookie(\"lastComment\")||\"\");\n    }, [changeset]);\n\n    return (\n        <Card \n            id=\"changeset-box\"\n            className=\"p-2\"    \n        >\n            <Card.Body>\n                <Row className=\"pb-2 justify-content-center\">\n                    <Form.Label>Comment:</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        value={newComment}\n                        onChange={e => setComment(e.target.value)}\n                    />\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Button \n                      className=\"m-1\"\n                      onClick={() =>\n                        onClose({comment: newComment})\n                              }\n                    >\n                        Close changeset\n                    </Button>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n","import ChangesetSettings from \"./ChangesetSettings\";\nexport default ChangesetSettings;","import Button from \"react-bootstrap/Button\";\nimport ChangesetBox from \"./ChangesetBox\";\nimport \"./ChangesetSettings.css\";\nimport {useState, useEffect} from \"react\";\n\n\nexport default function ChangesetSettings({changeset, handlers}) {\n    const [visible, setVisible] = useState();\n\n    useEffect(() => {\n        if(!changeset)\n            setVisible(false);\n    }, [changeset]);\n\n    return (\n        <div id=\"changeset\">\n            <Button \n                id=\"changeset-button\"\n                onClick={() => setVisible(!visible)}\n                disabled={!changeset}\n            >{\n                changeset ? \n                `Active changeset: ${changeset.id}`\n                : \"No active changeset\"\n            }</Button>\n            {visible ?\n            <ChangesetBox  \n                changeset={changeset}\n                handlers={handlers}\n            />\n            : null}\n        </div>\n    );\n}","const defaultApiUrl = \"https://overpass-api.de/api/interpreter\";\n\nconst outTypes = \"qt body meta center\"; //we need meta for \"version\" field\n\nexport default class Overpass {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || defaultApiUrl;\n    }\n    request(query) {\n        const data = new FormData();\n        data.append(\"data\", query);\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n                },\n                body: new URLSearchParams(data)\n            })\n            .then(response => response.ok ?\n                response.json()\n                .then(({elements, remark}) => {\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        if(remark && remark.indexOf(\"error\") !== -1) {\n                            reject(remark);\n                        }\n                        resolve(elements);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n  /*\n    getTwins(el, tags) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const tagsStr = tags.filter(t => el.tags[t])\n                            .map(t => `[\"${t}\"=\"${el.tags[t]}\"]`);\n        const query =\n            `[out:json][timeout:25];\n            ${el.type}(${el.id});\n            complete(100) {\n                nwr(around:500)${tagsStr}[\"name\"=\"${el.tags.name}\"];\n            }\n            out ${outTypes};`\n\n        return this.request(query);\n    }*/\n    query({bbox, zoom, center, filters, languages}) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const baseEls = [`nwr[\"${condition}\"][\"name\"]`];\n        const elementsQuery = filters.hideFilled ?\n            baseEls.map(base =>\n                languages.map(l => `${base}[!\"name:${l}\"]`)\n                .join(\";\\n\")\n            )\n            : baseEls.join(\";\\n\");\n\n\n        const limit = filters.limit ? \" \" + filters.limit : \"\";\n        const query =\n            `[out:json][timeout:25][bbox:${bbox.join(\",\")}];\n            (\n                ${elementsQuery};\n            );\n            out ${outTypes} ${limit};`;\n\n        return this.request(query);\n    }\n    getById(typesIds) {\n        const elementsQuery = typesIds.map(\n                                ([type, id]) => `${type}(${id})`).join(\";\");\n        const query =\n        `[out:json][timeout:25];\n        (\n            ${elementsQuery};\n        );\n        out ${outTypes};`;\n\n    return this.request(query);\n    }\n}\n","const apiUrl = \"https://nominatim.openstreetmap.org\";\nconst apiElemLimit = 50;\n\n\n\nexport default class NominatimAPI {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || apiUrl;\n    }\n    query({bbox, filters}, excludeIds=[]) {\n        const searchQuery = filters.searchMode === \"simple\" ?\n            [\"q=\" + filters.search.q]\n            : Object.entries(filters.search)\n                .filter(([k,val]) => k !== \"q\" && !!val)\n                .map(([k, val]) => `${k}=${val}`)\n        const params = [\n            ...searchQuery,\n            \"limit=\" + Math.min(filters.limit, apiElemLimit),\n          //\"viewbox=\" + bbox.map(c => c.reverse().join(\",\")).join(\",\"),\n            \"format=json\",\n            \"bounded=1\",\n            \"dedupe=1\"\n        ];\n\n        if(excludeIds.length) {\n            params.push(\"exclude_place_ids=\" + excludeIds.join(\",\"));\n        }\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl + \"/search?\" + params.join(\"&\"))\n            .then(response => response.ok ?\n                response.json()\n                .then((resp) => {\n                    if(resp.error)\n                        reject(resp);\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        resolve(resp);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n}\n","import osmAuth from \"osm-auth\";\nimport Overpass from \"./Overpass\";\nimport Nominatim from \"./Nominatim\";\n\n// tag to identify changesets created by app\nconst appTag = \"OSM Localization Tool (OsmLT): https://localize.osm.tracestrack.com\";\n\n\nvar XML_CHAR_MAP = {\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'&': '&amp;',\n\t'\"': '&quot;',\n\t\"'\": '&apos;'\n};\n\nfunction escapeXml (s) {\n  if (typeof s !== \"string\") return s;\n\n  return s.replace(/[<>&\"']/g, function (ch) {\n    return XML_CHAR_MAP[ch];\n  });\n}\n\nfunction json2xml(json) {\n    return Object.entries(json)\n    .map(([k, v]) => {\n        let attrs = [];\n        let children = \"\";\n        Object.entries(v)\n        .forEach(([k1, v1]) => {\n            if(Array.isArray(v1)) {\n                const k11 = k1.replace(/s$/, \"\");\n                children += v1.map(obj => json2xml({[k11]: obj}))\n                            .join(\"\");\n            } else if(typeof(v1) === \"object\") {\n                children += json2xml({[k1]: v1});\n            } else {\n                attrs.push([k1, escapeXml(v1)]);\n            }\n        });\n\n        const attrsStr = attrs.map(([k1, v1]) => `${k1}=\"${v1}\"`).join(\" \");\n        return children ?\n        `<${k} ${attrsStr}>${children}</${k}>`\n        : `<${k} ${attrsStr}/>`;\n    })\n    .join(\"\");\n}\n\nfunction createChangeset() {\n    return json2xml({\n        osm: {\n            changeset: [\n                {tag: {k: \"created_by\", v: appTag}},\n                {tag: {k: \"comment\",    v: \"\"}}\n            ]\n        }\n    });\n}\nfunction createOsm(changeset) {\n    return json2xml({\n        osm: {\n            changeset: {\n                tags:  Object.entries(changeset.tags)\n                .map(([k, v]) => ({k, v}))\n            }\n        }\n    });\n}\n\nfunction createOsmChange(updates, changesetId) {\n    return json2xml({\n        osmChange: {\n            version: \"0.6\",\n            generator: appTag,\n            modify: Object.values(updates)\n                    .map(({type, tags, nodes, members, ...attrs}) => ({\n                        [type]: {\n                            ...attrs,\n                            changeset: changesetId,\n                            tags: Object.entries(tags)\n                                    .map(([k, v]) => ({k, v})),\n                            // way\n                            ...(nodes ? {nd: nodes.map(id => ({ref: id}))} : {}),\n                            // relation\n                            ...(members ? {members} : {})\n                        }\n                    }))\n        }\n    });\n}\n\nconst constrain = coords => coords.map((c, i) => i % 2 ? (c+180) % 360 - 180 : c % 90);\n\n/*\nfunction uniq(items, tags) {\n    const un = {};\n    return items.filter(i => {\n        const k = i.tags.name + tags.map(t => t + i.tags[t] ).join(\"\");\n        if(!un[k]) {\n            un[k] = 1;\n            return true;\n        }\n        return false;\n    });\n}*/\n\nexport default class OSMApi {\n    constructor(config) {\n        this.config = config;\n        this.auth = osmAuth({\n            ...config\n        });\n        this.overpass = new Overpass({\n            apiUrl: config.overpassApiUrl\n        });\n        this.nominatim = new Nominatim();\n        this.apiRoute = \"/api/0.6\";\n        this.currentChangeset = config.changeset || false;\n    }\n    fetch(route, options = {}) {\n        // wrapper for osm-auth and underlying ohauth to provide\n        // more fetch-alike interface\n        const {method, body, headers = {}, ...opts} = options;\n        return new Promise((resolve, reject) =>\n            this.auth.xhr({\n                method: method || 'GET',\n                path: this.apiRoute + route,\n                content: body,\n                options: {\n                    header: headers,\n                    ...opts\n                }\n            }, function(err, res) {\n                if(!err) {\n                    resolve(res);\n                } else {\n                    reject(err);\n                }\n            })\n        );\n    }\n    fetchJson(route, options) {\n        return this.fetch(route, options)\n                .then(res => JSON.parse(res));\n    }\n    authenticated() {\n        return this.auth.authenticated();\n    }\n    login() {\n        return new Promise(resolve =>\n            this.auth.authenticate(res => {\n                resolve(res);\n            })\n        );\n    }\n    logout() {\n        this.auth.logout();\n    }\n    getUser() {\n        return this.fetchJson(\"/user/details.json\");\n    }\n    getElements(opts) {\n        opts = {\n            ...opts,\n            bbox: opts.bbox.map(constrain)\n        };\n        if(opts.filters.mode === \"search\") {\n            return this.nominatimIncSearch(opts);\n        }\n        return this.overpass.query(opts)\n        .then(items => {\n            // filter out the items with the same name and selected category tags\n            // eg. there are could be multiple ways representing one street\n\n            //items = uniq(items, opts.filters.tags);\n            return items;\n        });\n    }\n    nominatimIncSearch(opts, collected = []) {\n        // Limit of results in Nominatim is just 50\n        // to load more, we need to repeat the request to its API\n        // with query param \"exclude_place_ids\" to exclude already loaded.\n        // Nominatim objects are places, but we need nodes, ways and relations,\n        // so it neccessary to get them from Overpass then.\n        const limit = opts.filters.limit;\n        const exclude = collected.map(el => el.place_id);\n        return this.nominatim.query(opts, exclude)\n            .then(elemsNom => {\n                collected = [...elemsNom, ...collected];\n                if(!collected.length)\n                    return [];\n\n                if(limit && elemsNom.length &&\n                   collected.length < limit) {\n                  // to keep it simple, we don't need to support limit\n                  //return this.nominatimIncSearch(opts, collected);\n                }\n                return this.overpass.getById(\n                    collected.map(el => [el.osm_type, el.osm_id])\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n                if(collected.length) {\n                    return this.overpass.getById(\n                        collected.map(el => [el.osm_type, el.osm_id])\n                    );\n                }\n            });\n    }\n    getTwins(el, tags) {\n        return this.overpass.getTwins(el, tags);\n    }\n\n    updateElements(updates) {\n        if(!this.currentChangeset) {\n            return this.createChangeset()\n            .then(() => this.updateChangeset(updates));\n        }\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this.updateChangeset(updates));\n            }\n            return this.updateChangeset(updates);\n        });\n    }\n    getChangesets() {\n        return this.fetch(\"/changesets\");\n    }\n    getCurrentChangeset() {\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this._getCurrentChangeset());\n            }\n            return this._getCurrentChangeset();\n        })\n    }\n    _getCurrentChangeset() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => res.elements[0]);\n    }\n    createChangeset() {\n        return this.fetch(\"/changeset/create\", {\n            method: \"PUT\",\n            body: createChangeset(),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        }).then(createdId => {\n            this.currentChangeset = createdId;\n        });\n    }\n    checkChangesetOpen() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => {\n            return res.elements?.pop().open;\n        })\n    }\n  closeChangeset(changeset, cb) {\n\n      this.fetch(`/changeset/${this.currentChangeset}`, {\n        method: \"PUT\",\n        body: createOsm(changeset),\n        headers: {\n          'Content-Type': \"text/plain\"\n        }\n      }).then(() => {\n        this.fetch(`/changeset/${this.currentChangeset}/close`, {\n          method: \"PUT\",\n        }).then(() => {\n          this.currentChangeset = false;\n          cb();\n        });\n      });\n    }\n\n    updateChangeset(updates) {\n        return this.fetch(`/changeset/${this.currentChangeset}/upload`, {\n            method: \"POST\",\n            body: createOsmChange(updates, this.currentChangeset),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        })\n        .then(diffRes => {\n            // the format of responce is xml document like:\n            //\n            // <diffResult generator=\"OpenStreetMap Server\" version=\"0.6\">\n\t        //     <node|way|relation old_id=\"#\" new_id=\"#\" new_version=\"#\"/>\n            //  </diffResult>\n            //\n            // old_id == new_id, because we apply only modify\n\n            return Object.fromEntries(\n                Array.from(diffRes.children[0].children)\n                .map(el => [\n                    el.getAttribute(\"new_id\"), {\n                        version: +el.getAttribute(\"new_version\")\n                    }]));\n        });\n    }\n\n}\n","// Some abstraction for document.cookie handling\n\nexport default class CookieManager {\n    constructor(duration = 365 * 24 * 3600) {\n        this.cookieDuration = duration;\n    }\n    \n    get(key) {\n        const value = document.cookie.split(';')\n                                     .find(s => s.indexOf(key + '=') !== -1);\n        return value ? \n              value.replace(key + '=', '').trim() \n            : false;\n    }\n    write(dict, duration = this.cookieDuration) {\n        const dateStr = new Date(Date.now() + duration * 1000)\n                            .toUTCString();\n\n        Object.entries(dict)\n        .forEach(([k, v]) => {\n            document.cookie = `${k}=${v}; path=/; expires=${dateStr}`;\n        });\n    }\n\n    clear() {        \n        document.cookie.split(';')\n        .forEach(s => {\n            const k = s.split('=')[0];\n            document.cookie = `${k}=; path=/`;\n        });\n    }\n}\n","// helper class to sync results from overpass api with latest updates\n\nconst hasEmpty = (item, langs) => langs.find(l => !(item.tags[`name:${l}`]));\n\n\nexport default class UpdatesStorage {\n    updates = {};\n    storageKey = \"osm-localizer_updated-items\";\n    load() {\n        if(window.localStorage) {\n            const data = localStorage.getItem(this.storageKey);\n            if(data) {\n                this.updates = JSON.parse(data);\n            }\n        }\n    }\n    store() {\n        if(window.localStorage) {\n            localStorage.setItem(this.storageKey, JSON.stringify(this.updates));\n        }\n    }\n    patchAndStore(items, diff) {\n        for(let id in diff) {\n            if(items[id]) {\n                items[id] = {...items[id], ...diff[id]};\n                this.updates[id] = items[id];\n            }\n        }\n        this.store();\n    }\n    sync(items, hideFilled, langs) {\n        const itemsSync = [];\n        for(let i = 0, n = items.length; i < n; i++) {\n            const id = items[i].id;\n            if(this.updates[id]) {\n                if(this.updates[id].version > items[i].version) {\n                    // if hideFilled = true, then we need manually filter out\n                    // items with filled fields, which operass doesn't know\n                    // about yet.\n                    if(!hideFilled || hasEmpty(this.updates[id], langs))\n                        itemsSync.push(this.updates[id]);\n                } else {\n                    delete this.updates[id];\n                    itemsSync.push(items[i]);\n                }\n            } else {\n                itemsSync.push(items[i]);\n            }\n        }\n        this.store();\n        return itemsSync;\n    }\n}","/* eslint-disable */\n\nconst mainServer = {\n    oauth_consumer_key: \"p2szywibtwHNFh1RZVNq21uCo9XBuUZvEwz0sYae\",\n    oauth_secret:       \"e2oP3FSVjFLEq3zgQylpYMVVX7QJUKcchJLh4Ksm\",\n    url:                \"https://www.openstreetmap.org\",\n};\n\n// use this when testing new features to not spoil main osm database\nconst devServer = {\n    oauth_consumer_key: '8CxsQfI9MFfsYm4nq8bBm6Htch3SiK9BFA8IQhHs',\n    oauth_secret:       'SZka3I7w1Z41ePlQDauVwLLt6UIG4LLDbaWhNHkM',\n    url:                \"https://master.apis.dev.openstreetmap.org\"\n};\n\nconst authConfig = {   \n    ...mainServer,\n  overpassApiUrl:     \"https://overpass.kumi.systems/api/interpreter\"\n  //overpassApiUrl: \"https://overpass.nchc.org.tw/api/interpreter\"\n};\nexport default authConfig;\n","\nconst languagesList = [ \n    { key: \"de\", title: \"Deutsch\" },\n    { key: \"en\", title: \"English\" },\n    { key: \"fr\", title: \"Français\"},\n    { key: \"ja\", title: \"日本語\" },\n    { key: \"ru\", title: \"Русский\" },\n    { key: \"zh-Hans\", title: \"简体中文\" },\n    { key: \"zh-Hant\", title: \"繁体中文\" },\n    { key: \"zh\", title: \"中文\" }\n];\n\nconst tagsList = [\n    //{key: \"aerialway\",          title: \"Aerialway\"},\n    //{key: \"aerolway\",           title: \"Aeroway\"},\n    {key: \"amenity\",            title: \"Amenity\"},\n    //{key: \"barrier\",            title: \"Barrier\"},\n    //{key: \"boundary\",           title: \"Boundary\" },\n    {key: \"building\",           title: \"Building\" },\n    //{key: \"craft\",              title: \"Craft\" },\n    //{key: \"emergency\",          title: \"Emergency\" },\n    //{key: \"geological\",         title: \"Geological\" },\n    //{key: \"healthcare\",         title: \"Healthcare\"},\n    {key: \"highway\",            title: \"Highway\"},\n    //{key: \"historic\",           title: \"Historic\"},\n    {key: \"landuse\",            title: \"Landuse\"},\n    {key: \"leisure\",            title: \"Leisure\"},\n    {key: \"man_made\",           title: \"Man-made\"},\n    //{key: \"military\",           title: \"Military\"},\n    {key: \"natural\",            title: \"Natural\"},\n    //{key: \"office\",             title: \"Office\"},\n    {key: \"place\",              title: \"Place\" },\n    //{key: \"power\",              title: \"Power\" },\n    {key: \"public_transport\",   title: \"Public transport\" },\n    {key: \"railway\",            title: \"Railway\" },\n    {key: \"route\",              title: \"Route\" },\n    //{key: \"shop\",               title: \"Shop\" },\n    //{key: \"telecom\",            title: \"Telecom\" },\n    {key: \"tourism\",            title: \"Tourism\" },\n    {key: \"waterway\",           title: \"Waterway\"}\n];\n\nexport {\n    languagesList, \n    tagsList\n};\n","import {Fragment, Component} from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Card from \"react-bootstrap/Card\";\nimport Map from \"./components/Map\";\nimport NotLoggedInGreeting from \"./components/NotLoggedInGreeting\";\nimport ItemsFilters from \"./components/ItemsFilters\";\nimport ItemsTable from \"./components/ItemsTable\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ChangesetSettings from \"./components/ChangesetSettings\";\nimport OSMApi from \"./api/OSM\";\nimport CookieManager from \"./utils/CookieManager\";\nimport UpdatesStorage from \"./utils/UpdatesStorage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport authConfig from \"./config/auth\";\nimport {languagesList, tagsList} from \"./config/interface\";\n\nconst cookieKeys = {\n    languages: \"_osm-localization_languages\",\n    changeset: \"_osm-locatization_changeset\"\n};\n\nconst itemCenter = item => item.center ?\n                            [item.center.lat, item.center.lon]\n                          : [item.lat, item.lon];\nconst itemMinZoom = 14;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.cookieManager = new CookieManager();\n        this.osmApi = new OSMApi({\n            ...authConfig,\n            changeset: this.cookieManager.get(cookieKeys.changeset)\n        });\n        this.updatesStorage = new UpdatesStorage();\n        this.updatesStorage.load();\n        const {zoom, center} = this.parseURLPath();\n        const filters = this.parseURLQuery();\n\n        this.bbox = [];\n        this.state = {\n            user: {\n                loggedIn: false\n            },\n            center,\n            zoom,\n            filters,\n            items: [],\n            itemsToUpdate: {},\n            focusedItem: false,\n            watchFocus: false, // center map on focused item\n            loading: {\n                items: false,\n                updates: false,\n                auth: false\n            },\n            serverMsg: {\n                error: false,\n                text: \"\"\n            },\n            changeset: null,\n            lastReqTags: []\n        };\n    }\n    parseURLPath() {\n        let zoom = 6;\n        let center = [0, 0];\n        const hash = window.location.hash.replace(\"#/\", \"\");\n        if (hash) {\n            const [z, lat, lng] = hash.split(\"/\");\n            zoom = +z;\n            center = [+lat, +lng];\n        }\n\n        return {zoom, center};\n    }\n    parseURLQuery() {\n        const filters = {\n            tags: [\"place\"],\n            limit: 100,\n            hideFilled: false,\n            search: {\n                q: \"\",\n                street:  \"\",\n                city: \"\",\n                county: \"\",\n                state: \"\",\n                country: \"\",\n                postalcode: \"\"\n            },\n            searchMode: \"simple\",\n            mode: \"tags\"\n        };\n        const search = window.location.search.replace(\"?\", \"\");\n        if(search) {\n            const params = Object.fromEntries(\n                search.split(\"&\")\n                .map(e => e.split(\"=\"))\n            );\n            if(params.tags) {\n                  filters.tags = decodeURIComponent(params.tags);\n            }\n            if(params.search) {\n                try {\n                    const searchParams = JSON.parse(decodeURI(params.search));\n                    for(let k in filters.search) {\n                        filters.search[k] = searchParams[k] || filters.search[k];\n                        if(k !== \"q\" && !!searchParams[k])\n                            filters.searchMode = \"structured\";\n                    }\n                    if(!params.tags) {\n                        filters.mode = \"search\";\n                    }\n                } catch (e) {\n\n                }\n            }\n            if(params.limit) {\n                const n = parseInt(params.limit);\n                if(!isNaN(n))\n                    filters.limit = n;\n            }\n            if(params.hide_filled) {\n                filters.hideFilled = params.hide_filled &&\n                                    +params.hide_filled !== 0;\n            }\n        }\n        return filters;\n    }\n    loadChangeset() {\n        if(this.osmApi.currentChangeset) {\n            this.osmApi.getCurrentChangeset()\n            .then(changeset => {\n                console.log(changeset)\n                this.setState({changeset});\n            })\n        }\n    }\n\n    closeChangeset({comment}) {\n      let changeset = {\n                ...this.state.changeset,\n                tags: {\n                    ...this.state.changeset.tags,\n                    comment\n                }\n      };\n\n      if (changeset.tags.comment === \"\") {\n        alert(\"Please add a commit message first.\");\n      }\n\n      console.log(changeset);\n\n      let _t = this;\n      this.osmApi.closeChangeset(changeset, () => {\n        //_t.setState({changeset: null});\n        _t.cookieManager.write({\n          \"lastComment\": comment\n        });\n        window.location.reload();\n      }\n      );\n    }\n\n    updateLocation(replace=false) {\n        const {\n            zoom,\n            center: [lat, lng],\n            filters: {tags, limit, hideFilled, search, mode, searchMode}\n        } = this.state;\n\n        const hash = [\"/#\", zoom, lat.toFixed(4), lng.toFixed(4)].join(\"/\");\n        const searchParts = [];\n        if(mode === \"search\") {\n            const {q, ...structured} = search;\n            const searchObj = (searchMode === \"simple\") ?\n                               {q}\n                              : structured;\n\n            searchParts.push(`search=${JSON.stringify(searchObj)}`);\n        }\n        else {\n            searchParts.push(`tags=${encodeURIComponent(tags)}`);\n            if(hideFilled)\n                searchParts.push(`hide_filled=1`);\n        }\n        if(limit)\n            searchParts.push(`limit=${limit}`);\n\n        const searchQ = \"?\" + searchParts.join(\"&\");\n\n        let url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + searchQ + hash;\n\n        if(replace)\n            window.history.replaceState({searchQ, hash}, '', url);\n        else\n            window.history.pushState({searchQ, hash}, '', url);\n    }\n    componentDidMount() {\n        if(this.osmApi.authenticated()) {\n            this.getUser();\n        }\n    }\n  setServerMsg(serverMsg) {\n    console.log(serverMsg);\n        this.setState({serverMsg});\n        const fn = () => {\n            document.removeEventListener(\"click\", fn);\n            this.setState({serverMsg: {\n                error: false,\n                text: \"\"\n            }});\n        }\n        document.addEventListener(\"click\", fn);\n    }\n    login() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                auth: true\n            }\n        });\n        this.osmApi.login()\n        .then(() => {\n            this.getUser();\n        });\n    }\n    getLanguages() {\n        const str = this.cookieManager.get(cookieKeys.languages);\n        return str ? str.split(\"+\") : false;\n    }\n    setLanguages(languages) {\n        this.setState({\n            user: {\n                ...this.state.user,\n                languages\n            }\n        });\n        this.storeLanguages(languages);\n    }\n    storeLanguages(languages) {\n        this.cookieManager.write({\n            [cookieKeys.languages]: languages.join(\"+\")\n        });\n    }\n    getUser() {\n        this.osmApi.getUser()\n        .then(res => {\n            let languages = this.getLanguages() ||\n                            res.user.languages.filter(l =>\n                                languagesList.find(({key}) => key === l)\n                            );\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    auth: false\n                },\n                user: {\n                    loggedIn: true,\n                    ...res.user,\n                    languages\n                }\n            });\n            this.storeLanguages(languages);\n            this.loadChangeset();\n        });\n    }\n    logout() {\n        this.osmApi.logout();\n        this.setState({\n            user: {\n                loggedIn: false\n            }\n        });\n    }\n  getItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                items: true\n            }\n        });\n        this.osmApi.getElements({\n            center: this.state.center,\n            zoom: this.state.zoom,\n            bbox: this.bbox,\n            filters: this.state.filters,\n            languages: this.state.user.languages\n        })\n        .then(items => {\n            this.setState({\n                items: this.updatesStorage.sync(items,\n                                                this.state.filters.hideFilled,\n                                                this.state.user.languages),\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                },\n                lastReqTags: this.state.filters.mode === \"search\" ?\n                                  tagsList.map(t => t.key)\n                                : this.state.filters.tags.slice()\n            });\n        })\n        .catch(err => {\n            console.log(err)\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                }\n            });\n            this.setServerMsg({\n                text: err,\n                error: true\n            });\n        });\n    }\n    updatePosition({bbox, center, zoom}) {\n        this.setState(\n            {center, zoom},\n            () => this.updateLocation(true));\n        this.bbox = bbox;\n    }\n    updateBbox({bbox}) {\n        this.bbox = bbox;\n    }\n    updateItem(item, lang, value) {\n      item.tags[`name:${lang}`] = value;\n      /*\n        if(!item.twins) {\n            // get all the items with the same name and tags\n            item.twins = [];\n            this.osmApi.getTwins(item, this.state.filters.tags)\n            .then(twins => {\n                item.twins = twins;\n                item.twins.forEach(i => {\n                    i.tags[`name:${lang}`] = value;\n                });\n            });\n        } else {\n            item.twins.forEach(i => {\n                i.tags[`name:${lang}`] = value;\n            });\n        }*/\n        this.setState({itemsToUpdate: {\n            ...this.state.itemsToUpdate,\n            [item.id]: item\n        }});\n    }\n  setFilter(updates, doneCb) {\n    console.log(updates);\n        this.setState({\n            filters: {\n                ...this.state.filters,\n              ...{tags: updates}\n            }\n        }, () => {this.updateLocation();\n                  if (doneCb) doneCb();\n                 });\n    }\n    updateItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                updates: true\n            }\n        });\n      let items = this.state.itemsToUpdate;\n/*        Object.values(this.state.itemsToUpdate)\n            .forEach(i => {\n            let {twins, ...self} = i;\n            items[self.id] = self;\n            twins.forEach(t => {\n                items[t.id] = t;\n            });\n            }); */\n      console.log(items);\n        this.osmApi.updateElements(items)\n        .then(diff => {\n            this.updatesStorage.patchAndStore(\n                this.state.itemsToUpdate, diff\n            );\n            this.cookieManager.write({\n                [cookieKeys.changeset]: this.osmApi.currentChangeset\n            });\n\n            this.setServerMsg({\n                text: \"Items are successfully updated.\",\n                error: false\n            });\n\n            this.setState({\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n            this.loadChangeset();\n        })\n        .catch(err => {\n            this.setServerMsg({\n                text: String.toString(err),\n                error: true\n            });\n\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n        });\n    }\n    focusItem(itemId) {\n        if(this.state.watchFocus) {\n            const item = this.state.items.find(i => i.id === itemId);\n            this.setState({\n                center: itemCenter(item),\n                focusedItem: itemId\n            });\n        } else {\n            this.setState({\n                focusedItem: itemId\n            });\n        }\n    }\n    blurItem() {\n        this.setState({\n            focusedItem: false\n        });\n    }\n    centerItem(item) {\n        this.setState({\n            center: itemCenter(item),\n            zoom: Math.max(this.state.zoom, itemMinZoom)\n        });\n    }\n    render() {\n        const btnsDisabled = {\n            // query for a large bbox is too slow and won't work\n            // also don't load new items till updates are not done and synced\n            items: this.state.loading.updates ||\n                (this.state.filters.mode === \"tags\" ?\n                    this.state.zoom < 10\n                    :  !(this.state.filters.searchMode === \"simple\" ?\n                            this.state.filters.search.q\n                            : Object.entries(this.state.filters.search)\n                                .find(([k,v]) => k !== \"q\" && !!v)\n                )),\n            // nothing to update\n            updates: !Object.keys(this.state.itemsToUpdate).length\n        };\n        const touchedItems  = Object.keys(this.state.itemsToUpdate).map(s => +s);\n        const mapHandlers = {\n            onLoad:      this.updateBbox.bind(this),\n            onMove:      this.updatePosition.bind(this),\n            onClickItem: this.focusItem.bind(this),\n            onClickMap:  this.blurItem.bind(this),\n        };\n\n        const itemHandlers = {\n            onFocus:     this.focusItem.bind(this),\n            onBlur:      this.blurItem.bind(this),\n            onChange:    this.updateItem.bind(this),\n            onIconClick: this.centerItem.bind(this)\n        };\n        const changesetHandlers = {\n            onClose:    this.closeChangeset.bind(this)\n        };\n\n        const lang = this.state.user.languages ?\n            this.state.user.languages[0]\n            : \"en\";\n\n        const tags = tagsList.map(t => t.key);\n        return (\n            <Container className=\"App\" fluid>\n                <AppNavbar\n                    login={this.login.bind(this)}\n                    logout={this.logout.bind(this)}\n                    user={this.state.user}\n                    loading={this.state.loading.auth}\n                />\n                <Map\n                    zoom={this.state.zoom}\n                    center={this.state.center}\n                    items={this.state.items}\n                    lang={lang}\n                    touched={touchedItems}\n                    focused={this.state.focusedItem}\n                    watchFocus={this.state.watchFocus}\n                    handlers={mapHandlers}\n                />\n                <Card\n                    className=\"card-items card p-1\"\n                >{\n                this.state.user.loggedIn ?\n                    <Fragment>\n                        <Card.Header>\n                            <ItemsFilters\n                                filters={this.state.filters}\n                                setFilter={this.setFilter.bind(this)}\n                                tagsList={tagsList}\n                                loading={this.state.loading}\n                                languages={this.state.user.languages||[]}\n                                languagesList={languagesList}\n                                setLanguages={this.setLanguages.bind(this)}\n                                items={this.state.items}\n                                getItems={this.getItems.bind(this)}\n                                disabled={btnsDisabled}\n                                updateItems={this.updateItems.bind(this)}\n                            />\n                            <div className={this.state.serverMsg.error ?\n                                              \"text-danger\"\n                                            : \"text-success\"}>\n                                {this.state.serverMsg.text}\n                            </div>\n                        </Card.Header>\n                        <Card.Body\n                            className={this.state.loading.items ?\n                                      \"items-loading\"\n                                      : \"\"}\n                        >\n                            <ItemsTable\n                                categories={tags}\n                                languages={this.state.user.languages||[]}\n                                items={this.state.items}\n                                focused={this.state.focusedItem}\n                                handlers={itemHandlers}\n                            />\n\n                        </Card.Body>\n                    </Fragment>\n                    :  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                            <NotLoggedInGreeting />\n                        </Card.Body>\n                }</Card>\n                <ChangesetSettings\n                    changeset={this.state.changeset}\n                    handlers={changesetHandlers}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}