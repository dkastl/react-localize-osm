{"version":3,"sources":["components/Map/MapView.js","components/Map/getIcon.js","components/Map/MarkerWithFocus.js","config/map.js","components/Map/Map.js","components/Map/index.js","components/NotLoggedInGreeting.js","components/ItemsFilters/TagTextInput.js","components/common/LoadingButton.js","components/ItemsFilters/ItemsFilters.js","components/ItemsFilters/index.js","components/ItemsTable/ItemTableHeader.js","components/ItemsTable/ItemTableRow.js","components/ItemsTable/ItemsTable.js","components/ItemsTable/index.js","components/AppNavbar/UserLoggedIn.js","components/AppNavbar/UserLoggedOut.js","components/AppNavbar/index.js","components/AppNavbar/AppNavbar.js","components/ChangesetSettings/ChangesetBox.js","components/ChangesetSettings/index.js","components/ChangesetSettings/ChangesetSettings.js","api/Overpass.js","api/Nominatim.js","api/OSM.js","utils/CookieManager.js","utils/UpdatesStorage.js","config/auth.js","config/interface.js","App.js","reportWebVitals.js","index.js"],"names":["toArray","coord","lat","lng","MapView","_ref","onLoad","onMove","onClick","center","zoom","map","useMap","c","getCenter","flyTo","useMapEvents","moveend","bbox","Object","values","getBounds","getZoom","click","createIcon","type","color","shape","L","AwesomeMarkers","icon","prefix","markerColor","className","createIcons","touched","focused","defaultIcon","iconTypes","cat","tag","iconType","getIcon","item","find","tags","indexOf","MarkerWithFocus","position","markerRef","useRef","eventHandlers","useMemo","_jsx","Marker","ref","mapConfig","tileUrl","attribution","minZoom","maxZoom","getItemPosition","osmCoordsArr","lon","Map","items","lang","handlers","onClickItem","onClickMap","addLang","_jsxs","MapContainer","scrollWheelZoom","children","TileLayer","url","id","ScaleControl","NotLoggedInGreeting","href","TagTextInput","title","selected","onChange","dpShow","setDpShow","useState","useEffect","fn","document","addEventListener","removeEventListener","Form","Group","controlId","Label","Control","placeholder","defaultValue","e","langs","target","value","split","s","trim","filter","length","Text","LoadingButton","loading","disabled","props","Button","Spinner","as","animation","size","ItemsFilters","filters","setFilter","tagsList","languages","languagesList","getItems","updateItems","setLanguages","onKeyUp","useCallback","charCode","onClickShortcut","t","innerText","console","log","variant","onKeyPress","Row","updates","ItemTableHeader","titles","concat","style","cursor","toLowerCase","Item","category","onFocus","onBlur","onIconClick","firstInput","activeElement","current","focus","Badge","wikidata","rel","name","float","i","compareTags","i1","i2","field","compareCategoryTag","localeCompare","caterory","it","compareNames","ItemsTable","categories","sortField","setField","sortOrder","setOrder","Fragment","Table","sort","_ref2","ItemTableRow","UserLoggedIn","user","logout","img","Image","src","thumbnail","rounded","Navbar","display_name","UserLoggedOut","login","AppNavbar","bg","Brand","packageJson","loggedIn","ChangesetBox","changeset","onUpdate","onClose","newComment","setComment","comment","parts","cookie","pop","shift","getCookie","Card","Body","ChangesetSettings","visible","setVisible","outTypes","Overpass","constructor","config","arguments","undefined","this","apiUrl","request","query","data","FormData","append","reqId","performance","now","Promise","resolve","reject","fetch","method","headers","body","URLSearchParams","then","response","ok","json","elements","remark","text","catch","err","condition","replace","baseEls","elementsQuery","hideFilled","base","l","join","limit","getById","typesIds","_ref3","NominatimAPI","excludeIds","params","searchMode","search","q","entries","k","val","Math","min","push","resp","error","appTag","XML_CHAR_MAP","json2xml","v","attrs","forEach","k1","v1","Array","isArray","k11","obj","ch","attrsStr","createOsm","osm","_ref4","createOsmChange","changesetId","osmChange","version","generator","modify","_ref5","nodes","members","_ref6","nd","constrain","coords","OSMApi","auth","osmAuth","overpass","overpassApiUrl","nominatim","Nominatim","apiRoute","currentChangeset","route","options","opts","xhr","path","content","header","res","fetchJson","JSON","parse","authenticated","authenticate","getUser","getElements","mode","nominatimIncSearch","collected","exclude","el","place_id","elemsNom","osm_type","osm_id","getTwins","updateElements","checkChangesetOpen","open","updateChangeset","createChangeset","getChangesets","getCurrentChangeset","_getCurrentChangeset","createdId","_res$elements","closeChangeset","cb","diffRes","fromEntries","from","getAttribute","CookieManager","duration","cookieDuration","get","key","write","dict","dateStr","Date","toUTCString","clear","hasEmpty","UpdatesStorage","storageKey","load","window","localStorage","getItem","store","setItem","stringify","patchAndStore","diff","sync","itemsSync","n","authConfig","client_id","client_secret","redirect_uri","scope","cookieKeys","itemCenter","App","Component","super","cookieManager","osmApi","updatesStorage","parseURLPath","parseURLQuery","state","itemsToUpdate","focusedItem","watchFocus","serverMsg","lastReqTags","hash","location","z","street","city","county","country","postalcode","decodeURIComponent","searchParams","decodeURI","parseInt","isNaN","hide_filled","loadChangeset","setState","alert","_t","reload","updateLocation","toFixed","searchParts","structured","searchObj","encodeURIComponent","searchQ","protocol","host","pathname","history","replaceState","pushState","componentDidMount","setServerMsg","getLanguages","str","storeLanguages","slice","updatePosition","updateBbox","updateItem","doneCb","String","toString","focusItem","itemId","blurItem","centerItem","max","render","btnsDisabled","keys","touchedItems","mapHandlers","bind","itemHandlers","changesetHandlers","Container","fluid","Header","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cd3204c.chunk.js","sourcesContent":["import {useMapEvents, useMap} from 'react-leaflet';\n\nconst toArray = coord => [coord.lat, coord.lng];\n\nexport default function MapView({onLoad, onMove, onClick, center, zoom}) {\n    const map = useMap();\n    let c = map.getCenter();\n    if(c.lat !== center[0] || c.lng !== center[1])\n        map.flyTo(center, zoom);\n        \n    useMapEvents({\n        moveend: () => {\n            let c = map.getCenter();\n            onMove({\n                bbox: Object.values(map.getBounds()).map(toArray),\n                center: toArray(c),\n                zoom: map.getZoom()\n            });\n        },\n        click: () => {\n            onClick();\n        }\n    });\n    onLoad({\n        bbox: Object.values(map.getBounds())\n            .map(toArray),\n    });\n    return null;\n}\n","import L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.js\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst icons = [\n\n    {cat: \"tourism\", tag: [\"hotel\", \"hostel\"], iconType: \"hotel\"},\n    {cat: \"place\",   tag: [\"city\", \"town\", \"neighborhood\"], iconType: \"city\"},\n    {cat: \"place\",   tag: [\"village\", \"hamlet\"], iconType: \"home\"},\n\n    {cat: \"aeroway\", iconType: \"plane\"},\n    {cat: \"shop\", iconType: \"store\"},\n    {cat: \"historic\", iconType: \"monument\"},\n    {cat: \"leisure\", iconType: \"futbol\"},\n    {cat: \"tourism\", iconType: \"compass\"},\n    {cat: \"highway\", iconType: \"road\"},\n    {cat: \"building\", iconType: \"building\"},\n    {cat: \"natural\", iconType: \"tree\"},\n    {cat: \"waterway\", iconType: \"water\"}\n];\n\nconst createIcon = (type, color, shape) => L.AwesomeMarkers.icon({\n    icon: type,\n    prefix: \"fa\",\n    markerColor: color,\n    className: \"awesome-marker awesome-marker-\" + shape\n});\n\nconst createIcons = ({type, shape, color = \"blue\"}) => ({\n    icon: createIcon(type, color, shape),\n    touched: createIcon(type, \"orange\", shape),\n    focused: createIcon(type, \"red\", shape),\n})\n\nconst defaultIcon =  createIcons({type: \"circle\"});\n\nconst iconTypes = icons.map(icon => ({\n    ...icon,\n    ...createIcons({type: icon.iconType})\n}));\n  \nconst getIcon = (item, touched, focused) => {\n    return (\n        iconTypes.find(icon => \n            (!icon.tag && item[icon.cat]) || \n            (item.tags[icon.cat] && item.tags[icon.cat].indexOf(icon.tag) !== -1)\n        ) || \n        defaultIcon\n    )[focused ? \"focused\" : touched ? \"touched\" : \"icon\"];\n};\n\nexport default getIcon;\n","\nimport {useMemo, useRef} from \"react\";\nimport {Marker} from 'react-leaflet';\nimport getIcon from \"./getIcon\";\n\nexport default function MarkerWithFocus({\n    item, touched, focused, position, onClick\n}) {\n    const markerRef = useRef(null)\n    const eventHandlers = useMemo(\n        () => ({\n            click: onClick\n        }),\n      [onClick],\n    );\n    return (\n        <Marker\n            position={position} \n            icon={getIcon(item, touched, focused)}         \n            eventHandlers={eventHandlers}\n            ref={markerRef}\n        >\n        </Marker>\n    )\n}","/* eslint-disable */\n\nconst OSMtiles = {\n    tileUrl: \"https://tile.tracestrack.com/auto-en/{z}/{x}/{y}.png?key=ad185d84befbbb5463e093c682930866\",\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n};\n\n// localized tiles \n// note that new translations are applied after while\nconst WikimediaTiles = {\n    tileUrl: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\",\n    attribution: `<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia maps</a> | Map data © <a href=\"http://openstreetmap.org/copyright\">OpenStreetMap contributors</a>`,\n    // this will tell Map component to add ?lang={lang} to tileUrl\n    // lang = first language you will choose in the interface\n    addLang: true\n};\n\nconst mapConfig = {\n    ...OSMtiles,   \n    minZoom: 3,\n    maxZoom: 19\n};\nexport default mapConfig;\n","\nimport {MapContainer, TileLayer, ScaleControl} from 'react-leaflet';\nimport MapView from \"./MapView\";\nimport MarkerWithFocus from \"./MarkerWithFocus\";\nimport mapConfig from \"../../config/map\";\n\nconst osmCoordsArr = coord => [coord.lat, coord.lon];\nconst getItemPosition = item => osmCoordsArr(item.center || item);\n\nexport default function Map({\n    center, \n    zoom, \n    items, \n    touched,\n    lang = \"en\",\n    focused, \n    handlers: {onMove, onLoad, onClickItem, onClickMap}\n}) {\n    let tileUrl = mapConfig.tileUrl;\n    if(mapConfig.addLang) {\n        tileUrl += \"?lang=\" + lang;\n    }\n    return (\n        <MapContainer \n            center={center} \n            zoom={zoom} \n            scrollWheelZoom={true} \n            minZoom={mapConfig.minZoom}\n            maxZoom={mapConfig.maxZoom}\n        >\n            <TileLayer\n                attribution={mapConfig.attribution}\n                url={tileUrl}\n                minZoom={mapConfig.minZoom}\n                maxZoom={mapConfig.maxZoom}\n            />\n            <MapView \n                center={center}\n                zoom={zoom} \n                onMove={onMove}\n                onLoad={onLoad}\n                onClick={onClickMap}\n            />\n            {items\n            .map(item => (\n                <MarkerWithFocus \n                    item={item}\n                    position={getItemPosition(item)}\n                    touched={touched.indexOf(item.id) !== -1}\n                    focused={focused === item.id}\n                    onClick={() => onClickItem(item.id)}\n                    key={item.id}   \n                />\n            ))}\n            <ScaleControl />\n        </MapContainer>\n    );\n}","import Map from \"./Map\"\nexport default Map;","export default function NotLoggedInGreeting() {\n    return (\n      <div>\n        <h2>Welcome</h2>\n        <p>OpenStreetMap Localization Tool (OsmLT) is started by Tracestrack.com. It greately faciliates localizing OpenStreetMap. It is open sourced on <a href=\"https://github.com/tracestrack/openstreetmap-localization-tool\">Github</a>.</p>\n\n        <p>Login with your OpenStreetMap account and start editing today!</p>\n      </div>\n    );\n}\n","import Form from \"react-bootstrap/Form\";\n\nimport { useEffect, useState } from \"react\";\n\nexport default function TagTextInput({ title, selected, onChange }) {\n    // react-bootstrap dropdown has a bad habit to close after selecting an item\n    // that's working with menus okay, but not with checkbox group\n\n    const [dpShow, setDpShow] = useState(false);\n\n    useEffect(() => {\n        if (dpShow) {\n            const fn = document.addEventListener(\"click\", () => {\n                setDpShow(false);\n                document.removeEventListener(\"click\", fn);\n            });\n        }\n    }, [dpShow]);\n\n    const onTextChange = e => {\n        let langs = e.target.value.split(\",\").map(s => s.trim()).filter(s => s.length > 0);\n         onChange(langs);\n    }\n\n    return (\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>{title}</Form.Label>\n            <Form.Control type=\"tags\" placeholder=\"Enter language codes. Example: en, nl, zh\" defaultValue={selected} onChange={onTextChange} />\n            <Form.Text className=\"text-muted\">\n                Use comma to separate languages. Example: en, nl, zh\n            </Form.Text>\n        </Form.Group>\n    );\n}","import Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function LoadingButton({title, onClick, loading, disabled, ...props}) {\n    return (\n        <Button \n            disabled={disabled || loading}\n            onClick={onClick}\n            {...props}\n        >{title}\n        {loading ? \n            <Spinner \n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                className=\"spinner-border ml-2\"\n            /> \n            : null}\n        </Button>\n    );\n}\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport TagTextInput from \"./TagTextInput\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport \"./ItemsFilters.css\";\nimport React, { useCallback } from 'react';\n\n\nfunction ItemsFilters({\n  filters,\n  setFilter,\n  tagsList,\n  languages,\n  languagesList,\n  getItems,\n  disabled,\n  loading,\n  updateItems,\n  setLanguages\n}) {\n\n  const onKeyUp = useCallback(\n    (e) => {\n      if (e.charCode === 13) {\n        getItems();\n      }\n    },\n    [getItems], // Tells React to memoize regardless of arguments.\n  );\n\n\n  const onClickShortcut = useCallback(\n    (e) => {\n      let t = e.target.innerText;\n      console.log(t);\n      setFilter(t, () => { getItems(); });\n    },\n    [setFilter, getItems], // Tells React to memoize regardless of arguments.\n  );\n\n  return (\n    <Form className=\"item-filters\">\n\n      <TagTextInput\n        title=\"Choose Languages\"\n        selected={languages}\n        onChange={setLanguages}\n      />\n\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Tag to search: </Form.Label>\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>place=city</Button>\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>boundary</Button>\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>leisure</Button>\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>highway</Button>\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>waterway</Button>\n        <Form.Control type=\"text\" value={filters.tags} onChange={tags => setFilter(tags.target.value)} onKeyPress={onKeyUp} />\n      </Form.Group>\n\n      <Row className=\"d-flex justify-content-end\">\n        <LoadingButton\n          title=\"Get names\"\n          variant=\"primary\"\n          onClick={getItems}\n          loading={loading.items}\n        />\n        <LoadingButton\n          title=\"Update names\"\n          variant=\"success\"\n          disabled={disabled.updates}\n          onClick={updateItems}\n          loading={loading.updates}\n        />\n      </Row>\n\n    </Form>\n  );\n}\n\nexport default ItemsFilters;\n","import ItemsFilters from \"./ItemsFilters\";\nexport default ItemsFilters;","\nexport default function ItemTableHeader({languages, onClick}) {\n    const titles =  [\"Category\", \"Name\",...languages.map(lang => `name:${lang}`)];\n    return (\n        <tr>\n        {titles.map(title => \n            (<th \n                style={{cursor: \"pointer\"}}\n                key={title}\n                onClick={() => onClick(title.toLowerCase())}\n            >{title}\n            </th>))\n        }\n        </tr>\n    );\n}","import {useRef, useEffect} from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function Item({\n    item, \n    category,\n    languages, \n    focused,\n    handlers: {onFocus, onBlur, onChange, onIconClick}\n}) {\n    const firstInput = useRef(null);\n    useEffect(() => {\n        if (focused && \n            document.activeElement.id.indexOf(item.id+\"\") !== 0) {\n            firstInput.current.focus();\n        }\n    }, [focused, item]);\n    \n    return (\n        <tr>\n            <td className=\"category\">\n                <Badge variant=\"info\">\n                    {category}\n                </Badge><br />\n                <Badge variant=\"light\">\n                    {item.tags[category]}\n                </Badge>\n            </td>\n            <td>\n\n              {item.tags.wikidata && (<span><a target=\"_blank\" rel=\"noreferrer\" href={`https://www.wikidata.org/wiki/${item.tags.wikidata}`}>{item.tags.name}</a></span>)}\n              {!item.tags.wikidata && (<span>{item.tags.name}</span>)}\n\n                <i \n                    className=\"fa fa-crosshairs icon-btn mt-1\" \n                    style={{float: \"right\"}} \n                    onClick={() => onIconClick(item)}\n                />\n            </td>\n            {languages.map((lang, i) => (\n            <td key={lang}>\n                <input\n                    type=\"text\"\n                    id={item.id + lang}\n                    ref={i ? null : firstInput}\n                    value={item.tags[`name:${lang}`]||\"\"}    \n                    onChange={e => onChange(item, lang, e.target.value)}\n                    onFocus={() => focused ? null : onFocus(item.id)}\n                    onBlur={() => focused ? onBlur(item.id) : null}\n                />\n            </td>))}\n        </tr>\n    );\n}\n","\nimport {Fragment, useState} from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ItemTableHeader from \"./ItemTableHeader\";\nimport ItemTableRow from \"./ItemTableRow\"\nimport \"./ItemsTable.css\";\n\n\nconst compareNames = (i1, i2, field) =>\n        (i1.tags[field]||\"\").localeCompare(i2.tags[field]||\"\");\n\nconst compareCategoryTag = (i1, i2) =>\n        i1.category.localeCompare(i2.caterory) ||\n        it.item.tags[i1.category].localeCompare(i2.item.tags[i2.category]);\n\nconst compareTags = (i1, i2, field) => field === \"category\" ?\n        compareCategoryTag(i1, i2)\n        : compareNames(i1.item, i2.item, field)\n\n\nfunction ItemsTable({\n    languages,\n    handlers,\n    items,\n    focused,\n    categories\n}) {\n    const [sortField, setField] = useState(\"name\");\n    const [sortOrder, setOrder] = useState(1);\n\n    const setSort = field => {\n        if(field === sortField)\n            setOrder(-sortOrder);\n        else\n            setField(field);\n    };\n\n    return (\n        <Fragment>\n            <Table size=\"sm\">\n                <thead>\n                    <ItemTableHeader\n                        languages={languages}\n                        onClick={setSort}\n                    />\n                </thead>\n                <tbody>\n                    {items\n                    .filter(i => i.tags.name)\n                    .map(item => ({\n                        item,\n                        category: categories.find(t => !!item.tags[t])\n                    }))\n                    .sort((i1, i2) => sortOrder * compareTags(i1, i2, sortField))\n                    .map(({item, category}) => (\n                    <ItemTableRow\n                        category={category}\n                        languages={languages}\n                        key={item.id}\n                        item={item}\n                        focused={focused === item.id}\n                        handlers={handlers}\n                    />)\n                    )}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n\n}\n\nexport default ItemsTable;\n","import ItemsTable from \"./ItemsTable\";\nexport default ItemsTable;","import {Fragment} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\n\nexport default function UserLoggedIn({user, logout}) {\n    return (\n        <Fragment>\n            {user.img ? \n                <Image \n                    src={user.img.href}\n                    className=\"avatar\" \n                    thumbnail \n                    rounded\n                /> \n                : null\n            }\n            <Navbar.Text className=\"mx-2\"\n                >{user.display_name}\n            </Navbar.Text>\n            <Button onClick={logout}>Logout</Button>\n        </Fragment>\n    );\n}","import LoadingButton from \"../common/LoadingButton\";\n\nexport default function UserLoggedOut({login, loading}) {\n    return (\n        <LoadingButton \n            title=\"Login\"\n            loading={loading}\n            onClick={login}\n        />\n    );\n}\n","import AppNavbar from \"./AppNavbar\";\n\nexport default AppNavbar;","\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./AppNavbar.css\";\nimport packageJson from '../../package.alias.json';\nimport UserLoggedIn from \"./UserLoggedIn\";\nimport UserLoggedOut from \"./UserLoggedOut\";\n//import logo from \"../../assets/logo.svg\";\n\nexport default function AppNavbar({user, login, logout, loading}) {\n    return (\n        <Navbar \n            variant=\"light\"\n            bg=\"white\"\n        >\n            <Navbar.Brand className=\"mr-auto\">\n              OSM Localization Tool (OsmLT)   <span className=\"version\">v{packageJson[\"version\"]} by <a href=\"https://www.tracestrack.com/opensource/\">Tracestrack</a></span>\n            </Navbar.Brand>\n        {user.loggedIn ? \n            <UserLoggedIn \n                logout={logout} \n                user={user} \n            />\n            : <UserLoggedOut \n                login={login} \n                loading={loading} \n            />\n        }\n        </Navbar>\n    );\n}\n","import {useState, useEffect} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function ChangesetBox({\n    changeset, \n    handlers: {onUpdate, onClose}}\n) {\n    const [newComment, setComment] = useState(changeset?.tags.comment||\"\");\n\n    useEffect(() => {\n        setComment(changeset?.tags.comment||getCookie(\"lastComment\")||\"\");\n    }, [changeset]);\n\n    return (\n        <Card \n            id=\"changeset-box\"\n            className=\"p-2\"    \n        >\n            <Card.Body>\n                <Row className=\"pb-2 justify-content-center\">\n                    <Form.Label>Comment:</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        value={newComment}\n                        onChange={e => setComment(e.target.value)}\n                    />\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Button \n                      className=\"m-1\"\n                      onClick={() =>\n                        onClose({comment: newComment})\n                              }\n                    >\n                        Close changeset\n                    </Button>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n","import ChangesetSettings from \"./ChangesetSettings\";\nexport default ChangesetSettings;","import Button from \"react-bootstrap/Button\";\nimport ChangesetBox from \"./ChangesetBox\";\nimport \"./ChangesetSettings.css\";\nimport {useState, useEffect} from \"react\";\n\n\nexport default function ChangesetSettings({changeset, handlers}) {\n    const [visible, setVisible] = useState();\n\n    useEffect(() => {\n        if(!changeset)\n            setVisible(false);\n    }, [changeset]);\n\n    return (\n        <div id=\"changeset\">\n            <Button \n                id=\"changeset-button\"\n                onClick={() => setVisible(!visible)}\n                disabled={!changeset}\n            >{\n                changeset ? \n                `Active changeset: ${changeset.id}`\n                : \"No active changeset\"\n            }</Button>\n            {visible ?\n            <ChangesetBox  \n                changeset={changeset}\n                handlers={handlers}\n            />\n            : null}\n        </div>\n    );\n}","const defaultApiUrl = \"https://overpass-api.de/api/interpreter\";\n\nconst outTypes = \"qt body meta center\"; //we need meta for \"version\" field\n\nexport default class Overpass {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || defaultApiUrl;\n    }\n    request(query) {\n        const data = new FormData();\n        data.append(\"data\", query);\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n                },\n                body: new URLSearchParams(data)\n            })\n            .then(response => response.ok ?\n                response.json()\n                .then(({elements, remark}) => {\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        if(remark && remark.indexOf(\"error\") !== -1) {\n                            reject(remark);\n                        }\n                        resolve(elements);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n  /*\n    getTwins(el, tags) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const tagsStr = tags.filter(t => el.tags[t])\n                            .map(t => `[\"${t}\"=\"${el.tags[t]}\"]`);\n        const query =\n            `[out:json][timeout:25];\n            ${el.type}(${el.id});\n            complete(100) {\n                nwr(around:500)${tagsStr}[\"name\"=\"${el.tags.name}\"];\n            }\n            out ${outTypes};`\n\n        return this.request(query);\n    }*/\n    query({bbox, zoom, center, filters, languages}) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const baseEls = [`nwr[\"${condition}\"][\"name\"]`];\n        const elementsQuery = filters.hideFilled ?\n            baseEls.map(base =>\n                languages.map(l => `${base}[!\"name:${l}\"]`)\n                .join(\";\\n\")\n            )\n            : baseEls.join(\";\\n\");\n\n\n        const limit = filters.limit ? \" \" + filters.limit : \"\";\n        const query =\n            `[out:json][timeout:25][bbox:${bbox.join(\",\")}];\n            (\n                ${elementsQuery};\n            );\n            out ${outTypes} ${limit};`;\n\n        return this.request(query);\n    }\n    getById(typesIds) {\n        const elementsQuery = typesIds.map(\n                                ([type, id]) => `${type}(${id})`).join(\";\");\n        const query =\n        `[out:json][timeout:25];\n        (\n            ${elementsQuery};\n        );\n        out ${outTypes};`;\n\n    return this.request(query);\n    }\n}\n","const apiUrl = \"https://nominatim.openstreetmap.org\";\nconst apiElemLimit = 50;\n\n\n\nexport default class NominatimAPI {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || apiUrl;\n    }\n    query({bbox, filters}, excludeIds=[]) {\n        const searchQuery = filters.searchMode === \"simple\" ?\n            [\"q=\" + filters.search.q]\n            : Object.entries(filters.search)\n                .filter(([k,val]) => k !== \"q\" && !!val)\n                .map(([k, val]) => `${k}=${val}`)\n        const params = [\n            ...searchQuery,\n            \"limit=\" + Math.min(filters.limit, apiElemLimit),\n          //\"viewbox=\" + bbox.map(c => c.reverse().join(\",\")).join(\",\"),\n            \"format=json\",\n            \"bounded=1\",\n            \"dedupe=1\"\n        ];\n\n        if(excludeIds.length) {\n            params.push(\"exclude_place_ids=\" + excludeIds.join(\",\"));\n        }\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl + \"/search?\" + params.join(\"&\"))\n            .then(response => response.ok ?\n                response.json()\n                .then((resp) => {\n                    if(resp.error)\n                        reject(resp);\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        resolve(resp);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n}\n","import {osmAuth} from \"osm-auth\";\nimport Overpass from \"./Overpass\";\nimport Nominatim from \"./Nominatim\";\n\n// tag to identify changesets created by app\nconst appTag = \"OSM Localization Tool (OsmLT): https://localize.osm.tracestrack.com\";\n\n\nvar XML_CHAR_MAP = {\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'&': '&amp;',\n\t'\"': '&quot;',\n\t\"'\": '&apos;'\n};\n\nfunction escapeXml (s) {\n  if (typeof s !== \"string\") return s;\n\n  return s.replace(/[<>&\"']/g, function (ch) {\n    return XML_CHAR_MAP[ch];\n  });\n}\n\nfunction json2xml(json) {\n    return Object.entries(json)\n    .map(([k, v]) => {\n        let attrs = [];\n        let children = \"\";\n        Object.entries(v)\n        .forEach(([k1, v1]) => {\n            if(Array.isArray(v1)) {\n                const k11 = k1.replace(/s$/, \"\");\n                children += v1.map(obj => json2xml({[k11]: obj}))\n                            .join(\"\");\n            } else if(typeof(v1) === \"object\") {\n                children += json2xml({[k1]: v1});\n            } else {\n                attrs.push([k1, escapeXml(v1)]);\n            }\n        });\n\n        const attrsStr = attrs.map(([k1, v1]) => `${k1}=\"${v1}\"`).join(\" \");\n        return children ?\n        `<${k} ${attrsStr}>${children}</${k}>`\n        : `<${k} ${attrsStr}/>`;\n    })\n    .join(\"\");\n}\n\nfunction createChangeset() {\n    return json2xml({\n        osm: {\n            changeset: [\n                {tag: {k: \"created_by\", v: appTag}},\n                {tag: {k: \"comment\",    v: \"\"}}\n            ]\n        }\n    });\n}\nfunction createOsm(changeset) {\n    return json2xml({\n        osm: {\n            changeset: {\n                tags:  Object.entries(changeset.tags)\n                .map(([k, v]) => ({k, v}))\n            }\n        }\n    });\n}\n\nfunction createOsmChange(updates, changesetId) {\n    return json2xml({\n        osmChange: {\n            version: \"0.6\",\n            generator: appTag,\n            modify: Object.values(updates)\n                    .map(({type, tags, nodes, members, ...attrs}) => ({\n                        [type]: {\n                            ...attrs,\n                            changeset: changesetId,\n                            tags: Object.entries(tags)\n                                    .map(([k, v]) => ({k, v})),\n                            // way\n                            ...(nodes ? {nd: nodes.map(id => ({ref: id}))} : {}),\n                            // relation\n                            ...(members ? {members} : {})\n                        }\n                    }))\n        }\n    });\n}\n\nconst constrain = coords => coords.map((c, i) => i % 2 ? (c+180) % 360 - 180 : c % 90);\n\n/*\nfunction uniq(items, tags) {\n    const un = {};\n    return items.filter(i => {\n        const k = i.tags.name + tags.map(t => t + i.tags[t] ).join(\"\");\n        if(!un[k]) {\n            un[k] = 1;\n            return true;\n        }\n        return false;\n    });\n}*/\n\nexport default class OSMApi {\n    constructor(config) {\n        this.config = config;\n        this.auth = osmAuth({\n            ...config\n        });\n        this.overpass = new Overpass({\n            apiUrl: config.overpassApiUrl\n        });\n        this.nominatim = new Nominatim();\n        this.apiRoute = \"/api/0.6\";\n        this.currentChangeset = config.changeset || false;\n    }\n    fetch(route, options = {}) {\n        // wrapper for osm-auth and underlying ohauth to provide\n        // more fetch-alike interface\n        const {method, body, headers = {}, ...opts} = options;\n        return new Promise((resolve, reject) =>\n            this.auth.xhr({\n                method: method || 'GET',\n                path: this.apiRoute + route,\n                content: body,\n                options: {\n                    header: headers,\n                    ...opts\n                }\n            }, function(err, res) {\n                if(!err) {\n                    resolve(res);\n                } else {\n                    reject(err);\n                }\n            })\n        );\n    }\n    fetchJson(route, options) {\n        return this.fetch(route, options)\n                .then(res => JSON.parse(res));\n    }\n    authenticated() {\n        return this.auth.authenticated();\n    }\n    login() {\n        return new Promise(resolve =>\n            this.auth.authenticate(res => {\n                resolve(res);\n            })\n        );\n    }\n    logout() {\n        this.auth.logout();\n    }\n    getUser() {\n        return this.fetchJson(\"/user/details.json\");\n    }\n    getElements(opts) {\n        opts = {\n            ...opts,\n            bbox: opts.bbox.map(constrain)\n        };\n        if(opts.filters.mode === \"search\") {\n            return this.nominatimIncSearch(opts);\n        }\n        return this.overpass.query(opts)\n        .then(items => {\n            // filter out the items with the same name and selected category tags\n            // eg. there are could be multiple ways representing one street\n\n            //items = uniq(items, opts.filters.tags);\n            return items;\n        });\n    }\n    nominatimIncSearch(opts, collected = []) {\n        // Limit of results in Nominatim is just 50\n        // to load more, we need to repeat the request to its API\n        // with query param \"exclude_place_ids\" to exclude already loaded.\n        // Nominatim objects are places, but we need nodes, ways and relations,\n        // so it neccessary to get them from Overpass then.\n        const limit = opts.filters.limit;\n        const exclude = collected.map(el => el.place_id);\n        return this.nominatim.query(opts, exclude)\n            .then(elemsNom => {\n                collected = [...elemsNom, ...collected];\n                if(!collected.length)\n                    return [];\n\n                if(limit && elemsNom.length &&\n                   collected.length < limit) {\n                  // to keep it simple, we don't need to support limit\n                  //return this.nominatimIncSearch(opts, collected);\n                }\n                return this.overpass.getById(\n                    collected.map(el => [el.osm_type, el.osm_id])\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n                if(collected.length) {\n                    return this.overpass.getById(\n                        collected.map(el => [el.osm_type, el.osm_id])\n                    );\n                }\n            });\n    }\n    getTwins(el, tags) {\n        return this.overpass.getTwins(el, tags);\n    }\n\n    updateElements(updates) {\n        if(!this.currentChangeset) {\n            return this.createChangeset()\n            .then(() => this.updateChangeset(updates));\n        }\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this.updateChangeset(updates));\n            }\n            return this.updateChangeset(updates);\n        });\n    }\n    getChangesets() {\n        return this.fetch(\"/changesets\");\n    }\n    getCurrentChangeset() {\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this._getCurrentChangeset());\n            }\n            return this._getCurrentChangeset();\n        })\n    }\n    _getCurrentChangeset() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => res.elements[0]);\n    }\n    createChangeset() {\n        return this.fetch(\"/changeset/create\", {\n            method: \"PUT\",\n            body: createChangeset(),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        }).then(createdId => {\n            this.currentChangeset = createdId;\n        });\n    }\n    checkChangesetOpen() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => {\n            return res.elements?.pop().open;\n        })\n    }\n  closeChangeset(changeset, cb) {\n\n      this.fetch(`/changeset/${this.currentChangeset}`, {\n        method: \"PUT\",\n        body: createOsm(changeset),\n        headers: {\n          'Content-Type': \"text/plain\"\n        }\n      }).then(() => {\n        this.fetch(`/changeset/${this.currentChangeset}/close`, {\n          method: \"PUT\",\n        }).then(() => {\n          this.currentChangeset = false;\n          cb();\n        });\n      });\n    }\n\n    updateChangeset(updates) {\n        return this.fetch(`/changeset/${this.currentChangeset}/upload`, {\n            method: \"POST\",\n            body: createOsmChange(updates, this.currentChangeset),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        })\n        .then(diffRes => {\n            // the format of responce is xml document like:\n            //\n            // <diffResult generator=\"OpenStreetMap Server\" version=\"0.6\">\n\t        //     <node|way|relation old_id=\"#\" new_id=\"#\" new_version=\"#\"/>\n            //  </diffResult>\n            //\n            // old_id == new_id, because we apply only modify\n\n            return Object.fromEntries(\n                Array.from(diffRes.children[0].children)\n                .map(el => [\n                    el.getAttribute(\"new_id\"), {\n                        version: +el.getAttribute(\"new_version\")\n                    }]));\n        });\n    }\n\n}\n","// Some abstraction for document.cookie handling\n\nexport default class CookieManager {\n    constructor(duration = 365 * 24 * 3600) {\n        this.cookieDuration = duration;\n    }\n    \n    get(key) {\n        const value = document.cookie.split(';')\n                                     .find(s => s.indexOf(key + '=') !== -1);\n        return value ? \n              value.replace(key + '=', '').trim() \n            : false;\n    }\n    write(dict, duration = this.cookieDuration) {\n        const dateStr = new Date(Date.now() + duration * 1000)\n                            .toUTCString();\n\n        Object.entries(dict)\n        .forEach(([k, v]) => {\n            document.cookie = `${k}=${v}; path=/; expires=${dateStr}`;\n        });\n    }\n\n    clear() {        \n        document.cookie.split(';')\n        .forEach(s => {\n            const k = s.split('=')[0];\n            document.cookie = `${k}=; path=/`;\n        });\n    }\n}\n","// helper class to sync results from overpass api with latest updates\n\nconst hasEmpty = (item, langs) => langs.find(l => !(item.tags[`name:${l}`]));\n\n\nexport default class UpdatesStorage {\n    updates = {};\n    storageKey = \"osm-localizer_updated-items\";\n    load() {\n        if(window.localStorage) {\n            const data = localStorage.getItem(this.storageKey);\n            if(data) {\n                this.updates = JSON.parse(data);\n            }\n        }\n    }\n    store() {\n        if(window.localStorage) {\n            localStorage.setItem(this.storageKey, JSON.stringify(this.updates));\n        }\n    }\n    patchAndStore(items, diff) {\n        for(let id in diff) {\n            if(items[id]) {\n                items[id] = {...items[id], ...diff[id]};\n                this.updates[id] = items[id];\n            }\n        }\n        this.store();\n    }\n    sync(items, hideFilled, langs) {\n        const itemsSync = [];\n        for(let i = 0, n = items.length; i < n; i++) {\n            const id = items[i].id;\n            if(this.updates[id]) {\n                if(this.updates[id].version > items[i].version) {\n                    // if hideFilled = true, then we need manually filter out\n                    // items with filled fields, which operass doesn't know\n                    // about yet.\n                    if(!hideFilled || hasEmpty(this.updates[id], langs))\n                        itemsSync.push(this.updates[id]);\n                } else {\n                    delete this.updates[id];\n                    itemsSync.push(items[i]);\n                }\n            } else {\n                itemsSync.push(items[i]);\n            }\n        }\n        this.store();\n        return itemsSync;\n    }\n}","/* eslint-disable */\n\nconst prodServer = {\n    client_id: \"M8nzCZPZGnlJoSrGAMbzsGXXZYtMPg_eyoyEjCyCydo\",\n    client_secret:       \"SdRMd2ReOVMO0VeWVdNuhY0hyYgbbLwMGAusMnO47Hs\",\n    url:                \"https://www.openstreetmap.org\",\n    redirect_uri: 'https://localize.osm.tracestrack.com/land.html',\n    apiUrl: 'https://api.openstreetmap.org',\n    scope: 'openid write_api read_prefs',\n};\n\n// use this when testing new features to not spoil main osm database\n\nconst devServer = {\n    client_id: \"j_AG2do_-ig3P3CtYMwLN0tsXum2Bs3JrAtVErwZN3w\",\n    client_secret:       \"EbyaqsZlpQON1ci5curWKX4mA6j_iHTzH73v2g5Htto\",\n    url:                \"https://www.openstreetmap.org\",\n    redirect_uri: 'http://127.0.0.1:3000/land.html',\n    apiUrl: 'https://api.openstreetmap.org',\n    scope: 'openid write_api read_prefs',\n};\n\nconst mainServer = prodServer;\n\nconst authConfig = {   \n    ...mainServer,\n  overpassApiUrl:     \"https://overpass.kumi.systems/api/interpreter\"\n  //overpassApiUrl: \"https://overpass.nchc.org.tw/api/interpreter\"\n};\nexport default authConfig;\n","\nconst languagesList = [ \n    { key: \"de\", title: \"Deutsch\" },\n    { key: \"en\", title: \"English\" },\n    { key: \"fr\", title: \"Français\"},\n    { key: \"ja\", title: \"日本語\" },\n    { key: \"ru\", title: \"Русский\" },\n    { key: \"zh-Hans\", title: \"简体中文\" },\n    { key: \"zh-Hant\", title: \"繁体中文\" },\n    { key: \"zh\", title: \"中文\" },\n    { key: \"ml\", title: \"മലയാളം\" },\n    { key: \"ta\", title: \"தமிழ்\" },\n    { key: \"kn\", title: \"ಕನ್ನಡ\" },\n    { key: \"bn\", title: \"বাংলা\" },\n    { key: \"te\", title: \"తెలుగు\" },\n    { key: \"pa\", title: \"ਪੰਜਾਬੀ\" },\n    { key: \"hi\", title: \"हिन्दी\" },\n    { key: \"it\", title: \"Italiano\" },\n    { key: \"or\", title: \"ଓଡ଼ିଆ\" }\n];\n\nconst tagsList = [\n    //{key: \"aerialway\",          title: \"Aerialway\"},\n    //{key: \"aerolway\",           title: \"Aeroway\"},\n    {key: \"amenity\",            title: \"Amenity\"},\n    //{key: \"barrier\",            title: \"Barrier\"},\n    //{key: \"boundary\",           title: \"Boundary\" },\n    {key: \"building\",           title: \"Building\" },\n    //{key: \"craft\",              title: \"Craft\" },\n    //{key: \"emergency\",          title: \"Emergency\" },\n    //{key: \"geological\",         title: \"Geological\" },\n    //{key: \"healthcare\",         title: \"Healthcare\"},\n    {key: \"highway\",            title: \"Highway\"},\n    //{key: \"historic\",           title: \"Historic\"},\n    {key: \"landuse\",            title: \"Landuse\"},\n    {key: \"leisure\",            title: \"Leisure\"},\n    {key: \"man_made\",           title: \"Man-made\"},\n    //{key: \"military\",           title: \"Military\"},\n    {key: \"natural\",            title: \"Natural\"},\n    //{key: \"office\",             title: \"Office\"},\n    {key: \"place\",              title: \"Place\" },\n    //{key: \"power\",              title: \"Power\" },\n    {key: \"public_transport\",   title: \"Public transport\" },\n    {key: \"railway\",            title: \"Railway\" },\n    {key: \"route\",              title: \"Route\" },\n    //{key: \"shop\",               title: \"Shop\" },\n    //{key: \"telecom\",            title: \"Telecom\" },\n    {key: \"tourism\",            title: \"Tourism\" },\n    {key: \"waterway\",           title: \"Waterway\"}\n];\n\nexport {\n    languagesList, \n    tagsList\n};\n","import {Fragment, Component} from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Card from \"react-bootstrap/Card\";\nimport Map from \"./components/Map\";\nimport NotLoggedInGreeting from \"./components/NotLoggedInGreeting\";\nimport ItemsFilters from \"./components/ItemsFilters\";\nimport ItemsTable from \"./components/ItemsTable\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ChangesetSettings from \"./components/ChangesetSettings\";\nimport OSMApi from \"./api/OSM\";\nimport CookieManager from \"./utils/CookieManager\";\nimport UpdatesStorage from \"./utils/UpdatesStorage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport authConfig from \"./config/auth\";\nimport {languagesList, tagsList} from \"./config/interface\";\n\nconst cookieKeys = {\n    languages: \"_osm-localization_languages\",\n    changeset: \"_osm-locatization_changeset\"\n};\n\nconst itemCenter = item => item.center ?\n                            [item.center.lat, item.center.lon]\n                          : [item.lat, item.lon];\nconst itemMinZoom = 14;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.cookieManager = new CookieManager();\n        this.osmApi = new OSMApi({\n            ...authConfig,\n            changeset: this.cookieManager.get(cookieKeys.changeset)\n        });\n        this.updatesStorage = new UpdatesStorage();\n        this.updatesStorage.load();\n        const {zoom, center} = this.parseURLPath();\n        const filters = this.parseURLQuery();\n\n        this.bbox = [];\n        this.state = {\n            user: {\n                loggedIn: false\n            },\n            center,\n            zoom,\n            filters,\n            items: [],\n            itemsToUpdate: {},\n            focusedItem: false,\n            watchFocus: false, // center map on focused item\n            loading: {\n                items: false,\n                updates: false,\n                auth: false\n            },\n            serverMsg: {\n                error: false,\n                text: \"\"\n            },\n            changeset: null,\n            lastReqTags: []\n        };\n    }\n    parseURLPath() {\n        let zoom = 6;\n        let center = [0, 0];\n        const hash = window.location.hash.replace(\"#/\", \"\");\n        if (hash) {\n            const [z, lat, lng] = hash.split(\"/\");\n            zoom = +z;\n            center = [+lat, +lng];\n        }\n\n        return {zoom, center};\n    }\n    parseURLQuery() {\n        const filters = {\n            tags: [\"place\"],\n            limit: 100,\n            hideFilled: false,\n            search: {\n                q: \"\",\n                street:  \"\",\n                city: \"\",\n                county: \"\",\n                state: \"\",\n                country: \"\",\n                postalcode: \"\"\n            },\n            searchMode: \"simple\",\n            mode: \"tags\"\n        };\n        const search = window.location.search.replace(\"?\", \"\");\n        if(search) {\n            const params = Object.fromEntries(\n                search.split(\"&\")\n                .map(e => e.split(\"=\"))\n            );\n            if(params.tags) {\n                  filters.tags = decodeURIComponent(params.tags);\n            }\n            if(params.search) {\n                try {\n                    const searchParams = JSON.parse(decodeURI(params.search));\n                    for(let k in filters.search) {\n                        filters.search[k] = searchParams[k] || filters.search[k];\n                        if(k !== \"q\" && !!searchParams[k])\n                            filters.searchMode = \"structured\";\n                    }\n                    if(!params.tags) {\n                        filters.mode = \"search\";\n                    }\n                } catch (e) {\n\n                }\n            }\n            if(params.limit) {\n                const n = parseInt(params.limit);\n                if(!isNaN(n))\n                    filters.limit = n;\n            }\n            if(params.hide_filled) {\n                filters.hideFilled = params.hide_filled &&\n                                    +params.hide_filled !== 0;\n            }\n        }\n        return filters;\n    }\n    loadChangeset() {\n        if(this.osmApi.currentChangeset) {\n            this.osmApi.getCurrentChangeset()\n            .then(changeset => {\n                console.log(changeset)\n                this.setState({changeset});\n            })\n        }\n    }\n\n    closeChangeset({comment}) {\n      let changeset = {\n                ...this.state.changeset,\n                tags: {\n                    ...this.state.changeset.tags,\n                    comment\n                }\n      };\n\n      if (changeset.tags.comment === \"\") {\n        alert(\"Please add a commit message first.\");\n      }\n\n      console.log(changeset);\n\n      let _t = this;\n      this.osmApi.closeChangeset(changeset, () => {\n        //_t.setState({changeset: null});\n        _t.cookieManager.write({\n          \"lastComment\": comment\n        });\n        window.location.reload();\n      }\n      );\n    }\n\n    updateLocation(replace=false) {\n        const {\n            zoom,\n            center: [lat, lng],\n            filters: {tags, limit, hideFilled, search, mode, searchMode}\n        } = this.state;\n\n        const hash = [\"/#\", zoom, lat.toFixed(4), lng.toFixed(4)].join(\"/\");\n        const searchParts = [];\n        if(mode === \"search\") {\n            const {q, ...structured} = search;\n            const searchObj = (searchMode === \"simple\") ?\n                               {q}\n                              : structured;\n\n            searchParts.push(`search=${JSON.stringify(searchObj)}`);\n        }\n        else {\n            searchParts.push(`tags=${encodeURIComponent(tags)}`);\n            if(hideFilled)\n                searchParts.push(`hide_filled=1`);\n        }\n        if(limit)\n            searchParts.push(`limit=${limit}`);\n\n        const searchQ = \"?\" + searchParts.join(\"&\");\n\n        let url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + searchQ + hash;\n\n        if(replace)\n            window.history.replaceState({searchQ, hash}, '', url);\n        else\n            window.history.pushState({searchQ, hash}, '', url);\n    }\n    componentDidMount() {\n        if(this.osmApi.authenticated()) {\n            this.getUser();\n        }\n    }\n  setServerMsg(serverMsg) {\n    console.log(serverMsg);\n        this.setState({serverMsg});\n        const fn = () => {\n            document.removeEventListener(\"click\", fn);\n            this.setState({serverMsg: {\n                error: false,\n                text: \"\"\n            }});\n        }\n        document.addEventListener(\"click\", fn);\n    }\n    login() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                auth: true\n            }\n        });\n        this.osmApi.login()\n        .then(() => {\n            this.getUser();\n        });\n    }\n    getLanguages() {\n        const str = this.cookieManager.get(cookieKeys.languages);\n        return str ? str.split(\"+\") : false;\n    }\n    setLanguages(languages) {\n        \n        this.setState({\n            user: {\n                ...this.state.user,\n                languages\n            }\n        });\n        this.storeLanguages(languages);\n    }\n    storeLanguages(languages) {\n        this.cookieManager.write({\n            [cookieKeys.languages]: languages.join(\"+\")\n        });\n    }\n    getUser() {\n        this.osmApi.getUser()\n        .then(res => {\n            let languages = this.getLanguages() ||\n                            res.user.languages.filter(l =>\n                                languagesList.find(({key}) => key === l)\n                            );\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    auth: false\n                },\n                user: {\n                    loggedIn: true,\n                    ...res.user,\n                    languages\n                }\n            });\n            this.storeLanguages(languages);\n            this.loadChangeset();\n        });\n    }\n    logout() {\n        this.osmApi.logout();\n        this.setState({\n            user: {\n                loggedIn: false\n            }\n        });\n    }\n  getItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                items: true\n            }\n        });\n        this.osmApi.getElements({\n            center: this.state.center,\n            zoom: this.state.zoom,\n            bbox: this.bbox,\n            filters: this.state.filters,\n            languages: this.state.user.languages\n        })\n        .then(items => {\n            this.setState({\n                items: this.updatesStorage.sync(items,\n                                                this.state.filters.hideFilled,\n                                                this.state.user.languages),\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                },\n                lastReqTags: this.state.filters.mode === \"search\" ?\n                                  tagsList.map(t => t.key)\n                                : this.state.filters.tags.slice()\n            });\n        })\n        .catch(err => {\n            console.log(err)\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                }\n            });\n            this.setServerMsg({\n                text: err,\n                error: true\n            });\n        });\n    }\n    updatePosition({bbox, center, zoom}) {\n        this.setState(\n            {center, zoom},\n            () => this.updateLocation(true));\n        this.bbox = bbox;\n    }\n    updateBbox({bbox}) {\n        this.bbox = bbox;\n    }\n    updateItem(item, lang, value) {\n      item.tags[`name:${lang}`] = value;\n      /*\n        if(!item.twins) {\n            // get all the items with the same name and tags\n            item.twins = [];\n            this.osmApi.getTwins(item, this.state.filters.tags)\n            .then(twins => {\n                item.twins = twins;\n                item.twins.forEach(i => {\n                    i.tags[`name:${lang}`] = value;\n                });\n            });\n        } else {\n            item.twins.forEach(i => {\n                i.tags[`name:${lang}`] = value;\n            });\n        }*/\n        this.setState({itemsToUpdate: {\n            ...this.state.itemsToUpdate,\n            [item.id]: item\n        }});\n    }\n  setFilter(updates, doneCb) {\n    console.log(updates);\n        this.setState({\n            filters: {\n                ...this.state.filters,\n              ...{tags: updates}\n            }\n        }, () => {this.updateLocation();\n                  if (doneCb) doneCb();\n                 });\n    }\n    updateItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                updates: true\n            }\n        });\n      let items = this.state.itemsToUpdate;\n/*        Object.values(this.state.itemsToUpdate)\n            .forEach(i => {\n            let {twins, ...self} = i;\n            items[self.id] = self;\n            twins.forEach(t => {\n                items[t.id] = t;\n            });\n            }); */\n      console.log(items);\n        this.osmApi.updateElements(items)\n        .then(diff => {\n            this.updatesStorage.patchAndStore(\n                this.state.itemsToUpdate, diff\n            );\n            this.cookieManager.write({\n                [cookieKeys.changeset]: this.osmApi.currentChangeset\n            });\n\n            this.setServerMsg({\n                text: \"Items are successfully updated.\",\n                error: false\n            });\n\n            this.setState({\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n            this.loadChangeset();\n        })\n        .catch(err => {\n            this.setServerMsg({\n                text: String.toString(err),\n                error: true\n            });\n\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n        });\n    }\n    focusItem(itemId) {\n        if(this.state.watchFocus) {\n            const item = this.state.items.find(i => i.id === itemId);\n            this.setState({\n                center: itemCenter(item),\n                focusedItem: itemId\n            });\n        } else {\n            this.setState({\n                focusedItem: itemId\n            });\n        }\n    }\n    blurItem() {\n        this.setState({\n            focusedItem: false\n        });\n    }\n    centerItem(item) {\n        this.setState({\n            center: itemCenter(item),\n            zoom: Math.max(this.state.zoom, itemMinZoom)\n        });\n    }\n    render() {\n        const btnsDisabled = {\n            // query for a large bbox is too slow and won't work\n            // also don't load new items till updates are not done and synced\n            items: this.state.loading.updates ||\n                (this.state.filters.mode === \"tags\" ?\n                    this.state.zoom < 10\n                    :  !(this.state.filters.searchMode === \"simple\" ?\n                            this.state.filters.search.q\n                            : Object.entries(this.state.filters.search)\n                                .find(([k,v]) => k !== \"q\" && !!v)\n                )),\n            // nothing to update\n            updates: !Object.keys(this.state.itemsToUpdate).length\n        };\n        const touchedItems  = Object.keys(this.state.itemsToUpdate).map(s => +s);\n        const mapHandlers = {\n            onLoad:      this.updateBbox.bind(this),\n            onMove:      this.updatePosition.bind(this),\n            onClickItem: this.focusItem.bind(this),\n            onClickMap:  this.blurItem.bind(this),\n        };\n\n        const itemHandlers = {\n            onFocus:     this.focusItem.bind(this),\n            onBlur:      this.blurItem.bind(this),\n            onChange:    this.updateItem.bind(this),\n            onIconClick: this.centerItem.bind(this)\n        };\n        const changesetHandlers = {\n            onClose:    this.closeChangeset.bind(this)\n        };\n\n        const lang = this.state.user.languages ?\n            this.state.user.languages[0]\n            : \"en\";\n\n        const tags = tagsList.map(t => t.key);\n        return (\n            <Container className=\"App\" fluid>\n                <AppNavbar\n                    login={this.login.bind(this)}\n                    logout={this.logout.bind(this)}\n                    user={this.state.user}\n                    loading={this.state.loading.auth}\n                />\n                <Map\n                    zoom={this.state.zoom}\n                    center={this.state.center}\n                    items={this.state.items}\n                    lang={lang}\n                    touched={touchedItems}\n                    focused={this.state.focusedItem}\n                    watchFocus={this.state.watchFocus}\n                    handlers={mapHandlers}\n                />\n                <Card\n                    className=\"card-items card p-1\"\n                >{\n                this.state.user.loggedIn ?\n                    <Fragment>\n                        <Card.Header>\n                            <ItemsFilters\n                                filters={this.state.filters}\n                                setFilter={this.setFilter.bind(this)}\n                                tagsList={tagsList}\n                                loading={this.state.loading}\n                                languages={this.state.user.languages||[]}\n                                languagesList={languagesList}\n                                setLanguages={this.setLanguages.bind(this)}\n                                items={this.state.items}\n                                getItems={this.getItems.bind(this)}\n                                disabled={btnsDisabled}\n                                updateItems={this.updateItems.bind(this)}\n                            />\n                            <div className={this.state.serverMsg.error ?\n                                              \"text-danger\"\n                                            : \"text-success\"}>\n                                {this.state.serverMsg.text}\n                            </div>\n                        </Card.Header>\n                        <Card.Body\n                            className={this.state.loading.items ?\n                                      \"items-loading\"\n                                      : \"\"}\n                        >\n                            <ItemsTable\n                                categories={tags}\n                                languages={this.state.user.languages||[]}\n                                items={this.state.items}\n                                focused={this.state.focusedItem}\n                                handlers={itemHandlers}\n                            />\n\n                        </Card.Body>\n                    </Fragment>\n                    :  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                            <NotLoggedInGreeting />\n                        </Card.Body>\n                }</Card>\n                <ChangesetSettings\n                    changeset={this.state.changeset}\n                    handlers={changesetHandlers}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}