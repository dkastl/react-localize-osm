{"version":3,"sources":["components/Map/MapView.js","components/Map/getIcon.js","components/Map/MarkerWithFocus.js","config/map.js","components/Map/Map.js","components/Map/index.js","components/NotLoggedInGreeting.js","components/ItemsFilters/CheckboxButton.js","components/ItemsFilters/CheckboxGroup.js","components/ItemsFilters/CheckboxDropdownItem.js","components/ItemsFilters/CheckboxDropdownGroup.js","components/common/LoadingButton.js","components/ItemsFilters/ItemsFilters.js","components/ItemsFilters/index.js","components/ItemsTable/ItemTableHeader.js","components/ItemsTable/ItemTableRow.js","components/ItemsTable/ItemsTable.js","components/ItemsTable/index.js","components/AppNavbar/UserLoggedIn.js","components/AppNavbar/UserLoggedOut.js","components/AppNavbar/index.js","components/AppNavbar/AppNavbar.js","components/ChangesetSettings/ChangesetBox.js","components/ChangesetSettings/index.js","components/ChangesetSettings/ChangesetSettings.js","api/Overpass.js","api/Nominatim.js","api/OSM.js","utils/CookieManager.js","utils/UpdatesStorage.js","config/auth.js","config/interface.js","App.js","reportWebVitals.js","index.js"],"names":["toArray","coord","lat","lng","MapView","_ref","onLoad","onMove","onClick","center","zoom","map","useMap","c","getCenter","flyTo","useMapEvents","moveend","bbox","Object","values","getBounds","getZoom","click","createIcon","type","color","shape","L","AwesomeMarkers","icon","prefix","markerColor","className","createIcons","_ref$color","touched","focused","defaultIcon","iconTypes","cat","tag","iconType","_objectSpread","getIcon","item","find","tags","indexOf","MarkerWithFocus","position","markerRef","useRef","eventHandlers","useMemo","_jsx","Marker","ref","mapConfig","tileUrl","attribution","minZoom","maxZoom","getItemPosition","lon","Map","items","_ref$lang","lang","_ref$handlers","handlers","onClickItem","onClickMap","addLang","_jsxs","MapContainer","scrollWheelZoom","children","TileLayer","url","id","ScaleControl","NotLoggedInGreeting","href","CheckboxButton","vkey","title","onChange","checked","Button","variant","size","FormCheck","CheckboxGroup","itemsList","selected","_ref$min","min","_ref$Checkbox","Checkbox","Fragment","_ref2","key","i","concat","_toConsumableArray","length","slice","toggle","CheckboxDropdownItem","Dropdown","Item","onMouseDown","e","stopPropagation","active","CheckboxDropdownGroup","_useState","useState","_useState2","_slicedToArray","dpShow","setDpShow","useEffect","fn","document","addEventListener","removeEventListener","DropdownButton","show","preventDefault","rootCloseEvent","LoadingButton","loading","disabled","props","_objectWithoutProperties","_excluded","Spinner","as","animation","ItemsFilters","filters","setFilter","languages","tagsList","languagesList","getItems","updateItems","setLanguages","onKeyUp","useCallback","charCode","onClickShortcut","t","target","innerText","console","log","Form","Group","controlId","Label","Control","value","onKeyPress","Row","updates","ItemTableHeader","titles","style","cursor","toLowerCase","category","onFocus","onBlur","onIconClick","firstInput","activeElement","current","focus","Badge","wikidata","rel","name","float","compareTags","i1","i2","field","localeCompare","caterory","it","compareCategoryTag","compareNames","ItemsTable","categories","sortField","setField","_useState3","_useState4","sortOrder","setOrder","Table","filter","sort","ItemTableRow","UserLoggedIn","user","logout","img","Image","src","thumbnail","rounded","Navbar","Text","display_name","UserLoggedOut","login","AppNavbar","bg","Brand","packageJson","loggedIn","ChangesetBox","changeset","onClose","onUpdate","comment","newComment","setComment","parts","cookie","split","pop","shift","getCookie","Card","Body","ChangesetSettings","visible","setVisible","outTypes","Overpass","config","arguments","undefined","_classCallCheck","this","apiUrl","_createClass","query","_this","data","FormData","append","reqId","performance","now","Promise","resolve","reject","fetch","method","headers","body","URLSearchParams","then","response","ok","json","elements","remark","text","catch","err","condition","replace","baseEls","elementsQuery","hideFilled","base","l","join","limit","request","typesIds","_ref3","_ref4","NominatimAPI","excludeIds","searchQuery","searchMode","search","q","entries","k","val","_ref5","params","Math","push","resp","error","appTag","XML_CHAR_MAP","json2xml","v","attrs","forEach","s","k1","v1","Array","isArray","k11","obj","_defineProperty","ch","attrsStr","_ref6","createOsm","osm","_ref7","_ref8","createOsmChange","changesetId","osmChange","version","generator","modify","_ref9","nodes","members","_ref10","_ref11","nd","constrain","coords","OSMApi","auth","osmAuth","overpass","overpassApiUrl","nominatim","Nominatim","apiRoute","currentChangeset","route","options","_options$headers","opts","_excluded2","xhr","path","content","header","res","JSON","parse","authenticated","_this2","authenticate","fetchJson","mode","nominatimIncSearch","_this3","collected","exclude","el","place_id","elemsNom","getById","osm_type","osm_id","getTwins","_this4","checkChangesetOpen","open","updateChangeset","createChangeset","_this5","_getCurrentChangeset","_this6","createdId","_res$elements","cb","_this7","diffRes","fromEntries","from","getAttribute","CookieManager","duration","cookieDuration","trim","dict","dateStr","Date","toUTCString","hasEmpty","langs","UpdatesStorage","storageKey","window","localStorage","getItem","setItem","stringify","diff","store","itemsSync","n","authConfig","oauth_consumer_key","oauth_secret","cookieKeys","itemCenter","App","_Component","_inherits","_super","_createSuper","call","cookieManager","osmApi","get","updatesStorage","load","_this$parseURLPath","parseURLPath","parseURLQuery","state","itemsToUpdate","focusedItem","watchFocus","serverMsg","lastReqTags","hash","location","_hash$split","_hash$split2","street","city","county","country","postalcode","decodeURIComponent","searchParams","decodeURI","parseInt","isNaN","hide_filled","getCurrentChangeset","setState","alert","_t","closeChangeset","write","reload","_this$state","_this$state$center","_this$state$filters","toFixed","searchParts","structured","searchObj","encodeURIComponent","searchQ","protocol","host","pathname","history","replaceState","pushState","getUser","str","storeLanguages","getLanguages","loadChangeset","getElements","sync","setServerMsg","updateLocation","doneCb","_this8","_this9","updateElements","patchAndStore","String","toString","itemId","max","btnsDisabled","keys","touchedItems","mapHandlers","updateBbox","bind","updatePosition","focusItem","blurItem","itemHandlers","updateItem","centerItem","changesetHandlers","Container","fluid","Header","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48ef846d.chunk.js","sourcesContent":["import {useMapEvents, useMap} from 'react-leaflet';\n\nconst toArray = coord => [coord.lat, coord.lng];\n\nexport default function MapView({onLoad, onMove, onClick, center, zoom}) {\n    const map = useMap();\n    let c = map.getCenter();\n    if(c.lat !== center[0] || c.lng !== center[1])\n        map.flyTo(center, zoom);\n        \n    useMapEvents({\n        moveend: () => {\n            let c = map.getCenter();\n            onMove({\n                bbox: Object.values(map.getBounds()).map(toArray),\n                center: toArray(c),\n                zoom: map.getZoom()\n            });\n        },\n        click: () => {\n            onClick();\n        }\n    });\n    onLoad({\n        bbox: Object.values(map.getBounds())\n            .map(toArray),\n    });\n    return null;\n}\n","import L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.js\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst icons = [\n\n    {cat: \"tourism\", tag: [\"hotel\", \"hostel\"], iconType: \"hotel\"},\n    {cat: \"place\",   tag: [\"city\", \"town\", \"neighborhood\"], iconType: \"city\"},\n    {cat: \"place\",   tag: [\"village\", \"hamlet\"], iconType: \"home\"},\n\n    {cat: \"aeroway\", iconType: \"plane\"},\n    {cat: \"shop\", iconType: \"store\"},\n    {cat: \"historic\", iconType: \"monument\"},\n    {cat: \"leisure\", iconType: \"futbol\"},\n    {cat: \"tourism\", iconType: \"compass\"},\n    {cat: \"highway\", iconType: \"road\"},\n    {cat: \"building\", iconType: \"building\"},\n    {cat: \"natural\", iconType: \"tree\"},\n    {cat: \"waterway\", iconType: \"water\"}\n];\n\nconst createIcon = (type, color, shape) => L.AwesomeMarkers.icon({\n    icon: type,\n    prefix: \"fa\",\n    markerColor: color,\n    className: \"awesome-marker awesome-marker-\" + shape\n});\n\nconst createIcons = ({type, shape, color = \"blue\"}) => ({\n    icon: createIcon(type, color, shape),\n    touched: createIcon(type, \"orange\", shape),\n    focused: createIcon(type, \"red\", shape),\n})\n\nconst defaultIcon =  createIcons({type: \"circle\"});\n\nconst iconTypes = icons.map(icon => ({\n    ...icon,\n    ...createIcons({type: icon.iconType})\n}));\n  \nconst getIcon = (item, touched, focused) => {\n    return (\n        iconTypes.find(icon => \n            (!icon.tag && item[icon.cat]) || \n            (item.tags[icon.cat] && item.tags[icon.cat].indexOf(icon.tag) !== -1)\n        ) || \n        defaultIcon\n    )[focused ? \"focused\" : touched ? \"touched\" : \"icon\"];\n};\n\nexport default getIcon;\n","\nimport {useMemo, useRef} from \"react\";\nimport {Marker} from 'react-leaflet';\nimport getIcon from \"./getIcon\";\n\nexport default function MarkerWithFocus({\n    item, touched, focused, position, onClick\n}) {\n    const markerRef = useRef(null)\n    const eventHandlers = useMemo(\n        () => ({\n            click: onClick\n        }),\n      [onClick],\n    );\n    return (\n        <Marker\n            position={position} \n            icon={getIcon(item, touched, focused)}         \n            eventHandlers={eventHandlers}\n            ref={markerRef}\n        >\n        </Marker>\n    )\n}","/* eslint-disable */\n\nconst OSMtiles = {\n    tileUrl: \"https://tile.tracestrack.com/en/{z}/{x}/{y}.png?key=ad185d84befbbb5463e093c682930866\",\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n};\n\n// localized tiles \n// note that new translations are applied after while\nconst WikimediaTiles = {\n    tileUrl: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\",\n    attribution: `<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia maps</a> | Map data © <a href=\"http://openstreetmap.org/copyright\">OpenStreetMap contributors</a>`,\n    // this will tell Map component to add ?lang={lang} to tileUrl\n    // lang = first language you will choose in the interface\n    addLang: true\n};\n\nconst mapConfig = {\n    ...OSMtiles,   \n    minZoom: 3,\n    maxZoom: 19\n};\nexport default mapConfig;\n","\nimport {MapContainer, TileLayer, ScaleControl} from 'react-leaflet';\nimport MapView from \"./MapView\";\nimport MarkerWithFocus from \"./MarkerWithFocus\";\nimport mapConfig from \"../../config/map\";\n\nconst osmCoordsArr = coord => [coord.lat, coord.lon];\nconst getItemPosition = item => osmCoordsArr(item.center || item);\n\nexport default function Map({\n    center, \n    zoom, \n    items, \n    touched,\n    lang = \"en\",\n    focused, \n    handlers: {onMove, onLoad, onClickItem, onClickMap}\n}) {\n    let tileUrl = mapConfig.tileUrl;\n    if(mapConfig.addLang) {\n        tileUrl += \"?lang=\" + lang;\n    }\n    return (\n        <MapContainer \n            center={center} \n            zoom={zoom} \n            scrollWheelZoom={true} \n            minZoom={mapConfig.minZoom}\n            maxZoom={mapConfig.maxZoom}\n        >\n            <TileLayer\n                attribution={mapConfig.attribution}\n                url={tileUrl}\n                minZoom={mapConfig.minZoom}\n                maxZoom={mapConfig.maxZoom}\n            />\n            <MapView \n                center={center}\n                zoom={zoom} \n                onMove={onMove}\n                onLoad={onLoad}\n                onClick={onClickMap}\n            />\n            {items\n            .map(item => (\n                <MarkerWithFocus \n                    item={item}\n                    position={getItemPosition(item)}\n                    touched={touched.indexOf(item.id) !== -1}\n                    focused={focused === item.id}\n                    onClick={() => onClickItem(item.id)}\n                    key={item.id}   \n                />\n            ))}\n            <ScaleControl />\n        </MapContainer>\n    );\n}","import Map from \"./Map\"\nexport default Map;","export default function NotLoggedInGreeting() {\n    return (\n      <div>\n        <h2>Welcome</h2>\n        <p>OpenStreetMap Localization Tool (OsmLT) is started by Tracestrack.com. It greately faciliates localizing OpenStreetMap. It is open sourced on <a href=\"https://github.com/tracestrack/openstreetmap-localization-tool\">Github</a>.</p>\n\n        <p>Login with your OpenStreetMap account and start editing today!</p>\n      </div>\n    );\n}\n","import FormCheck from \"react-bootstrap/FormCheck\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckboxButton({vkey, title, onChange, checked}) {\n    return (\n    <Button \n        className=\"btn d-flex\"\n        variant={checked ? \"primary\" : \"outline-primary\"}\n        size=\"sm\"\n        onClick={() => onChange(vkey)}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onChange={() => onChange(vkey)}\n        />\n    </Button>\n    );\n}\n\n","import CheckboxButton from \"./CheckboxButton\";\nimport {Fragment} from \"react\";\n\nfunction toggle(selected, key, min) {\n    const i = selected.indexOf(key);\n    if(i === -1) {\n        return [...selected, key];\n    }\n    if(selected.length <= min) {\n        return selected;\n    }\n    return [\n        ...selected.slice(0, i),\n        ...selected.slice(i+1)\n    ];\n}\n\nfunction CheckboxGroup({\n    itemsList, \n    selected, \n    onChange, \n    min = 0,\n    Checkbox = CheckboxButton\n}) {\n    return (\n    <Fragment>\n    {itemsList.map(({key, title}) => \n        <Checkbox \n            key={key} \n            vkey={key}\n            title={title} \n            checked={selected.indexOf(key) !== -1} \n            onChange={() => onChange(toggle(selected, key, min))}\n        />\n    )}\n    </Fragment>\n    );\n}\n\nexport default CheckboxGroup;","import Dropdown from \"react-bootstrap/Dropdown\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\n\nexport default function CheckboxDropdownItem({vkey, title, onChange, checked}) {\n    return (\n    <Dropdown.Item\n        onMouseDown={e => onChange(vkey)}\n        onClick={e => e.stopPropagation()}\n        active={checked}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onMouseDown={e => onChange(vkey)}\n            onChange={() => {}}\n        />\n    </Dropdown.Item>\n    );\n}\n\n","import CheckboxGroup from \"../ItemsFilters/CheckboxGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport CheckboxDropdownItem from \"./CheckboxDropdownItem\";\n\nimport {useEffect, useState} from \"react\";\n\nexport default function CheckboxDropdownGroup({title, itemsList, selected, onChange, min}) {\n    // react-bootstrap dropdown has a bad habit to close after selecting an item\n    // that's working with menus okay, but not with checkbox group\n\n    const [dpShow, setDpShow] = useState(false);\n\n    useEffect(() => {\n        if(dpShow) {\n            const fn = document.addEventListener(\"click\", () => {\n                setDpShow(false);\n                document.removeEventListener(\"click\", fn);\n            });\n        }\n    }, [dpShow]);\n\n    const onClickDp = e => {\n        setDpShow(!dpShow);\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    return (\n        <DropdownButton\n            title={title}\n            show={dpShow}\n            onClick={onClickDp}\n            variant=\"outline-primary\"\n        >\n            <CheckboxGroup \n                Checkbox={CheckboxDropdownItem}\n                itemsList={itemsList}\n                selected={selected}\n                rootCloseEvent=\"mousedown\"\n                onChange={onChange}\n                min={min}\n            />\n        </DropdownButton>       \n    );\n}","import Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function LoadingButton({title, onClick, loading, disabled, ...props}) {\n    return (\n        <Button \n            disabled={disabled || loading}\n            onClick={onClick}\n            {...props}\n        >{title}\n        {loading ? \n            <Spinner \n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                className=\"spinner-border ml-2\"\n            /> \n            : null}\n        </Button>\n    );\n}\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport CheckboxDropdownGroup from \"./CheckboxDropdownGroup\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport \"./ItemsFilters.css\";\nimport React, { useCallback } from 'react';\n\n\nfunction ItemsFilters({\n    filters,\n    setFilter,\n    tagsList,\n    languages,\n    languagesList,\n    getItems,\n    disabled,\n    loading,\n    updateItems,\n    setLanguages\n}) {\n\n  const onKeyUp = useCallback(\n    (e) => {\n      if (e.charCode === 13) {\n        getItems();\n      }\n    },\n    [getItems], // Tells React to memoize regardless of arguments.\n  );\n\n\n  const onClickShortcut = useCallback(\n    (e) => {\n      let t = e.target.innerText;\n      console.log(t);\n      setFilter(t, () => {getItems();});\n    },\n    [setFilter, getItems], // Tells React to memoize regardless of arguments.\n  );\n\n    return (\n    <Form className=\"item-filters\">\n\n      <CheckboxDropdownGroup \n        title=\"Choose Languages\"\n        itemsList={languagesList}\n        selected={languages}\n        onChange={setLanguages}\n        min={1}\n      />\n\n\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>Tag to search: </Form.Label>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>place=city</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>boundary</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>leisure</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>highway</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>waterway</Button>\n                  <Form.Control type=\"text\" value={filters.tags} onChange={tags => setFilter(tags.target.value)} onKeyPress={onKeyUp} />\n                </Form.Group>\n\n        <Row className=\"d-flex justify-content-end\">\n            <LoadingButton\n                title=\"Get names\"\n                variant=\"primary\"\n                onClick={getItems}\n                loading={loading.items}\n            />\n            <LoadingButton\n                title=\"Update names\"\n                variant=\"success\"\n                disabled={disabled.updates}\n                onClick={updateItems}\n                loading={loading.updates}\n            />\n        </Row>\n\n    </Form>\n    );\n}\n\nexport default ItemsFilters;\n","import ItemsFilters from \"./ItemsFilters\";\nexport default ItemsFilters;","\nexport default function ItemTableHeader({languages, onClick}) {\n    const titles =  [\"Category\", \"Name\",...languages.map(lang => `Name:${lang}`)];\n    return (\n        <tr>\n        {titles.map(title => \n            (<th \n                style={{cursor: \"pointer\"}}\n                key={title}\n                onClick={() => onClick(title.toLowerCase())}\n            >{title}\n            </th>))\n        }\n        </tr>\n    );\n}","import {useRef, useEffect} from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function Item({\n    item, \n    category,\n    languages, \n    focused,\n    handlers: {onFocus, onBlur, onChange, onIconClick}\n}) {\n    const firstInput = useRef(null);\n    useEffect(() => {\n        if (focused && \n            document.activeElement.id.indexOf(item.id+\"\") !== 0) {\n            firstInput.current.focus();\n        }\n    }, [focused, item]);\n    \n    return (\n        <tr>\n            <td className=\"category\">\n                <Badge variant=\"info\">\n                    {category}\n                </Badge><br />\n                <Badge variant=\"light\">\n                    {item.tags[category]}\n                </Badge>\n            </td>\n            <td>\n\n              {item.tags.wikidata && (<span><a target=\"_blank\" rel=\"noreferrer\" href={`https://www.wikidata.org/wiki/${item.tags.wikidata}`}>{item.tags.name}</a></span>)}\n              {!item.tags.wikidata && (<span>{item.tags.name}</span>)}\n\n                <i \n                    className=\"fa fa-crosshairs icon-btn mt-1\" \n                    style={{float: \"right\"}} \n                    onClick={() => onIconClick(item)}\n                />\n            </td>\n            {languages.map((lang, i) => (\n            <td key={lang}>\n                <input\n                    type=\"text\"\n                    id={item.id + lang}\n                    ref={i ? null : firstInput}\n                    value={item.tags[`name:${lang}`]||\"\"}    \n                    onChange={e => onChange(item, lang, e.target.value)}\n                    onFocus={() => focused ? null : onFocus(item.id)}\n                    onBlur={() => focused ? onBlur(item.id) : null}\n                />\n            </td>))}\n        </tr>\n    );\n}\n","\nimport {Fragment, useState} from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ItemTableHeader from \"./ItemTableHeader\";\nimport ItemTableRow from \"./ItemTableRow\"\nimport \"./ItemsTable.css\";\n\n\nconst compareNames = (i1, i2, field) =>\n        (i1.tags[field]||\"\").localeCompare(i2.tags[field]||\"\");\n\nconst compareCategoryTag = (i1, i2) =>\n        i1.category.localeCompare(i2.caterory) ||\n        it.item.tags[i1.category].localeCompare(i2.item.tags[i2.category]);\n\nconst compareTags = (i1, i2, field) => field === \"category\" ?\n        compareCategoryTag(i1, i2)\n        : compareNames(i1.item, i2.item, field)\n\n\nfunction ItemsTable({\n    languages,\n    handlers,\n    items,\n    focused,\n    categories\n}) {\n    const [sortField, setField] = useState(\"name\");\n    const [sortOrder, setOrder] = useState(1);\n\n    const setSort = field => {\n        if(field === sortField)\n            setOrder(-sortOrder);\n        else\n            setField(field);\n    };\n\n    return (\n        <Fragment>\n            <Table size=\"sm\">\n                <thead>\n                    <ItemTableHeader\n                        languages={languages}\n                        onClick={setSort}\n                    />\n                </thead>\n                <tbody>\n                    {items\n                    .filter(i => i.tags.name)\n                    .map(item => ({\n                        item,\n                        category: categories.find(t => !!item.tags[t])\n                    }))\n                    .sort((i1, i2) => sortOrder * compareTags(i1, i2, sortField))\n                    .map(({item, category}) => (\n                    <ItemTableRow\n                        category={category}\n                        languages={languages}\n                        key={item.id}\n                        item={item}\n                        focused={focused === item.id}\n                        handlers={handlers}\n                    />)\n                    )}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n\n}\n\nexport default ItemsTable;\n","import ItemsTable from \"./ItemsTable\";\nexport default ItemsTable;","import {Fragment} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\n\nexport default function UserLoggedIn({user, logout}) {\n    return (\n        <Fragment>\n            {user.img ? \n                <Image \n                    src={user.img.href}\n                    className=\"avatar\" \n                    thumbnail \n                    rounded\n                /> \n                : null\n            }\n            <Navbar.Text className=\"mx-2\"\n                >{user.display_name}\n            </Navbar.Text>\n            <Button onClick={logout}>Logout</Button>\n        </Fragment>\n    );\n}","import LoadingButton from \"../common/LoadingButton\";\n\nexport default function UserLoggedOut({login, loading}) {\n    return (\n        <LoadingButton \n            title=\"Login\"\n            loading={loading}\n            onClick={login}\n        />\n    );\n}\n","import AppNavbar from \"./AppNavbar\";\n\nexport default AppNavbar;","\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./AppNavbar.css\";\nimport packageJson from '../../package.alias.json';\nimport UserLoggedIn from \"./UserLoggedIn\";\nimport UserLoggedOut from \"./UserLoggedOut\";\n//import logo from \"../../assets/logo.svg\";\n\nexport default function AppNavbar({user, login, logout, loading}) {\n    return (\n        <Navbar \n            variant=\"light\"\n            bg=\"white\"\n        >\n            <Navbar.Brand className=\"mr-auto\">\n              OSM Localization Tool (OsmLT)   <span className=\"version\">v{packageJson[\"version\"]} by Tracestrack</span>\n            </Navbar.Brand>\n        {user.loggedIn ? \n            <UserLoggedIn \n                logout={logout} \n                user={user} \n            />\n            : <UserLoggedOut \n                login={login} \n                loading={loading} \n            />\n        }\n        </Navbar>\n    );\n}\n","import {useState, useEffect} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function ChangesetBox({\n    changeset, \n    handlers: {onUpdate, onClose}}\n) {\n    const [newComment, setComment] = useState(changeset?.tags.comment||\"\");\n\n    useEffect(() => {\n        setComment(changeset?.tags.comment||getCookie(\"lastComment\")||\"\");\n    }, [changeset]);\n\n    return (\n        <Card \n            id=\"changeset-box\"\n            className=\"p-2\"    \n        >\n            <Card.Body>\n                <Row className=\"pb-2 justify-content-center\">\n                    <Form.Label>Comment:</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        value={newComment}\n                        onChange={e => setComment(e.target.value)}\n                    />\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Button \n                      className=\"m-1\"\n                      onClick={() =>\n                        onClose({comment: newComment})\n                              }\n                    >\n                        Close changeset\n                    </Button>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n","import ChangesetSettings from \"./ChangesetSettings\";\nexport default ChangesetSettings;","import Button from \"react-bootstrap/Button\";\nimport ChangesetBox from \"./ChangesetBox\";\nimport \"./ChangesetSettings.css\";\nimport {useState, useEffect} from \"react\";\n\n\nexport default function ChangesetSettings({changeset, handlers}) {\n    const [visible, setVisible] = useState();\n\n    useEffect(() => {\n        if(!changeset)\n            setVisible(false);\n    }, [changeset]);\n\n    return (\n        <div id=\"changeset\">\n            <Button \n                id=\"changeset-button\"\n                onClick={() => setVisible(!visible)}\n                disabled={!changeset}\n            >{\n                changeset ? \n                `Active changeset: ${changeset.id}`\n                : \"No active changeset\"\n            }</Button>\n            {visible ?\n            <ChangesetBox  \n                changeset={changeset}\n                handlers={handlers}\n            />\n            : null}\n        </div>\n    );\n}","const defaultApiUrl = \"https://overpass-api.de/api/interpreter\";\n\nconst outTypes = \"qt body meta center\"; //we need meta for \"version\" field\n\nexport default class Overpass {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || defaultApiUrl;\n    }\n    request(query) {\n        const data = new FormData();\n        data.append(\"data\", query);\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n                },\n                body: new URLSearchParams(data)\n            })\n            .then(response => response.ok ?\n                response.json()\n                .then(({elements, remark}) => {\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        if(remark && remark.indexOf(\"error\") !== -1) {\n                            reject(remark);\n                        }\n                        resolve(elements);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n  /*\n    getTwins(el, tags) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const tagsStr = tags.filter(t => el.tags[t])\n                            .map(t => `[\"${t}\"=\"${el.tags[t]}\"]`);\n        const query =\n            `[out:json][timeout:25];\n            ${el.type}(${el.id});\n            complete(100) {\n                nwr(around:500)${tagsStr}[\"name\"=\"${el.tags.name}\"];\n            }\n            out ${outTypes};`\n\n        return this.request(query);\n    }*/\n    query({bbox, zoom, center, filters, languages}) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const baseEls = [`nwr[\"${condition}\"][\"name\"]`];\n        const elementsQuery = filters.hideFilled ?\n            baseEls.map(base =>\n                languages.map(l => `${base}[!\"name:${l}\"]`)\n                .join(\";\\n\")\n            )\n            : baseEls.join(\";\\n\");\n\n\n        const limit = filters.limit ? \" \" + filters.limit : \"\";\n        const query =\n            `[out:json][timeout:25][bbox:${bbox.join(\",\")}];\n            (\n                ${elementsQuery};\n            );\n            out ${outTypes} ${limit};`;\n\n        return this.request(query);\n    }\n    getById(typesIds) {\n        const elementsQuery = typesIds.map(\n                                ([type, id]) => `${type}(${id})`).join(\";\");\n        const query =\n        `[out:json][timeout:25];\n        (\n            ${elementsQuery};\n        );\n        out ${outTypes};`;\n\n    return this.request(query);\n    }\n}\n","const apiUrl = \"https://nominatim.openstreetmap.org\";\nconst apiElemLimit = 50;\n\n\n\nexport default class NominatimAPI {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || apiUrl;\n    }\n    query({bbox, filters}, excludeIds=[]) {\n        const searchQuery = filters.searchMode === \"simple\" ?\n            [\"q=\" + filters.search.q]\n            : Object.entries(filters.search)\n                .filter(([k,val]) => k !== \"q\" && !!val)\n                .map(([k, val]) => `${k}=${val}`)\n        const params = [\n            ...searchQuery,\n            \"limit=\" + Math.min(filters.limit, apiElemLimit),\n          //\"viewbox=\" + bbox.map(c => c.reverse().join(\",\")).join(\",\"),\n            \"format=json\",\n            \"bounded=1\",\n            \"dedupe=1\"\n        ];\n\n        if(excludeIds.length) {\n            params.push(\"exclude_place_ids=\" + excludeIds.join(\",\"));\n        }\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl + \"/search?\" + params.join(\"&\"))\n            .then(response => response.ok ?\n                response.json()\n                .then((resp) => {\n                    if(resp.error)\n                        reject(resp);\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        resolve(resp);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n}\n","import osmAuth from \"osm-auth\";\nimport Overpass from \"./Overpass\";\nimport Nominatim from \"./Nominatim\";\n\n// tag to identify changesets created by app\nconst appTag = \"OSM Localization Tool (OsmLT): https://localize.osm.tracestrack.com\";\n\n\nvar XML_CHAR_MAP = {\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'&': '&amp;',\n\t'\"': '&quot;',\n\t\"'\": '&apos;'\n};\n\nfunction escapeXml (s) {\n  if (typeof s !== \"string\") return s;\n\n  return s.replace(/[<>&\"']/g, function (ch) {\n    return XML_CHAR_MAP[ch];\n  });\n}\n\nfunction json2xml(json) {\n    return Object.entries(json)\n    .map(([k, v]) => {\n        let attrs = [];\n        let children = \"\";\n        Object.entries(v)\n        .forEach(([k1, v1]) => {\n            if(Array.isArray(v1)) {\n                const k11 = k1.replace(/s$/, \"\");\n                children += v1.map(obj => json2xml({[k11]: obj}))\n                            .join(\"\");\n            } else if(typeof(v1) === \"object\") {\n                children += json2xml({[k1]: v1});\n            } else {\n                attrs.push([k1, escapeXml(v1)]);\n            }\n        });\n\n        const attrsStr = attrs.map(([k1, v1]) => `${k1}=\"${v1}\"`).join(\" \");\n        return children ?\n        `<${k} ${attrsStr}>${children}</${k}>`\n        : `<${k} ${attrsStr}/>`;\n    })\n    .join(\"\");\n}\n\nfunction createChangeset() {\n    return json2xml({\n        osm: {\n            changeset: [\n                {tag: {k: \"created_by\", v: appTag}},\n                {tag: {k: \"comment\",    v: \"\"}}\n            ]\n        }\n    });\n}\nfunction createOsm(changeset) {\n    return json2xml({\n        osm: {\n            changeset: {\n                tags:  Object.entries(changeset.tags)\n                .map(([k, v]) => ({k, v}))\n            }\n        }\n    });\n}\n\nfunction createOsmChange(updates, changesetId) {\n    return json2xml({\n        osmChange: {\n            version: \"0.6\",\n            generator: appTag,\n            modify: Object.values(updates)\n                    .map(({type, tags, nodes, members, ...attrs}) => ({\n                        [type]: {\n                            ...attrs,\n                            changeset: changesetId,\n                            tags: Object.entries(tags)\n                                    .map(([k, v]) => ({k, v})),\n                            // way\n                            ...(nodes ? {nd: nodes.map(id => ({ref: id}))} : {}),\n                            // relation\n                            ...(members ? {members} : {})\n                        }\n                    }))\n        }\n    });\n}\n\nconst constrain = coords => coords.map((c, i) => i % 2 ? (c+180) % 360 - 180 : c % 90);\n\n/*\nfunction uniq(items, tags) {\n    const un = {};\n    return items.filter(i => {\n        const k = i.tags.name + tags.map(t => t + i.tags[t] ).join(\"\");\n        if(!un[k]) {\n            un[k] = 1;\n            return true;\n        }\n        return false;\n    });\n}*/\n\nexport default class OSMApi {\n    constructor(config) {\n        this.config = config;\n        this.auth = osmAuth({\n            ...config\n        });\n        this.overpass = new Overpass({\n            apiUrl: config.overpassApiUrl\n        });\n        this.nominatim = new Nominatim();\n        this.apiRoute = \"/api/0.6\";\n        this.currentChangeset = config.changeset || false;\n    }\n    fetch(route, options = {}) {\n        // wrapper for osm-auth and underlying ohauth to provide\n        // more fetch-alike interface\n        const {method, body, headers = {}, ...opts} = options;\n        return new Promise((resolve, reject) =>\n            this.auth.xhr({\n                method: method || 'GET',\n                path: this.apiRoute + route,\n                content: body,\n                options: {\n                    header: headers,\n                    ...opts\n                }\n            }, function(err, res) {\n                if(!err) {\n                    resolve(res);\n                } else {\n                    reject(err);\n                }\n            })\n        );\n    }\n    fetchJson(route, options) {\n        return this.fetch(route, options)\n                .then(res => JSON.parse(res));\n    }\n    authenticated() {\n        return this.auth.authenticated();\n    }\n    login() {\n        return new Promise(resolve =>\n            this.auth.authenticate(res => {\n                resolve(res);\n            })\n        );\n    }\n    logout() {\n        this.auth.logout();\n    }\n    getUser() {\n        return this.fetchJson(\"/user/details.json\");\n    }\n    getElements(opts) {\n        opts = {\n            ...opts,\n            bbox: opts.bbox.map(constrain)\n        };\n        if(opts.filters.mode === \"search\") {\n            return this.nominatimIncSearch(opts);\n        }\n        return this.overpass.query(opts)\n        .then(items => {\n            // filter out the items with the same name and selected category tags\n            // eg. there are could be multiple ways representing one street\n\n            //items = uniq(items, opts.filters.tags);\n            return items;\n        });\n    }\n    nominatimIncSearch(opts, collected = []) {\n        // Limit of results in Nominatim is just 50\n        // to load more, we need to repeat the request to its API\n        // with query param \"exclude_place_ids\" to exclude already loaded.\n        // Nominatim objects are places, but we need nodes, ways and relations,\n        // so it neccessary to get them from Overpass then.\n        const limit = opts.filters.limit;\n        const exclude = collected.map(el => el.place_id);\n        return this.nominatim.query(opts, exclude)\n            .then(elemsNom => {\n                collected = [...elemsNom, ...collected];\n                if(!collected.length)\n                    return [];\n\n                if(limit && elemsNom.length &&\n                   collected.length < limit) {\n                  // to keep it simple, we don't need to support limit\n                  //return this.nominatimIncSearch(opts, collected);\n                }\n                return this.overpass.getById(\n                    collected.map(el => [el.osm_type, el.osm_id])\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n                if(collected.length) {\n                    return this.overpass.getById(\n                        collected.map(el => [el.osm_type, el.osm_id])\n                    );\n                }\n            });\n    }\n    getTwins(el, tags) {\n        return this.overpass.getTwins(el, tags);\n    }\n\n    updateElements(updates) {\n        if(!this.currentChangeset) {\n            return this.createChangeset()\n            .then(() => this.updateChangeset(updates));\n        }\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this.updateChangeset(updates));\n            }\n            return this.updateChangeset(updates);\n        });\n    }\n    getChangesets() {\n        return this.fetch(\"/changesets\");\n    }\n    getCurrentChangeset() {\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this._getCurrentChangeset());\n            }\n            return this._getCurrentChangeset();\n        })\n    }\n    _getCurrentChangeset() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => res.elements[0]);\n    }\n    createChangeset() {\n        return this.fetch(\"/changeset/create\", {\n            method: \"PUT\",\n            body: createChangeset(),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        }).then(createdId => {\n            this.currentChangeset = createdId;\n        });\n    }\n    checkChangesetOpen() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => {\n            return res.elements?.pop().open;\n        })\n    }\n  closeChangeset(changeset, cb) {\n\n      this.fetch(`/changeset/${this.currentChangeset}`, {\n        method: \"PUT\",\n        body: createOsm(changeset),\n        headers: {\n          'Content-Type': \"text/plain\"\n        }\n      }).then(() => {\n        this.fetch(`/changeset/${this.currentChangeset}/close`, {\n          method: \"PUT\",\n        }).then(() => {\n          this.currentChangeset = false;\n          cb();\n        });\n      });\n    }\n\n    updateChangeset(updates) {\n        return this.fetch(`/changeset/${this.currentChangeset}/upload`, {\n            method: \"POST\",\n            body: createOsmChange(updates, this.currentChangeset),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        })\n        .then(diffRes => {\n            // the format of responce is xml document like:\n            //\n            // <diffResult generator=\"OpenStreetMap Server\" version=\"0.6\">\n\t        //     <node|way|relation old_id=\"#\" new_id=\"#\" new_version=\"#\"/>\n            //  </diffResult>\n            //\n            // old_id == new_id, because we apply only modify\n\n            return Object.fromEntries(\n                Array.from(diffRes.children[0].children)\n                .map(el => [\n                    el.getAttribute(\"new_id\"), {\n                        version: +el.getAttribute(\"new_version\")\n                    }]));\n        });\n    }\n\n}\n","// Some abstraction for document.cookie handling\n\nexport default class CookieManager {\n    constructor(duration = 365 * 24 * 3600) {\n        this.cookieDuration = duration;\n    }\n    \n    get(key) {\n        const value = document.cookie.split(';')\n                                     .find(s => s.indexOf(key + '=') !== -1);\n        return value ? \n              value.replace(key + '=', '').trim() \n            : false;\n    }\n    write(dict, duration = this.cookieDuration) {\n        const dateStr = new Date(Date.now() + duration * 1000)\n                            .toUTCString();\n\n        Object.entries(dict)\n        .forEach(([k, v]) => {\n            document.cookie = `${k}=${v}; path=/; expires=${dateStr}`;\n        });\n    }\n\n    clear() {        \n        document.cookie.split(';')\n        .forEach(s => {\n            const k = s.split('=')[0];\n            document.cookie = `${k}=; path=/`;\n        });\n    }\n}\n","// helper class to sync results from overpass api with latest updates\n\nconst hasEmpty = (item, langs) => langs.find(l => !(item.tags[`name:${l}`]));\n\n\nexport default class UpdatesStorage {\n    updates = {};\n    storageKey = \"osm-localizer_updated-items\";\n    load() {\n        if(window.localStorage) {\n            const data = localStorage.getItem(this.storageKey);\n            if(data) {\n                this.updates = JSON.parse(data);\n            }\n        }\n    }\n    store() {\n        if(window.localStorage) {\n            localStorage.setItem(this.storageKey, JSON.stringify(this.updates));\n        }\n    }\n    patchAndStore(items, diff) {\n        for(let id in diff) {\n            if(items[id]) {\n                items[id] = {...items[id], ...diff[id]};\n                this.updates[id] = items[id];\n            }\n        }\n        this.store();\n    }\n    sync(items, hideFilled, langs) {\n        const itemsSync = [];\n        for(let i = 0, n = items.length; i < n; i++) {\n            const id = items[i].id;\n            if(this.updates[id]) {\n                if(this.updates[id].version > items[i].version) {\n                    // if hideFilled = true, then we need manually filter out\n                    // items with filled fields, which operass doesn't know\n                    // about yet.\n                    if(!hideFilled || hasEmpty(this.updates[id], langs))\n                        itemsSync.push(this.updates[id]);\n                } else {\n                    delete this.updates[id];\n                    itemsSync.push(items[i]);\n                }\n            } else {\n                itemsSync.push(items[i]);\n            }\n        }\n        this.store();\n        return itemsSync;\n    }\n}","/* eslint-disable */\n\nconst mainServer = {\n    oauth_consumer_key: \"p2szywibtwHNFh1RZVNq21uCo9XBuUZvEwz0sYae\",\n    oauth_secret:       \"e2oP3FSVjFLEq3zgQylpYMVVX7QJUKcchJLh4Ksm\",\n    url:                \"https://www.openstreetmap.org\",\n};\n\n// use this when testing new features to not spoil main osm database\nconst devServer = {\n    oauth_consumer_key: '8CxsQfI9MFfsYm4nq8bBm6Htch3SiK9BFA8IQhHs',\n    oauth_secret:       'SZka3I7w1Z41ePlQDauVwLLt6UIG4LLDbaWhNHkM',\n    url:                \"https://master.apis.dev.openstreetmap.org\"\n};\n\nconst authConfig = {   \n    ...mainServer,\n  overpassApiUrl:     \"https://overpass.kumi.systems/api/interpreter\"\n  //overpassApiUrl: \"https://overpass.nchc.org.tw/api/interpreter\"\n};\nexport default authConfig;\n","\nconst languagesList = [ \n    { key: \"de\", title: \"Deutsch\" },\n    { key: \"en\", title: \"English\" },\n    { key: \"fr\", title: \"Français\"},\n    { key: \"ja\", title: \"日本語\" },\n    { key: \"ru\", title: \"Русский\" },\n    { key: \"zh-Hans\", title: \"简体中文\" },\n    { key: \"zh-Hant\", title: \"繁体中文\" },\n    { key: \"zh\", title: \"中文\" },\n    { key: \"ml\", title: \"മലയാളം\" },\n    { key: \"ta\", title: \"தமிழ்\" },\n    { key: \"kn\", title: \"ಕನ್ನಡ\" },\n    { key: \"bn\", title: \"বাংলা\" },\n    { key: \"te\", title: \"తెలుగు\" },\n    { key: \"pa\", title: \"ਪੰਜਾਬੀ\" },\n    { key: \"hi\", title: \"हिन्दी\" },\n    { key: \"it\", title: \"Italiano\" },\n    { key: \"or\", title: \"ଓଡ଼ିଆ\" }\n];\n\nconst tagsList = [\n    //{key: \"aerialway\",          title: \"Aerialway\"},\n    //{key: \"aerolway\",           title: \"Aeroway\"},\n    {key: \"amenity\",            title: \"Amenity\"},\n    //{key: \"barrier\",            title: \"Barrier\"},\n    //{key: \"boundary\",           title: \"Boundary\" },\n    {key: \"building\",           title: \"Building\" },\n    //{key: \"craft\",              title: \"Craft\" },\n    //{key: \"emergency\",          title: \"Emergency\" },\n    //{key: \"geological\",         title: \"Geological\" },\n    //{key: \"healthcare\",         title: \"Healthcare\"},\n    {key: \"highway\",            title: \"Highway\"},\n    //{key: \"historic\",           title: \"Historic\"},\n    {key: \"landuse\",            title: \"Landuse\"},\n    {key: \"leisure\",            title: \"Leisure\"},\n    {key: \"man_made\",           title: \"Man-made\"},\n    //{key: \"military\",           title: \"Military\"},\n    {key: \"natural\",            title: \"Natural\"},\n    //{key: \"office\",             title: \"Office\"},\n    {key: \"place\",              title: \"Place\" },\n    //{key: \"power\",              title: \"Power\" },\n    {key: \"public_transport\",   title: \"Public transport\" },\n    {key: \"railway\",            title: \"Railway\" },\n    {key: \"route\",              title: \"Route\" },\n    //{key: \"shop\",               title: \"Shop\" },\n    //{key: \"telecom\",            title: \"Telecom\" },\n    {key: \"tourism\",            title: \"Tourism\" },\n    {key: \"waterway\",           title: \"Waterway\"}\n];\n\nexport {\n    languagesList, \n    tagsList\n};\n","import {Fragment, Component} from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Card from \"react-bootstrap/Card\";\nimport Map from \"./components/Map\";\nimport NotLoggedInGreeting from \"./components/NotLoggedInGreeting\";\nimport ItemsFilters from \"./components/ItemsFilters\";\nimport ItemsTable from \"./components/ItemsTable\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ChangesetSettings from \"./components/ChangesetSettings\";\nimport OSMApi from \"./api/OSM\";\nimport CookieManager from \"./utils/CookieManager\";\nimport UpdatesStorage from \"./utils/UpdatesStorage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport authConfig from \"./config/auth\";\nimport {languagesList, tagsList} from \"./config/interface\";\n\nconst cookieKeys = {\n    languages: \"_osm-localization_languages\",\n    changeset: \"_osm-locatization_changeset\"\n};\n\nconst itemCenter = item => item.center ?\n                            [item.center.lat, item.center.lon]\n                          : [item.lat, item.lon];\nconst itemMinZoom = 14;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.cookieManager = new CookieManager();\n        this.osmApi = new OSMApi({\n            ...authConfig,\n            changeset: this.cookieManager.get(cookieKeys.changeset)\n        });\n        this.updatesStorage = new UpdatesStorage();\n        this.updatesStorage.load();\n        const {zoom, center} = this.parseURLPath();\n        const filters = this.parseURLQuery();\n\n        this.bbox = [];\n        this.state = {\n            user: {\n                loggedIn: false\n            },\n            center,\n            zoom,\n            filters,\n            items: [],\n            itemsToUpdate: {},\n            focusedItem: false,\n            watchFocus: false, // center map on focused item\n            loading: {\n                items: false,\n                updates: false,\n                auth: false\n            },\n            serverMsg: {\n                error: false,\n                text: \"\"\n            },\n            changeset: null,\n            lastReqTags: []\n        };\n    }\n    parseURLPath() {\n        let zoom = 6;\n        let center = [0, 0];\n        const hash = window.location.hash.replace(\"#/\", \"\");\n        if (hash) {\n            const [z, lat, lng] = hash.split(\"/\");\n            zoom = +z;\n            center = [+lat, +lng];\n        }\n\n        return {zoom, center};\n    }\n    parseURLQuery() {\n        const filters = {\n            tags: [\"place\"],\n            limit: 100,\n            hideFilled: false,\n            search: {\n                q: \"\",\n                street:  \"\",\n                city: \"\",\n                county: \"\",\n                state: \"\",\n                country: \"\",\n                postalcode: \"\"\n            },\n            searchMode: \"simple\",\n            mode: \"tags\"\n        };\n        const search = window.location.search.replace(\"?\", \"\");\n        if(search) {\n            const params = Object.fromEntries(\n                search.split(\"&\")\n                .map(e => e.split(\"=\"))\n            );\n            if(params.tags) {\n                  filters.tags = decodeURIComponent(params.tags);\n            }\n            if(params.search) {\n                try {\n                    const searchParams = JSON.parse(decodeURI(params.search));\n                    for(let k in filters.search) {\n                        filters.search[k] = searchParams[k] || filters.search[k];\n                        if(k !== \"q\" && !!searchParams[k])\n                            filters.searchMode = \"structured\";\n                    }\n                    if(!params.tags) {\n                        filters.mode = \"search\";\n                    }\n                } catch (e) {\n\n                }\n            }\n            if(params.limit) {\n                const n = parseInt(params.limit);\n                if(!isNaN(n))\n                    filters.limit = n;\n            }\n            if(params.hide_filled) {\n                filters.hideFilled = params.hide_filled &&\n                                    +params.hide_filled !== 0;\n            }\n        }\n        return filters;\n    }\n    loadChangeset() {\n        if(this.osmApi.currentChangeset) {\n            this.osmApi.getCurrentChangeset()\n            .then(changeset => {\n                console.log(changeset)\n                this.setState({changeset});\n            })\n        }\n    }\n\n    closeChangeset({comment}) {\n      let changeset = {\n                ...this.state.changeset,\n                tags: {\n                    ...this.state.changeset.tags,\n                    comment\n                }\n      };\n\n      if (changeset.tags.comment === \"\") {\n        alert(\"Please add a commit message first.\");\n      }\n\n      console.log(changeset);\n\n      let _t = this;\n      this.osmApi.closeChangeset(changeset, () => {\n        //_t.setState({changeset: null});\n        _t.cookieManager.write({\n          \"lastComment\": comment\n        });\n        window.location.reload();\n      }\n      );\n    }\n\n    updateLocation(replace=false) {\n        const {\n            zoom,\n            center: [lat, lng],\n            filters: {tags, limit, hideFilled, search, mode, searchMode}\n        } = this.state;\n\n        const hash = [\"/#\", zoom, lat.toFixed(4), lng.toFixed(4)].join(\"/\");\n        const searchParts = [];\n        if(mode === \"search\") {\n            const {q, ...structured} = search;\n            const searchObj = (searchMode === \"simple\") ?\n                               {q}\n                              : structured;\n\n            searchParts.push(`search=${JSON.stringify(searchObj)}`);\n        }\n        else {\n            searchParts.push(`tags=${encodeURIComponent(tags)}`);\n            if(hideFilled)\n                searchParts.push(`hide_filled=1`);\n        }\n        if(limit)\n            searchParts.push(`limit=${limit}`);\n\n        const searchQ = \"?\" + searchParts.join(\"&\");\n\n        let url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + searchQ + hash;\n\n        if(replace)\n            window.history.replaceState({searchQ, hash}, '', url);\n        else\n            window.history.pushState({searchQ, hash}, '', url);\n    }\n    componentDidMount() {\n        if(this.osmApi.authenticated()) {\n            this.getUser();\n        }\n    }\n  setServerMsg(serverMsg) {\n    console.log(serverMsg);\n        this.setState({serverMsg});\n        const fn = () => {\n            document.removeEventListener(\"click\", fn);\n            this.setState({serverMsg: {\n                error: false,\n                text: \"\"\n            }});\n        }\n        document.addEventListener(\"click\", fn);\n    }\n    login() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                auth: true\n            }\n        });\n        this.osmApi.login()\n        .then(() => {\n            this.getUser();\n        });\n    }\n    getLanguages() {\n        const str = this.cookieManager.get(cookieKeys.languages);\n        return str ? str.split(\"+\") : false;\n    }\n    setLanguages(languages) {\n        this.setState({\n            user: {\n                ...this.state.user,\n                languages\n            }\n        });\n        this.storeLanguages(languages);\n    }\n    storeLanguages(languages) {\n        this.cookieManager.write({\n            [cookieKeys.languages]: languages.join(\"+\")\n        });\n    }\n    getUser() {\n        this.osmApi.getUser()\n        .then(res => {\n            let languages = this.getLanguages() ||\n                            res.user.languages.filter(l =>\n                                languagesList.find(({key}) => key === l)\n                            );\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    auth: false\n                },\n                user: {\n                    loggedIn: true,\n                    ...res.user,\n                    languages\n                }\n            });\n            this.storeLanguages(languages);\n            this.loadChangeset();\n        });\n    }\n    logout() {\n        this.osmApi.logout();\n        this.setState({\n            user: {\n                loggedIn: false\n            }\n        });\n    }\n  getItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                items: true\n            }\n        });\n        this.osmApi.getElements({\n            center: this.state.center,\n            zoom: this.state.zoom,\n            bbox: this.bbox,\n            filters: this.state.filters,\n            languages: this.state.user.languages\n        })\n        .then(items => {\n            this.setState({\n                items: this.updatesStorage.sync(items,\n                                                this.state.filters.hideFilled,\n                                                this.state.user.languages),\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                },\n                lastReqTags: this.state.filters.mode === \"search\" ?\n                                  tagsList.map(t => t.key)\n                                : this.state.filters.tags.slice()\n            });\n        })\n        .catch(err => {\n            console.log(err)\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                }\n            });\n            this.setServerMsg({\n                text: err,\n                error: true\n            });\n        });\n    }\n    updatePosition({bbox, center, zoom}) {\n        this.setState(\n            {center, zoom},\n            () => this.updateLocation(true));\n        this.bbox = bbox;\n    }\n    updateBbox({bbox}) {\n        this.bbox = bbox;\n    }\n    updateItem(item, lang, value) {\n      item.tags[`name:${lang}`] = value;\n      /*\n        if(!item.twins) {\n            // get all the items with the same name and tags\n            item.twins = [];\n            this.osmApi.getTwins(item, this.state.filters.tags)\n            .then(twins => {\n                item.twins = twins;\n                item.twins.forEach(i => {\n                    i.tags[`name:${lang}`] = value;\n                });\n            });\n        } else {\n            item.twins.forEach(i => {\n                i.tags[`name:${lang}`] = value;\n            });\n        }*/\n        this.setState({itemsToUpdate: {\n            ...this.state.itemsToUpdate,\n            [item.id]: item\n        }});\n    }\n  setFilter(updates, doneCb) {\n    console.log(updates);\n        this.setState({\n            filters: {\n                ...this.state.filters,\n              ...{tags: updates}\n            }\n        }, () => {this.updateLocation();\n                  if (doneCb) doneCb();\n                 });\n    }\n    updateItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                updates: true\n            }\n        });\n      let items = this.state.itemsToUpdate;\n/*        Object.values(this.state.itemsToUpdate)\n            .forEach(i => {\n            let {twins, ...self} = i;\n            items[self.id] = self;\n            twins.forEach(t => {\n                items[t.id] = t;\n            });\n            }); */\n      console.log(items);\n        this.osmApi.updateElements(items)\n        .then(diff => {\n            this.updatesStorage.patchAndStore(\n                this.state.itemsToUpdate, diff\n            );\n            this.cookieManager.write({\n                [cookieKeys.changeset]: this.osmApi.currentChangeset\n            });\n\n            this.setServerMsg({\n                text: \"Items are successfully updated.\",\n                error: false\n            });\n\n            this.setState({\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n            this.loadChangeset();\n        })\n        .catch(err => {\n            this.setServerMsg({\n                text: String.toString(err),\n                error: true\n            });\n\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n        });\n    }\n    focusItem(itemId) {\n        if(this.state.watchFocus) {\n            const item = this.state.items.find(i => i.id === itemId);\n            this.setState({\n                center: itemCenter(item),\n                focusedItem: itemId\n            });\n        } else {\n            this.setState({\n                focusedItem: itemId\n            });\n        }\n    }\n    blurItem() {\n        this.setState({\n            focusedItem: false\n        });\n    }\n    centerItem(item) {\n        this.setState({\n            center: itemCenter(item),\n            zoom: Math.max(this.state.zoom, itemMinZoom)\n        });\n    }\n    render() {\n        const btnsDisabled = {\n            // query for a large bbox is too slow and won't work\n            // also don't load new items till updates are not done and synced\n            items: this.state.loading.updates ||\n                (this.state.filters.mode === \"tags\" ?\n                    this.state.zoom < 10\n                    :  !(this.state.filters.searchMode === \"simple\" ?\n                            this.state.filters.search.q\n                            : Object.entries(this.state.filters.search)\n                                .find(([k,v]) => k !== \"q\" && !!v)\n                )),\n            // nothing to update\n            updates: !Object.keys(this.state.itemsToUpdate).length\n        };\n        const touchedItems  = Object.keys(this.state.itemsToUpdate).map(s => +s);\n        const mapHandlers = {\n            onLoad:      this.updateBbox.bind(this),\n            onMove:      this.updatePosition.bind(this),\n            onClickItem: this.focusItem.bind(this),\n            onClickMap:  this.blurItem.bind(this),\n        };\n\n        const itemHandlers = {\n            onFocus:     this.focusItem.bind(this),\n            onBlur:      this.blurItem.bind(this),\n            onChange:    this.updateItem.bind(this),\n            onIconClick: this.centerItem.bind(this)\n        };\n        const changesetHandlers = {\n            onClose:    this.closeChangeset.bind(this)\n        };\n\n        const lang = this.state.user.languages ?\n            this.state.user.languages[0]\n            : \"en\";\n\n        const tags = tagsList.map(t => t.key);\n        return (\n            <Container className=\"App\" fluid>\n                <AppNavbar\n                    login={this.login.bind(this)}\n                    logout={this.logout.bind(this)}\n                    user={this.state.user}\n                    loading={this.state.loading.auth}\n                />\n                <Map\n                    zoom={this.state.zoom}\n                    center={this.state.center}\n                    items={this.state.items}\n                    lang={lang}\n                    touched={touchedItems}\n                    focused={this.state.focusedItem}\n                    watchFocus={this.state.watchFocus}\n                    handlers={mapHandlers}\n                />\n                <Card\n                    className=\"card-items card p-1\"\n                >{\n                this.state.user.loggedIn ?\n                    <Fragment>\n                        <Card.Header>\n                            <ItemsFilters\n                                filters={this.state.filters}\n                                setFilter={this.setFilter.bind(this)}\n                                tagsList={tagsList}\n                                loading={this.state.loading}\n                                languages={this.state.user.languages||[]}\n                                languagesList={languagesList}\n                                setLanguages={this.setLanguages.bind(this)}\n                                items={this.state.items}\n                                getItems={this.getItems.bind(this)}\n                                disabled={btnsDisabled}\n                                updateItems={this.updateItems.bind(this)}\n                            />\n                            <div className={this.state.serverMsg.error ?\n                                              \"text-danger\"\n                                            : \"text-success\"}>\n                                {this.state.serverMsg.text}\n                            </div>\n                        </Card.Header>\n                        <Card.Body\n                            className={this.state.loading.items ?\n                                      \"items-loading\"\n                                      : \"\"}\n                        >\n                            <ItemsTable\n                                categories={tags}\n                                languages={this.state.user.languages||[]}\n                                items={this.state.items}\n                                focused={this.state.focusedItem}\n                                handlers={itemHandlers}\n                            />\n\n                        </Card.Body>\n                    </Fragment>\n                    :  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                            <NotLoggedInGreeting />\n                        </Card.Body>\n                }</Card>\n                <ChangesetSettings\n                    changeset={this.state.changeset}\n                    handlers={changesetHandlers}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}