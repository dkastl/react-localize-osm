{"version":3,"sources":["components/Map/MapView.js","components/Map/getIcon.js","components/Map/MarkerWithFocus.js","config/map.js","components/Map/Map.js","components/Map/index.js","components/NotLoggedInGreeting.js","components/ItemsFilters/CheckboxButton.js","components/ItemsFilters/CheckboxGroup.js","components/ItemsFilters/CheckboxDropdownItem.js","components/ItemsFilters/CheckboxDropdownGroup.js","components/common/LoadingButton.js","components/ItemsFilters/ItemsFilters.js","components/ItemsFilters/index.js","components/ItemsTable/ItemTableHeader.js","components/ItemsTable/ItemTableRow.js","components/ItemsTable/ItemsTable.js","components/ItemsTable/index.js","components/AppNavbar/UserLoggedIn.js","components/AppNavbar/UserLoggedOut.js","components/AppNavbar/index.js","components/AppNavbar/AppNavbar.js","components/ChangesetSettings/ChangesetBox.js","components/ChangesetSettings/index.js","components/ChangesetSettings/ChangesetSettings.js","api/Overpass.js","api/Nominatim.js","api/OSM.js","utils/CookieManager.js","utils/UpdatesStorage.js","config/auth.js","config/interface.js","App.js","reportWebVitals.js","index.js"],"names":["toArray","coord","lat","lng","MapView","_ref","onLoad","onMove","onClick","center","zoom","map","useMap","c","getCenter","flyTo","useMapEvents","moveend","bbox","Object","values","getBounds","getZoom","click","createIcon","type","color","shape","L","AwesomeMarkers","icon","prefix","markerColor","className","createIcons","touched","focused","defaultIcon","iconTypes","cat","tag","iconType","getIcon","item","find","tags","indexOf","MarkerWithFocus","position","markerRef","useRef","eventHandlers","useMemo","_jsx","Marker","ref","mapConfig","tileUrl","attribution","minZoom","maxZoom","getItemPosition","osmCoordsArr","lon","Map","items","lang","handlers","onClickItem","onClickMap","addLang","_jsxs","MapContainer","scrollWheelZoom","children","TileLayer","url","id","ScaleControl","NotLoggedInGreeting","href","CheckboxButton","vkey","title","onChange","checked","Button","variant","size","FormCheck","CheckboxGroup","itemsList","selected","min","Checkbox","Fragment","_ref2","key","i","length","slice","toggle","CheckboxDropdownItem","Dropdown","Item","onMouseDown","e","stopPropagation","active","CheckboxDropdownGroup","dpShow","setDpShow","useState","useEffect","fn","document","addEventListener","removeEventListener","DropdownButton","show","preventDefault","rootCloseEvent","LoadingButton","loading","disabled","props","Spinner","as","animation","ItemsFilters","filters","setFilter","tagsList","languages","languagesList","getItems","updateItems","setLanguages","onKeyUp","useCallback","charCode","onClickShortcut","t","target","innerText","console","log","Form","Group","controlId","Label","Control","value","onKeyPress","Row","updates","ItemTableHeader","titles","concat","style","cursor","toLowerCase","category","onFocus","onBlur","onIconClick","firstInput","activeElement","current","focus","Badge","wikidata","rel","name","float","compareTags","i1","i2","field","compareCategoryTag","localeCompare","caterory","it","compareNames","ItemsTable","categories","sortField","setField","sortOrder","setOrder","Table","filter","sort","ItemTableRow","UserLoggedIn","user","logout","img","Image","src","thumbnail","rounded","Navbar","Text","display_name","UserLoggedOut","login","AppNavbar","bg","Brand","packageJson","loggedIn","ChangesetBox","changeset","onUpdate","onClose","newComment","setComment","comment","parts","cookie","split","pop","shift","getCookie","Card","Body","ChangesetSettings","visible","setVisible","outTypes","Overpass","constructor","config","arguments","undefined","this","apiUrl","request","query","data","FormData","append","reqId","performance","now","Promise","resolve","reject","fetch","method","headers","body","URLSearchParams","then","response","ok","json","elements","remark","text","catch","err","condition","replace","baseEls","elementsQuery","hideFilled","base","l","join","limit","getById","typesIds","_ref3","NominatimAPI","excludeIds","params","searchMode","search","q","entries","k","val","Math","push","resp","error","appTag","XML_CHAR_MAP","json2xml","v","attrs","forEach","k1","v1","Array","isArray","k11","obj","s","ch","attrsStr","createOsm","osm","_ref4","createOsmChange","changesetId","osmChange","version","generator","modify","_ref5","nodes","members","_ref6","nd","constrain","coords","OSMApi","auth","osmAuth","overpass","overpassApiUrl","nominatim","Nominatim","apiRoute","currentChangeset","route","options","opts","xhr","path","content","header","res","fetchJson","JSON","parse","authenticated","authenticate","getUser","getElements","mode","nominatimIncSearch","collected","exclude","el","place_id","elemsNom","osm_type","osm_id","getTwins","updateElements","checkChangesetOpen","open","updateChangeset","createChangeset","getChangesets","getCurrentChangeset","_getCurrentChangeset","createdId","_res$elements","closeChangeset","cb","diffRes","fromEntries","from","getAttribute","CookieManager","duration","cookieDuration","get","trim","write","dict","dateStr","Date","toUTCString","clear","hasEmpty","langs","UpdatesStorage","storageKey","load","window","localStorage","getItem","store","setItem","stringify","patchAndStore","diff","sync","itemsSync","n","authConfig","client_id","client_secret","redirect_uri","scope","cookieKeys","itemCenter","App","Component","super","cookieManager","osmApi","updatesStorage","parseURLPath","parseURLQuery","state","itemsToUpdate","focusedItem","watchFocus","serverMsg","lastReqTags","hash","location","z","street","city","county","country","postalcode","decodeURIComponent","searchParams","decodeURI","parseInt","isNaN","hide_filled","loadChangeset","setState","alert","_t","reload","updateLocation","toFixed","searchParts","structured","searchObj","encodeURIComponent","searchQ","protocol","host","pathname","history","replaceState","pushState","componentDidMount","setServerMsg","getLanguages","str","storeLanguages","updatePosition","updateBbox","updateItem","doneCb","String","toString","focusItem","itemId","blurItem","centerItem","max","render","btnsDisabled","keys","touchedItems","mapHandlers","bind","itemHandlers","changesetHandlers","Container","fluid","Header","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1608007.chunk.js","sourcesContent":["import {useMapEvents, useMap} from 'react-leaflet';\n\nconst toArray = coord => [coord.lat, coord.lng];\n\nexport default function MapView({onLoad, onMove, onClick, center, zoom}) {\n    const map = useMap();\n    let c = map.getCenter();\n    if(c.lat !== center[0] || c.lng !== center[1])\n        map.flyTo(center, zoom);\n        \n    useMapEvents({\n        moveend: () => {\n            let c = map.getCenter();\n            onMove({\n                bbox: Object.values(map.getBounds()).map(toArray),\n                center: toArray(c),\n                zoom: map.getZoom()\n            });\n        },\n        click: () => {\n            onClick();\n        }\n    });\n    onLoad({\n        bbox: Object.values(map.getBounds())\n            .map(toArray),\n    });\n    return null;\n}\n","import L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.js\";\nimport \"leaflet.awesome-markers/dist/leaflet.awesome-markers.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst icons = [\n\n    {cat: \"tourism\", tag: [\"hotel\", \"hostel\"], iconType: \"hotel\"},\n    {cat: \"place\",   tag: [\"city\", \"town\", \"neighborhood\"], iconType: \"city\"},\n    {cat: \"place\",   tag: [\"village\", \"hamlet\"], iconType: \"home\"},\n\n    {cat: \"aeroway\", iconType: \"plane\"},\n    {cat: \"shop\", iconType: \"store\"},\n    {cat: \"historic\", iconType: \"monument\"},\n    {cat: \"leisure\", iconType: \"futbol\"},\n    {cat: \"tourism\", iconType: \"compass\"},\n    {cat: \"highway\", iconType: \"road\"},\n    {cat: \"building\", iconType: \"building\"},\n    {cat: \"natural\", iconType: \"tree\"},\n    {cat: \"waterway\", iconType: \"water\"}\n];\n\nconst createIcon = (type, color, shape) => L.AwesomeMarkers.icon({\n    icon: type,\n    prefix: \"fa\",\n    markerColor: color,\n    className: \"awesome-marker awesome-marker-\" + shape\n});\n\nconst createIcons = ({type, shape, color = \"blue\"}) => ({\n    icon: createIcon(type, color, shape),\n    touched: createIcon(type, \"orange\", shape),\n    focused: createIcon(type, \"red\", shape),\n})\n\nconst defaultIcon =  createIcons({type: \"circle\"});\n\nconst iconTypes = icons.map(icon => ({\n    ...icon,\n    ...createIcons({type: icon.iconType})\n}));\n  \nconst getIcon = (item, touched, focused) => {\n    return (\n        iconTypes.find(icon => \n            (!icon.tag && item[icon.cat]) || \n            (item.tags[icon.cat] && item.tags[icon.cat].indexOf(icon.tag) !== -1)\n        ) || \n        defaultIcon\n    )[focused ? \"focused\" : touched ? \"touched\" : \"icon\"];\n};\n\nexport default getIcon;\n","\nimport {useMemo, useRef} from \"react\";\nimport {Marker} from 'react-leaflet';\nimport getIcon from \"./getIcon\";\n\nexport default function MarkerWithFocus({\n    item, touched, focused, position, onClick\n}) {\n    const markerRef = useRef(null)\n    const eventHandlers = useMemo(\n        () => ({\n            click: onClick\n        }),\n      [onClick],\n    );\n    return (\n        <Marker\n            position={position} \n            icon={getIcon(item, touched, focused)}         \n            eventHandlers={eventHandlers}\n            ref={markerRef}\n        >\n        </Marker>\n    )\n}","/* eslint-disable */\n\nconst OSMtiles = {\n    tileUrl: \"https://tile.tracestrack.com/en/{z}/{x}/{y}.png?key=ad185d84befbbb5463e093c682930866\",\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n};\n\n// localized tiles \n// note that new translations are applied after while\nconst WikimediaTiles = {\n    tileUrl: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\",\n    attribution: `<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia maps</a> | Map data © <a href=\"http://openstreetmap.org/copyright\">OpenStreetMap contributors</a>`,\n    // this will tell Map component to add ?lang={lang} to tileUrl\n    // lang = first language you will choose in the interface\n    addLang: true\n};\n\nconst mapConfig = {\n    ...OSMtiles,   \n    minZoom: 3,\n    maxZoom: 19\n};\nexport default mapConfig;\n","\nimport {MapContainer, TileLayer, ScaleControl} from 'react-leaflet';\nimport MapView from \"./MapView\";\nimport MarkerWithFocus from \"./MarkerWithFocus\";\nimport mapConfig from \"../../config/map\";\n\nconst osmCoordsArr = coord => [coord.lat, coord.lon];\nconst getItemPosition = item => osmCoordsArr(item.center || item);\n\nexport default function Map({\n    center, \n    zoom, \n    items, \n    touched,\n    lang = \"en\",\n    focused, \n    handlers: {onMove, onLoad, onClickItem, onClickMap}\n}) {\n    let tileUrl = mapConfig.tileUrl;\n    if(mapConfig.addLang) {\n        tileUrl += \"?lang=\" + lang;\n    }\n    return (\n        <MapContainer \n            center={center} \n            zoom={zoom} \n            scrollWheelZoom={true} \n            minZoom={mapConfig.minZoom}\n            maxZoom={mapConfig.maxZoom}\n        >\n            <TileLayer\n                attribution={mapConfig.attribution}\n                url={tileUrl}\n                minZoom={mapConfig.minZoom}\n                maxZoom={mapConfig.maxZoom}\n            />\n            <MapView \n                center={center}\n                zoom={zoom} \n                onMove={onMove}\n                onLoad={onLoad}\n                onClick={onClickMap}\n            />\n            {items\n            .map(item => (\n                <MarkerWithFocus \n                    item={item}\n                    position={getItemPosition(item)}\n                    touched={touched.indexOf(item.id) !== -1}\n                    focused={focused === item.id}\n                    onClick={() => onClickItem(item.id)}\n                    key={item.id}   \n                />\n            ))}\n            <ScaleControl />\n        </MapContainer>\n    );\n}","import Map from \"./Map\"\nexport default Map;","export default function NotLoggedInGreeting() {\n    return (\n      <div>\n        <h2>Welcome</h2>\n        <p>OpenStreetMap Localization Tool (OsmLT) is started by Tracestrack.com. It greately faciliates localizing OpenStreetMap. It is open sourced on <a href=\"https://github.com/tracestrack/openstreetmap-localization-tool\">Github</a>.</p>\n\n        <p>Login with your OpenStreetMap account and start editing today!</p>\n      </div>\n    );\n}\n","import FormCheck from \"react-bootstrap/FormCheck\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CheckboxButton({vkey, title, onChange, checked}) {\n    return (\n    <Button \n        className=\"btn d-flex\"\n        variant={checked ? \"primary\" : \"outline-primary\"}\n        size=\"sm\"\n        onClick={() => onChange(vkey)}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onChange={() => onChange(vkey)}\n        />\n    </Button>\n    );\n}\n\n","import CheckboxButton from \"./CheckboxButton\";\nimport {Fragment} from \"react\";\n\nfunction toggle(selected, key, min) {\n    const i = selected.indexOf(key);\n    if(i === -1) {\n        return [...selected, key];\n    }\n    if(selected.length <= min) {\n        return selected;\n    }\n    return [\n        ...selected.slice(0, i),\n        ...selected.slice(i+1)\n    ];\n}\n\nfunction CheckboxGroup({\n    itemsList, \n    selected, \n    onChange, \n    min = 0,\n    Checkbox = CheckboxButton\n}) {\n    return (\n    <Fragment>\n    {itemsList.map(({key, title}) => \n        <Checkbox \n            key={key} \n            vkey={key}\n            title={title} \n            checked={selected.indexOf(key) !== -1} \n            onChange={() => onChange(toggle(selected, key, min))}\n        />\n    )}\n    </Fragment>\n    );\n}\n\nexport default CheckboxGroup;","import Dropdown from \"react-bootstrap/Dropdown\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\n\nexport default function CheckboxDropdownItem({vkey, title, onChange, checked}) {\n    return (\n    <Dropdown.Item\n        onMouseDown={e => onChange(vkey)}\n        onClick={e => e.stopPropagation()}\n        active={checked}\n    >\n        {title}\n        <FormCheck\n            checked={checked}\n            onMouseDown={e => onChange(vkey)}\n            onChange={() => {}}\n        />\n    </Dropdown.Item>\n    );\n}\n\n","import CheckboxGroup from \"../ItemsFilters/CheckboxGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport CheckboxDropdownItem from \"./CheckboxDropdownItem\";\n\nimport {useEffect, useState} from \"react\";\n\nexport default function CheckboxDropdownGroup({title, itemsList, selected, onChange, min}) {\n    // react-bootstrap dropdown has a bad habit to close after selecting an item\n    // that's working with menus okay, but not with checkbox group\n\n    const [dpShow, setDpShow] = useState(false);\n\n    useEffect(() => {\n        if(dpShow) {\n            const fn = document.addEventListener(\"click\", () => {\n                setDpShow(false);\n                document.removeEventListener(\"click\", fn);\n            });\n        }\n    }, [dpShow]);\n\n    const onClickDp = e => {\n        setDpShow(!dpShow);\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    return (\n        <DropdownButton\n            title={title}\n            show={dpShow}\n            onClick={onClickDp}\n            variant=\"outline-primary\"\n        >\n            <CheckboxGroup \n                Checkbox={CheckboxDropdownItem}\n                itemsList={itemsList}\n                selected={selected}\n                rootCloseEvent=\"mousedown\"\n                onChange={onChange}\n                min={min}\n            />\n        </DropdownButton>       \n    );\n}","import Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function LoadingButton({title, onClick, loading, disabled, ...props}) {\n    return (\n        <Button \n            disabled={disabled || loading}\n            onClick={onClick}\n            {...props}\n        >{title}\n        {loading ? \n            <Spinner \n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                className=\"spinner-border ml-2\"\n            /> \n            : null}\n        </Button>\n    );\n}\n","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from \"react-bootstrap/Row\";\nimport CheckboxDropdownGroup from \"./CheckboxDropdownGroup\";\nimport LoadingButton from \"../common/LoadingButton\";\nimport \"./ItemsFilters.css\";\nimport React, { useCallback } from 'react';\n\n\nfunction ItemsFilters({\n    filters,\n    setFilter,\n    tagsList,\n    languages,\n    languagesList,\n    getItems,\n    disabled,\n    loading,\n    updateItems,\n    setLanguages\n}) {\n\n  const onKeyUp = useCallback(\n    (e) => {\n      if (e.charCode === 13) {\n        getItems();\n      }\n    },\n    [getItems], // Tells React to memoize regardless of arguments.\n  );\n\n\n  const onClickShortcut = useCallback(\n    (e) => {\n      let t = e.target.innerText;\n      console.log(t);\n      setFilter(t, () => {getItems();});\n    },\n    [setFilter, getItems], // Tells React to memoize regardless of arguments.\n  );\n\n    return (\n    <Form className=\"item-filters\">\n\n      <CheckboxDropdownGroup \n        title=\"Choose Languages\"\n        itemsList={languagesList}\n        selected={languages}\n        onChange={setLanguages}\n        min={1}\n      />\n\n\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>Tag to search: </Form.Label>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>place=city</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>boundary</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>leisure</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>highway</Button>\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={onClickShortcut}>waterway</Button>\n                  <Form.Control type=\"text\" value={filters.tags} onChange={tags => setFilter(tags.target.value)} onKeyPress={onKeyUp} />\n                </Form.Group>\n\n        <Row className=\"d-flex justify-content-end\">\n            <LoadingButton\n                title=\"Get names\"\n                variant=\"primary\"\n                onClick={getItems}\n                loading={loading.items}\n            />\n            <LoadingButton\n                title=\"Update names\"\n                variant=\"success\"\n                disabled={disabled.updates}\n                onClick={updateItems}\n                loading={loading.updates}\n            />\n        </Row>\n\n    </Form>\n    );\n}\n\nexport default ItemsFilters;\n","import ItemsFilters from \"./ItemsFilters\";\nexport default ItemsFilters;","\nexport default function ItemTableHeader({languages, onClick}) {\n    const titles =  [\"Category\", \"Name\",...languages.map(lang => `Name:${lang}`)];\n    return (\n        <tr>\n        {titles.map(title => \n            (<th \n                style={{cursor: \"pointer\"}}\n                key={title}\n                onClick={() => onClick(title.toLowerCase())}\n            >{title}\n            </th>))\n        }\n        </tr>\n    );\n}","import {useRef, useEffect} from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function Item({\n    item, \n    category,\n    languages, \n    focused,\n    handlers: {onFocus, onBlur, onChange, onIconClick}\n}) {\n    const firstInput = useRef(null);\n    useEffect(() => {\n        if (focused && \n            document.activeElement.id.indexOf(item.id+\"\") !== 0) {\n            firstInput.current.focus();\n        }\n    }, [focused, item]);\n    \n    return (\n        <tr>\n            <td className=\"category\">\n                <Badge variant=\"info\">\n                    {category}\n                </Badge><br />\n                <Badge variant=\"light\">\n                    {item.tags[category]}\n                </Badge>\n            </td>\n            <td>\n\n              {item.tags.wikidata && (<span><a target=\"_blank\" rel=\"noreferrer\" href={`https://www.wikidata.org/wiki/${item.tags.wikidata}`}>{item.tags.name}</a></span>)}\n              {!item.tags.wikidata && (<span>{item.tags.name}</span>)}\n\n                <i \n                    className=\"fa fa-crosshairs icon-btn mt-1\" \n                    style={{float: \"right\"}} \n                    onClick={() => onIconClick(item)}\n                />\n            </td>\n            {languages.map((lang, i) => (\n            <td key={lang}>\n                <input\n                    type=\"text\"\n                    id={item.id + lang}\n                    ref={i ? null : firstInput}\n                    value={item.tags[`name:${lang}`]||\"\"}    \n                    onChange={e => onChange(item, lang, e.target.value)}\n                    onFocus={() => focused ? null : onFocus(item.id)}\n                    onBlur={() => focused ? onBlur(item.id) : null}\n                />\n            </td>))}\n        </tr>\n    );\n}\n","\nimport {Fragment, useState} from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport ItemTableHeader from \"./ItemTableHeader\";\nimport ItemTableRow from \"./ItemTableRow\"\nimport \"./ItemsTable.css\";\n\n\nconst compareNames = (i1, i2, field) =>\n        (i1.tags[field]||\"\").localeCompare(i2.tags[field]||\"\");\n\nconst compareCategoryTag = (i1, i2) =>\n        i1.category.localeCompare(i2.caterory) ||\n        it.item.tags[i1.category].localeCompare(i2.item.tags[i2.category]);\n\nconst compareTags = (i1, i2, field) => field === \"category\" ?\n        compareCategoryTag(i1, i2)\n        : compareNames(i1.item, i2.item, field)\n\n\nfunction ItemsTable({\n    languages,\n    handlers,\n    items,\n    focused,\n    categories\n}) {\n    const [sortField, setField] = useState(\"name\");\n    const [sortOrder, setOrder] = useState(1);\n\n    const setSort = field => {\n        if(field === sortField)\n            setOrder(-sortOrder);\n        else\n            setField(field);\n    };\n\n    return (\n        <Fragment>\n            <Table size=\"sm\">\n                <thead>\n                    <ItemTableHeader\n                        languages={languages}\n                        onClick={setSort}\n                    />\n                </thead>\n                <tbody>\n                    {items\n                    .filter(i => i.tags.name)\n                    .map(item => ({\n                        item,\n                        category: categories.find(t => !!item.tags[t])\n                    }))\n                    .sort((i1, i2) => sortOrder * compareTags(i1, i2, sortField))\n                    .map(({item, category}) => (\n                    <ItemTableRow\n                        category={category}\n                        languages={languages}\n                        key={item.id}\n                        item={item}\n                        focused={focused === item.id}\n                        handlers={handlers}\n                    />)\n                    )}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n\n}\n\nexport default ItemsTable;\n","import ItemsTable from \"./ItemsTable\";\nexport default ItemsTable;","import {Fragment} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\n\nexport default function UserLoggedIn({user, logout}) {\n    return (\n        <Fragment>\n            {user.img ? \n                <Image \n                    src={user.img.href}\n                    className=\"avatar\" \n                    thumbnail \n                    rounded\n                /> \n                : null\n            }\n            <Navbar.Text className=\"mx-2\"\n                >{user.display_name}\n            </Navbar.Text>\n            <Button onClick={logout}>Logout</Button>\n        </Fragment>\n    );\n}","import LoadingButton from \"../common/LoadingButton\";\n\nexport default function UserLoggedOut({login, loading}) {\n    return (\n        <LoadingButton \n            title=\"Login\"\n            loading={loading}\n            onClick={login}\n        />\n    );\n}\n","import AppNavbar from \"./AppNavbar\";\n\nexport default AppNavbar;","\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./AppNavbar.css\";\nimport packageJson from '../../package.alias.json';\nimport UserLoggedIn from \"./UserLoggedIn\";\nimport UserLoggedOut from \"./UserLoggedOut\";\n//import logo from \"../../assets/logo.svg\";\n\nexport default function AppNavbar({user, login, logout, loading}) {\n    return (\n        <Navbar \n            variant=\"light\"\n            bg=\"white\"\n        >\n            <Navbar.Brand className=\"mr-auto\">\n              OSM Localization Tool (OsmLT)   <span className=\"version\">v{packageJson[\"version\"]} by Tracestrack</span>\n            </Navbar.Brand>\n        {user.loggedIn ? \n            <UserLoggedIn \n                logout={logout} \n                user={user} \n            />\n            : <UserLoggedOut \n                login={login} \n                loading={loading} \n            />\n        }\n        </Navbar>\n    );\n}\n","import {useState, useEffect} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nexport default function ChangesetBox({\n    changeset, \n    handlers: {onUpdate, onClose}}\n) {\n    const [newComment, setComment] = useState(changeset?.tags.comment||\"\");\n\n    useEffect(() => {\n        setComment(changeset?.tags.comment||getCookie(\"lastComment\")||\"\");\n    }, [changeset]);\n\n    return (\n        <Card \n            id=\"changeset-box\"\n            className=\"p-2\"    \n        >\n            <Card.Body>\n                <Row className=\"pb-2 justify-content-center\">\n                    <Form.Label>Comment:</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        value={newComment}\n                        onChange={e => setComment(e.target.value)}\n                    />\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <Button \n                      className=\"m-1\"\n                      onClick={() =>\n                        onClose({comment: newComment})\n                              }\n                    >\n                        Close changeset\n                    </Button>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n","import ChangesetSettings from \"./ChangesetSettings\";\nexport default ChangesetSettings;","import Button from \"react-bootstrap/Button\";\nimport ChangesetBox from \"./ChangesetBox\";\nimport \"./ChangesetSettings.css\";\nimport {useState, useEffect} from \"react\";\n\n\nexport default function ChangesetSettings({changeset, handlers}) {\n    const [visible, setVisible] = useState();\n\n    useEffect(() => {\n        if(!changeset)\n            setVisible(false);\n    }, [changeset]);\n\n    return (\n        <div id=\"changeset\">\n            <Button \n                id=\"changeset-button\"\n                onClick={() => setVisible(!visible)}\n                disabled={!changeset}\n            >{\n                changeset ? \n                `Active changeset: ${changeset.id}`\n                : \"No active changeset\"\n            }</Button>\n            {visible ?\n            <ChangesetBox  \n                changeset={changeset}\n                handlers={handlers}\n            />\n            : null}\n        </div>\n    );\n}","const defaultApiUrl = \"https://overpass-api.de/api/interpreter\";\n\nconst outTypes = \"qt body meta center\"; //we need meta for \"version\" field\n\nexport default class Overpass {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || defaultApiUrl;\n    }\n    request(query) {\n        const data = new FormData();\n        data.append(\"data\", query);\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n                },\n                body: new URLSearchParams(data)\n            })\n            .then(response => response.ok ?\n                response.json()\n                .then(({elements, remark}) => {\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        if(remark && remark.indexOf(\"error\") !== -1) {\n                            reject(remark);\n                        }\n                        resolve(elements);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n  /*\n    getTwins(el, tags) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const tagsStr = tags.filter(t => el.tags[t])\n                            .map(t => `[\"${t}\"=\"${el.tags[t]}\"]`);\n        const query =\n            `[out:json][timeout:25];\n            ${el.type}(${el.id});\n            complete(100) {\n                nwr(around:500)${tagsStr}[\"name\"=\"${el.tags.name}\"];\n            }\n            out ${outTypes};`\n\n        return this.request(query);\n    }*/\n    query({bbox, zoom, center, filters, languages}) {\n\n      var condition = filters.tags;\n      if (condition.indexOf(\"=\") > -1) {\n        condition = condition.replace(\"=\", '\"=\"');\n      }\n\n        const baseEls = [`nwr[\"${condition}\"][\"name\"]`];\n        const elementsQuery = filters.hideFilled ?\n            baseEls.map(base =>\n                languages.map(l => `${base}[!\"name:${l}\"]`)\n                .join(\";\\n\")\n            )\n            : baseEls.join(\";\\n\");\n\n\n        const limit = filters.limit ? \" \" + filters.limit : \"\";\n        const query =\n            `[out:json][timeout:25][bbox:${bbox.join(\",\")}];\n            (\n                ${elementsQuery};\n            );\n            out ${outTypes} ${limit};`;\n\n        return this.request(query);\n    }\n    getById(typesIds) {\n        const elementsQuery = typesIds.map(\n                                ([type, id]) => `${type}(${id})`).join(\";\");\n        const query =\n        `[out:json][timeout:25];\n        (\n            ${elementsQuery};\n        );\n        out ${outTypes};`;\n\n    return this.request(query);\n    }\n}\n","const apiUrl = \"https://nominatim.openstreetmap.org\";\nconst apiElemLimit = 50;\n\n\n\nexport default class NominatimAPI {\n    constructor(config = {}) {\n        this.apiUrl = config.apiUrl || apiUrl;\n    }\n    query({bbox, filters}, excludeIds=[]) {\n        const searchQuery = filters.searchMode === \"simple\" ?\n            [\"q=\" + filters.search.q]\n            : Object.entries(filters.search)\n                .filter(([k,val]) => k !== \"q\" && !!val)\n                .map(([k, val]) => `${k}=${val}`)\n        const params = [\n            ...searchQuery,\n            \"limit=\" + Math.min(filters.limit, apiElemLimit),\n          //\"viewbox=\" + bbox.map(c => c.reverse().join(\",\")).join(\",\"),\n            \"format=json\",\n            \"bounded=1\",\n            \"dedupe=1\"\n        ];\n\n        if(excludeIds.length) {\n            params.push(\"exclude_place_ids=\" + excludeIds.join(\",\"));\n        }\n        const reqId = performance.now();\n        this.reqId = reqId;\n        return new Promise((resolve, reject) => {\n            fetch(this.apiUrl + \"/search?\" + params.join(\"&\"))\n            .then(response => response.ok ?\n                response.json()\n                .then((resp) => {\n                    if(resp.error)\n                        reject(resp);\n                    if(this.reqId !== reqId)\n                        reject();\n                    else {\n                        resolve(resp);\n                    }\n                }) :\n                response.text()\n                .then(reject)\n\n                )\n            .catch(err => reject(err));\n        })\n    }\n}\n","import {osmAuth} from \"osm-auth\";\nimport Overpass from \"./Overpass\";\nimport Nominatim from \"./Nominatim\";\n\n// tag to identify changesets created by app\nconst appTag = \"OSM Localization Tool (OsmLT): https://localize.osm.tracestrack.com\";\n\n\nvar XML_CHAR_MAP = {\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'&': '&amp;',\n\t'\"': '&quot;',\n\t\"'\": '&apos;'\n};\n\nfunction escapeXml (s) {\n  if (typeof s !== \"string\") return s;\n\n  return s.replace(/[<>&\"']/g, function (ch) {\n    return XML_CHAR_MAP[ch];\n  });\n}\n\nfunction json2xml(json) {\n    return Object.entries(json)\n    .map(([k, v]) => {\n        let attrs = [];\n        let children = \"\";\n        Object.entries(v)\n        .forEach(([k1, v1]) => {\n            if(Array.isArray(v1)) {\n                const k11 = k1.replace(/s$/, \"\");\n                children += v1.map(obj => json2xml({[k11]: obj}))\n                            .join(\"\");\n            } else if(typeof(v1) === \"object\") {\n                children += json2xml({[k1]: v1});\n            } else {\n                attrs.push([k1, escapeXml(v1)]);\n            }\n        });\n\n        const attrsStr = attrs.map(([k1, v1]) => `${k1}=\"${v1}\"`).join(\" \");\n        return children ?\n        `<${k} ${attrsStr}>${children}</${k}>`\n        : `<${k} ${attrsStr}/>`;\n    })\n    .join(\"\");\n}\n\nfunction createChangeset() {\n    return json2xml({\n        osm: {\n            changeset: [\n                {tag: {k: \"created_by\", v: appTag}},\n                {tag: {k: \"comment\",    v: \"\"}}\n            ]\n        }\n    });\n}\nfunction createOsm(changeset) {\n    return json2xml({\n        osm: {\n            changeset: {\n                tags:  Object.entries(changeset.tags)\n                .map(([k, v]) => ({k, v}))\n            }\n        }\n    });\n}\n\nfunction createOsmChange(updates, changesetId) {\n    return json2xml({\n        osmChange: {\n            version: \"0.6\",\n            generator: appTag,\n            modify: Object.values(updates)\n                    .map(({type, tags, nodes, members, ...attrs}) => ({\n                        [type]: {\n                            ...attrs,\n                            changeset: changesetId,\n                            tags: Object.entries(tags)\n                                    .map(([k, v]) => ({k, v})),\n                            // way\n                            ...(nodes ? {nd: nodes.map(id => ({ref: id}))} : {}),\n                            // relation\n                            ...(members ? {members} : {})\n                        }\n                    }))\n        }\n    });\n}\n\nconst constrain = coords => coords.map((c, i) => i % 2 ? (c+180) % 360 - 180 : c % 90);\n\n/*\nfunction uniq(items, tags) {\n    const un = {};\n    return items.filter(i => {\n        const k = i.tags.name + tags.map(t => t + i.tags[t] ).join(\"\");\n        if(!un[k]) {\n            un[k] = 1;\n            return true;\n        }\n        return false;\n    });\n}*/\n\nexport default class OSMApi {\n    constructor(config) {\n        this.config = config;\n        this.auth = osmAuth({\n            ...config\n        });\n        this.overpass = new Overpass({\n            apiUrl: config.overpassApiUrl\n        });\n        this.nominatim = new Nominatim();\n        this.apiRoute = \"/api/0.6\";\n        this.currentChangeset = config.changeset || false;\n    }\n    fetch(route, options = {}) {\n        // wrapper for osm-auth and underlying ohauth to provide\n        // more fetch-alike interface\n        const {method, body, headers = {}, ...opts} = options;\n        return new Promise((resolve, reject) =>\n            this.auth.xhr({\n                method: method || 'GET',\n                path: this.apiRoute + route,\n                content: body,\n                options: {\n                    header: headers,\n                    ...opts\n                }\n            }, function(err, res) {\n                if(!err) {\n                    resolve(res);\n                } else {\n                    reject(err);\n                }\n            })\n        );\n    }\n    fetchJson(route, options) {\n        return this.fetch(route, options)\n                .then(res => JSON.parse(res));\n    }\n    authenticated() {\n        return this.auth.authenticated();\n    }\n    login() {\n        return new Promise(resolve =>\n            this.auth.authenticate(res => {\n                resolve(res);\n            })\n        );\n    }\n    logout() {\n        this.auth.logout();\n    }\n    getUser() {\n        return this.fetchJson(\"/user/details.json\");\n    }\n    getElements(opts) {\n        opts = {\n            ...opts,\n            bbox: opts.bbox.map(constrain)\n        };\n        if(opts.filters.mode === \"search\") {\n            return this.nominatimIncSearch(opts);\n        }\n        return this.overpass.query(opts)\n        .then(items => {\n            // filter out the items with the same name and selected category tags\n            // eg. there are could be multiple ways representing one street\n\n            //items = uniq(items, opts.filters.tags);\n            return items;\n        });\n    }\n    nominatimIncSearch(opts, collected = []) {\n        // Limit of results in Nominatim is just 50\n        // to load more, we need to repeat the request to its API\n        // with query param \"exclude_place_ids\" to exclude already loaded.\n        // Nominatim objects are places, but we need nodes, ways and relations,\n        // so it neccessary to get them from Overpass then.\n        const limit = opts.filters.limit;\n        const exclude = collected.map(el => el.place_id);\n        return this.nominatim.query(opts, exclude)\n            .then(elemsNom => {\n                collected = [...elemsNom, ...collected];\n                if(!collected.length)\n                    return [];\n\n                if(limit && elemsNom.length &&\n                   collected.length < limit) {\n                  // to keep it simple, we don't need to support limit\n                  //return this.nominatimIncSearch(opts, collected);\n                }\n                return this.overpass.getById(\n                    collected.map(el => [el.osm_type, el.osm_id])\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n                if(collected.length) {\n                    return this.overpass.getById(\n                        collected.map(el => [el.osm_type, el.osm_id])\n                    );\n                }\n            });\n    }\n    getTwins(el, tags) {\n        return this.overpass.getTwins(el, tags);\n    }\n\n    updateElements(updates) {\n        if(!this.currentChangeset) {\n            return this.createChangeset()\n            .then(() => this.updateChangeset(updates));\n        }\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this.updateChangeset(updates));\n            }\n            return this.updateChangeset(updates);\n        });\n    }\n    getChangesets() {\n        return this.fetch(\"/changesets\");\n    }\n    getCurrentChangeset() {\n        return this.checkChangesetOpen()\n        .then(open => {\n            if(!open) {\n                return this.createChangeset()\n                .then(() => this._getCurrentChangeset());\n            }\n            return this._getCurrentChangeset();\n        })\n    }\n    _getCurrentChangeset() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => res.elements[0]);\n    }\n    createChangeset() {\n        return this.fetch(\"/changeset/create\", {\n            method: \"PUT\",\n            body: createChangeset(),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        }).then(createdId => {\n            this.currentChangeset = createdId;\n        });\n    }\n    checkChangesetOpen() {\n        return this.fetchJson(`/changeset/${this.currentChangeset}.json`)\n        .then(res => {\n            return res.elements?.pop().open;\n        })\n    }\n  closeChangeset(changeset, cb) {\n\n      this.fetch(`/changeset/${this.currentChangeset}`, {\n        method: \"PUT\",\n        body: createOsm(changeset),\n        headers: {\n          'Content-Type': \"text/plain\"\n        }\n      }).then(() => {\n        this.fetch(`/changeset/${this.currentChangeset}/close`, {\n          method: \"PUT\",\n        }).then(() => {\n          this.currentChangeset = false;\n          cb();\n        });\n      });\n    }\n\n    updateChangeset(updates) {\n        return this.fetch(`/changeset/${this.currentChangeset}/upload`, {\n            method: \"POST\",\n            body: createOsmChange(updates, this.currentChangeset),\n            headers: {\n                'Content-Type': \"text/plain\"\n            }\n        })\n        .then(diffRes => {\n            // the format of responce is xml document like:\n            //\n            // <diffResult generator=\"OpenStreetMap Server\" version=\"0.6\">\n\t        //     <node|way|relation old_id=\"#\" new_id=\"#\" new_version=\"#\"/>\n            //  </diffResult>\n            //\n            // old_id == new_id, because we apply only modify\n\n            return Object.fromEntries(\n                Array.from(diffRes.children[0].children)\n                .map(el => [\n                    el.getAttribute(\"new_id\"), {\n                        version: +el.getAttribute(\"new_version\")\n                    }]));\n        });\n    }\n\n}\n","// Some abstraction for document.cookie handling\n\nexport default class CookieManager {\n    constructor(duration = 365 * 24 * 3600) {\n        this.cookieDuration = duration;\n    }\n    \n    get(key) {\n        const value = document.cookie.split(';')\n                                     .find(s => s.indexOf(key + '=') !== -1);\n        return value ? \n              value.replace(key + '=', '').trim() \n            : false;\n    }\n    write(dict, duration = this.cookieDuration) {\n        const dateStr = new Date(Date.now() + duration * 1000)\n                            .toUTCString();\n\n        Object.entries(dict)\n        .forEach(([k, v]) => {\n            document.cookie = `${k}=${v}; path=/; expires=${dateStr}`;\n        });\n    }\n\n    clear() {        \n        document.cookie.split(';')\n        .forEach(s => {\n            const k = s.split('=')[0];\n            document.cookie = `${k}=; path=/`;\n        });\n    }\n}\n","// helper class to sync results from overpass api with latest updates\n\nconst hasEmpty = (item, langs) => langs.find(l => !(item.tags[`name:${l}`]));\n\n\nexport default class UpdatesStorage {\n    updates = {};\n    storageKey = \"osm-localizer_updated-items\";\n    load() {\n        if(window.localStorage) {\n            const data = localStorage.getItem(this.storageKey);\n            if(data) {\n                this.updates = JSON.parse(data);\n            }\n        }\n    }\n    store() {\n        if(window.localStorage) {\n            localStorage.setItem(this.storageKey, JSON.stringify(this.updates));\n        }\n    }\n    patchAndStore(items, diff) {\n        for(let id in diff) {\n            if(items[id]) {\n                items[id] = {...items[id], ...diff[id]};\n                this.updates[id] = items[id];\n            }\n        }\n        this.store();\n    }\n    sync(items, hideFilled, langs) {\n        const itemsSync = [];\n        for(let i = 0, n = items.length; i < n; i++) {\n            const id = items[i].id;\n            if(this.updates[id]) {\n                if(this.updates[id].version > items[i].version) {\n                    // if hideFilled = true, then we need manually filter out\n                    // items with filled fields, which operass doesn't know\n                    // about yet.\n                    if(!hideFilled || hasEmpty(this.updates[id], langs))\n                        itemsSync.push(this.updates[id]);\n                } else {\n                    delete this.updates[id];\n                    itemsSync.push(items[i]);\n                }\n            } else {\n                itemsSync.push(items[i]);\n            }\n        }\n        this.store();\n        return itemsSync;\n    }\n}","/* eslint-disable */\n\nconst mainServer = {\n    client_id: \"M8nzCZPZGnlJoSrGAMbzsGXXZYtMPg_eyoyEjCyCydo\",\n    client_secret:       \"SdRMd2ReOVMO0VeWVdNuhY0hyYgbbLwMGAusMnO47Hs \",\n    url:                \"https://www.openstreetmap.org\",\n    redirect_uri: 'https://localize.osm.tracestrack.com/land.html',\n    apiUrl: 'https://api.openstreetmap.org',\n    scope: 'write_api'\n};\n\n// use this when testing new features to not spoil main osm database\nconst devServer = {\n    client_id: 'M8nzCZPZGnlJoSrGAMbzsGXXZYtMPg_eyoyEjCyCydo',\n    client_secret:       'SdRMd2ReOVMO0VeWVdNuhY0hyYgbbLwMGAusMnO47Hs',\n    url:                \"https://master.apis.dev.openstreetmap.org\",\n    redirect_uri: 'http://127.0.0.1:8080/land.html',\n    apiUrl: 'https://api.openstreetmap.org',\n};\n\nconst authConfig = {   \n    ...mainServer,\n  overpassApiUrl:     \"https://overpass.kumi.systems/api/interpreter\"\n  //overpassApiUrl: \"https://overpass.nchc.org.tw/api/interpreter\"\n};\nexport default authConfig;\n","\nconst languagesList = [ \n    { key: \"de\", title: \"Deutsch\" },\n    { key: \"en\", title: \"English\" },\n    { key: \"fr\", title: \"Français\"},\n    { key: \"ja\", title: \"日本語\" },\n    { key: \"ru\", title: \"Русский\" },\n    { key: \"zh-Hans\", title: \"简体中文\" },\n    { key: \"zh-Hant\", title: \"繁体中文\" },\n    { key: \"zh\", title: \"中文\" },\n    { key: \"ml\", title: \"മലയാളം\" },\n    { key: \"ta\", title: \"தமிழ்\" },\n    { key: \"kn\", title: \"ಕನ್ನಡ\" },\n    { key: \"bn\", title: \"বাংলা\" },\n    { key: \"te\", title: \"తెలుగు\" },\n    { key: \"pa\", title: \"ਪੰਜਾਬੀ\" },\n    { key: \"hi\", title: \"हिन्दी\" },\n    { key: \"it\", title: \"Italiano\" },\n    { key: \"or\", title: \"ଓଡ଼ିଆ\" }\n];\n\nconst tagsList = [\n    //{key: \"aerialway\",          title: \"Aerialway\"},\n    //{key: \"aerolway\",           title: \"Aeroway\"},\n    {key: \"amenity\",            title: \"Amenity\"},\n    //{key: \"barrier\",            title: \"Barrier\"},\n    //{key: \"boundary\",           title: \"Boundary\" },\n    {key: \"building\",           title: \"Building\" },\n    //{key: \"craft\",              title: \"Craft\" },\n    //{key: \"emergency\",          title: \"Emergency\" },\n    //{key: \"geological\",         title: \"Geological\" },\n    //{key: \"healthcare\",         title: \"Healthcare\"},\n    {key: \"highway\",            title: \"Highway\"},\n    //{key: \"historic\",           title: \"Historic\"},\n    {key: \"landuse\",            title: \"Landuse\"},\n    {key: \"leisure\",            title: \"Leisure\"},\n    {key: \"man_made\",           title: \"Man-made\"},\n    //{key: \"military\",           title: \"Military\"},\n    {key: \"natural\",            title: \"Natural\"},\n    //{key: \"office\",             title: \"Office\"},\n    {key: \"place\",              title: \"Place\" },\n    //{key: \"power\",              title: \"Power\" },\n    {key: \"public_transport\",   title: \"Public transport\" },\n    {key: \"railway\",            title: \"Railway\" },\n    {key: \"route\",              title: \"Route\" },\n    //{key: \"shop\",               title: \"Shop\" },\n    //{key: \"telecom\",            title: \"Telecom\" },\n    {key: \"tourism\",            title: \"Tourism\" },\n    {key: \"waterway\",           title: \"Waterway\"}\n];\n\nexport {\n    languagesList, \n    tagsList\n};\n","import {Fragment, Component} from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Card from \"react-bootstrap/Card\";\nimport Map from \"./components/Map\";\nimport NotLoggedInGreeting from \"./components/NotLoggedInGreeting\";\nimport ItemsFilters from \"./components/ItemsFilters\";\nimport ItemsTable from \"./components/ItemsTable\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ChangesetSettings from \"./components/ChangesetSettings\";\nimport OSMApi from \"./api/OSM\";\nimport CookieManager from \"./utils/CookieManager\";\nimport UpdatesStorage from \"./utils/UpdatesStorage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport authConfig from \"./config/auth\";\nimport {languagesList, tagsList} from \"./config/interface\";\n\nconst cookieKeys = {\n    languages: \"_osm-localization_languages\",\n    changeset: \"_osm-locatization_changeset\"\n};\n\nconst itemCenter = item => item.center ?\n                            [item.center.lat, item.center.lon]\n                          : [item.lat, item.lon];\nconst itemMinZoom = 14;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.cookieManager = new CookieManager();\n        this.osmApi = new OSMApi({\n            ...authConfig,\n            changeset: this.cookieManager.get(cookieKeys.changeset)\n        });\n        this.updatesStorage = new UpdatesStorage();\n        this.updatesStorage.load();\n        const {zoom, center} = this.parseURLPath();\n        const filters = this.parseURLQuery();\n\n        this.bbox = [];\n        this.state = {\n            user: {\n                loggedIn: false\n            },\n            center,\n            zoom,\n            filters,\n            items: [],\n            itemsToUpdate: {},\n            focusedItem: false,\n            watchFocus: false, // center map on focused item\n            loading: {\n                items: false,\n                updates: false,\n                auth: false\n            },\n            serverMsg: {\n                error: false,\n                text: \"\"\n            },\n            changeset: null,\n            lastReqTags: []\n        };\n    }\n    parseURLPath() {\n        let zoom = 6;\n        let center = [0, 0];\n        const hash = window.location.hash.replace(\"#/\", \"\");\n        if (hash) {\n            const [z, lat, lng] = hash.split(\"/\");\n            zoom = +z;\n            center = [+lat, +lng];\n        }\n\n        return {zoom, center};\n    }\n    parseURLQuery() {\n        const filters = {\n            tags: [\"place\"],\n            limit: 100,\n            hideFilled: false,\n            search: {\n                q: \"\",\n                street:  \"\",\n                city: \"\",\n                county: \"\",\n                state: \"\",\n                country: \"\",\n                postalcode: \"\"\n            },\n            searchMode: \"simple\",\n            mode: \"tags\"\n        };\n        const search = window.location.search.replace(\"?\", \"\");\n        if(search) {\n            const params = Object.fromEntries(\n                search.split(\"&\")\n                .map(e => e.split(\"=\"))\n            );\n            if(params.tags) {\n                  filters.tags = decodeURIComponent(params.tags);\n            }\n            if(params.search) {\n                try {\n                    const searchParams = JSON.parse(decodeURI(params.search));\n                    for(let k in filters.search) {\n                        filters.search[k] = searchParams[k] || filters.search[k];\n                        if(k !== \"q\" && !!searchParams[k])\n                            filters.searchMode = \"structured\";\n                    }\n                    if(!params.tags) {\n                        filters.mode = \"search\";\n                    }\n                } catch (e) {\n\n                }\n            }\n            if(params.limit) {\n                const n = parseInt(params.limit);\n                if(!isNaN(n))\n                    filters.limit = n;\n            }\n            if(params.hide_filled) {\n                filters.hideFilled = params.hide_filled &&\n                                    +params.hide_filled !== 0;\n            }\n        }\n        return filters;\n    }\n    loadChangeset() {\n        if(this.osmApi.currentChangeset) {\n            this.osmApi.getCurrentChangeset()\n            .then(changeset => {\n                console.log(changeset)\n                this.setState({changeset});\n            })\n        }\n    }\n\n    closeChangeset({comment}) {\n      let changeset = {\n                ...this.state.changeset,\n                tags: {\n                    ...this.state.changeset.tags,\n                    comment\n                }\n      };\n\n      if (changeset.tags.comment === \"\") {\n        alert(\"Please add a commit message first.\");\n      }\n\n      console.log(changeset);\n\n      let _t = this;\n      this.osmApi.closeChangeset(changeset, () => {\n        //_t.setState({changeset: null});\n        _t.cookieManager.write({\n          \"lastComment\": comment\n        });\n        window.location.reload();\n      }\n      );\n    }\n\n    updateLocation(replace=false) {\n        const {\n            zoom,\n            center: [lat, lng],\n            filters: {tags, limit, hideFilled, search, mode, searchMode}\n        } = this.state;\n\n        const hash = [\"/#\", zoom, lat.toFixed(4), lng.toFixed(4)].join(\"/\");\n        const searchParts = [];\n        if(mode === \"search\") {\n            const {q, ...structured} = search;\n            const searchObj = (searchMode === \"simple\") ?\n                               {q}\n                              : structured;\n\n            searchParts.push(`search=${JSON.stringify(searchObj)}`);\n        }\n        else {\n            searchParts.push(`tags=${encodeURIComponent(tags)}`);\n            if(hideFilled)\n                searchParts.push(`hide_filled=1`);\n        }\n        if(limit)\n            searchParts.push(`limit=${limit}`);\n\n        const searchQ = \"?\" + searchParts.join(\"&\");\n\n        let url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + searchQ + hash;\n\n        if(replace)\n            window.history.replaceState({searchQ, hash}, '', url);\n        else\n            window.history.pushState({searchQ, hash}, '', url);\n    }\n    componentDidMount() {\n        if(this.osmApi.authenticated()) {\n            this.getUser();\n        }\n    }\n  setServerMsg(serverMsg) {\n    console.log(serverMsg);\n        this.setState({serverMsg});\n        const fn = () => {\n            document.removeEventListener(\"click\", fn);\n            this.setState({serverMsg: {\n                error: false,\n                text: \"\"\n            }});\n        }\n        document.addEventListener(\"click\", fn);\n    }\n    login() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                auth: true\n            }\n        });\n        this.osmApi.login()\n        .then(() => {\n            this.getUser();\n        });\n    }\n    getLanguages() {\n        const str = this.cookieManager.get(cookieKeys.languages);\n        return str ? str.split(\"+\") : false;\n    }\n    setLanguages(languages) {\n        this.setState({\n            user: {\n                ...this.state.user,\n                languages\n            }\n        });\n        this.storeLanguages(languages);\n    }\n    storeLanguages(languages) {\n        this.cookieManager.write({\n            [cookieKeys.languages]: languages.join(\"+\")\n        });\n    }\n    getUser() {\n        this.osmApi.getUser()\n        .then(res => {\n            let languages = this.getLanguages() ||\n                            res.user.languages.filter(l =>\n                                languagesList.find(({key}) => key === l)\n                            );\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    auth: false\n                },\n                user: {\n                    loggedIn: true,\n                    ...res.user,\n                    languages\n                }\n            });\n            this.storeLanguages(languages);\n            this.loadChangeset();\n        });\n    }\n    logout() {\n        this.osmApi.logout();\n        this.setState({\n            user: {\n                loggedIn: false\n            }\n        });\n    }\n  getItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                items: true\n            }\n        });\n        this.osmApi.getElements({\n            center: this.state.center,\n            zoom: this.state.zoom,\n            bbox: this.bbox,\n            filters: this.state.filters,\n            languages: this.state.user.languages\n        })\n        .then(items => {\n            this.setState({\n                items: this.updatesStorage.sync(items,\n                                                this.state.filters.hideFilled,\n                                                this.state.user.languages),\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                },\n                lastReqTags: this.state.filters.mode === \"search\" ?\n                                  tagsList.map(t => t.key)\n                                : this.state.filters.tags.slice()\n            });\n        })\n        .catch(err => {\n            console.log(err)\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    items: false\n                }\n            });\n            this.setServerMsg({\n                text: err,\n                error: true\n            });\n        });\n    }\n    updatePosition({bbox, center, zoom}) {\n        this.setState(\n            {center, zoom},\n            () => this.updateLocation(true));\n        this.bbox = bbox;\n    }\n    updateBbox({bbox}) {\n        this.bbox = bbox;\n    }\n    updateItem(item, lang, value) {\n      item.tags[`name:${lang}`] = value;\n      /*\n        if(!item.twins) {\n            // get all the items with the same name and tags\n            item.twins = [];\n            this.osmApi.getTwins(item, this.state.filters.tags)\n            .then(twins => {\n                item.twins = twins;\n                item.twins.forEach(i => {\n                    i.tags[`name:${lang}`] = value;\n                });\n            });\n        } else {\n            item.twins.forEach(i => {\n                i.tags[`name:${lang}`] = value;\n            });\n        }*/\n        this.setState({itemsToUpdate: {\n            ...this.state.itemsToUpdate,\n            [item.id]: item\n        }});\n    }\n  setFilter(updates, doneCb) {\n    console.log(updates);\n        this.setState({\n            filters: {\n                ...this.state.filters,\n              ...{tags: updates}\n            }\n        }, () => {this.updateLocation();\n                  if (doneCb) doneCb();\n                 });\n    }\n    updateItems() {\n        this.setState({\n            loading: {\n                ...this.state.loading,\n                updates: true\n            }\n        });\n      let items = this.state.itemsToUpdate;\n/*        Object.values(this.state.itemsToUpdate)\n            .forEach(i => {\n            let {twins, ...self} = i;\n            items[self.id] = self;\n            twins.forEach(t => {\n                items[t.id] = t;\n            });\n            }); */\n      console.log(items);\n        this.osmApi.updateElements(items)\n        .then(diff => {\n            this.updatesStorage.patchAndStore(\n                this.state.itemsToUpdate, diff\n            );\n            this.cookieManager.write({\n                [cookieKeys.changeset]: this.osmApi.currentChangeset\n            });\n\n            this.setServerMsg({\n                text: \"Items are successfully updated.\",\n                error: false\n            });\n\n            this.setState({\n                itemsToUpdate: {},\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n            this.loadChangeset();\n        })\n        .catch(err => {\n            this.setServerMsg({\n                text: String.toString(err),\n                error: true\n            });\n\n            this.setState({\n                loading: {\n                    ...this.state.loading,\n                    updates: false\n                }\n            });\n        });\n    }\n    focusItem(itemId) {\n        if(this.state.watchFocus) {\n            const item = this.state.items.find(i => i.id === itemId);\n            this.setState({\n                center: itemCenter(item),\n                focusedItem: itemId\n            });\n        } else {\n            this.setState({\n                focusedItem: itemId\n            });\n        }\n    }\n    blurItem() {\n        this.setState({\n            focusedItem: false\n        });\n    }\n    centerItem(item) {\n        this.setState({\n            center: itemCenter(item),\n            zoom: Math.max(this.state.zoom, itemMinZoom)\n        });\n    }\n    render() {\n        const btnsDisabled = {\n            // query for a large bbox is too slow and won't work\n            // also don't load new items till updates are not done and synced\n            items: this.state.loading.updates ||\n                (this.state.filters.mode === \"tags\" ?\n                    this.state.zoom < 10\n                    :  !(this.state.filters.searchMode === \"simple\" ?\n                            this.state.filters.search.q\n                            : Object.entries(this.state.filters.search)\n                                .find(([k,v]) => k !== \"q\" && !!v)\n                )),\n            // nothing to update\n            updates: !Object.keys(this.state.itemsToUpdate).length\n        };\n        const touchedItems  = Object.keys(this.state.itemsToUpdate).map(s => +s);\n        const mapHandlers = {\n            onLoad:      this.updateBbox.bind(this),\n            onMove:      this.updatePosition.bind(this),\n            onClickItem: this.focusItem.bind(this),\n            onClickMap:  this.blurItem.bind(this),\n        };\n\n        const itemHandlers = {\n            onFocus:     this.focusItem.bind(this),\n            onBlur:      this.blurItem.bind(this),\n            onChange:    this.updateItem.bind(this),\n            onIconClick: this.centerItem.bind(this)\n        };\n        const changesetHandlers = {\n            onClose:    this.closeChangeset.bind(this)\n        };\n\n        const lang = this.state.user.languages ?\n            this.state.user.languages[0]\n            : \"en\";\n\n        const tags = tagsList.map(t => t.key);\n        return (\n            <Container className=\"App\" fluid>\n                <AppNavbar\n                    login={this.login.bind(this)}\n                    logout={this.logout.bind(this)}\n                    user={this.state.user}\n                    loading={this.state.loading.auth}\n                />\n                <Map\n                    zoom={this.state.zoom}\n                    center={this.state.center}\n                    items={this.state.items}\n                    lang={lang}\n                    touched={touchedItems}\n                    focused={this.state.focusedItem}\n                    watchFocus={this.state.watchFocus}\n                    handlers={mapHandlers}\n                />\n                <Card\n                    className=\"card-items card p-1\"\n                >{\n                this.state.user.loggedIn ?\n                    <Fragment>\n                        <Card.Header>\n                            <ItemsFilters\n                                filters={this.state.filters}\n                                setFilter={this.setFilter.bind(this)}\n                                tagsList={tagsList}\n                                loading={this.state.loading}\n                                languages={this.state.user.languages||[]}\n                                languagesList={languagesList}\n                                setLanguages={this.setLanguages.bind(this)}\n                                items={this.state.items}\n                                getItems={this.getItems.bind(this)}\n                                disabled={btnsDisabled}\n                                updateItems={this.updateItems.bind(this)}\n                            />\n                            <div className={this.state.serverMsg.error ?\n                                              \"text-danger\"\n                                            : \"text-success\"}>\n                                {this.state.serverMsg.text}\n                            </div>\n                        </Card.Header>\n                        <Card.Body\n                            className={this.state.loading.items ?\n                                      \"items-loading\"\n                                      : \"\"}\n                        >\n                            <ItemsTable\n                                categories={tags}\n                                languages={this.state.user.languages||[]}\n                                items={this.state.items}\n                                focused={this.state.focusedItem}\n                                handlers={itemHandlers}\n                            />\n\n                        </Card.Body>\n                    </Fragment>\n                    :  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                            <NotLoggedInGreeting />\n                        </Card.Body>\n                }</Card>\n                <ChangesetSettings\n                    changeset={this.state.changeset}\n                    handlers={changesetHandlers}\n                />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}